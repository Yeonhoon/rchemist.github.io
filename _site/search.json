[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "헬스케어 빅데이터를 다루는 데이터사이언티스트입니다. 😃\n\nSkillsEducationExperience\n\n\n\n\n\n\n\n\n\n\n\nMPH, Graduate School of Public Health, Seoul National University\nBS, Chinese language and literature, Konkuk University\n\n\n\n\nComento | Mentor | Sept 2022 - present\nSNUBH | Data scientist | June 2021 - present"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to the blog of Rchemist",
    "section": "",
    "text": "헬스케어 데이터를 다루는 데이터 사이언티스트입니다. 데이터 분석, 데이터 사이언스, 웹 개발에 관심이 있습니다.😃\n \n  \n   \n  \n    \n     Linkedin\n  \n  \n    \n     Email"
  },
  {
    "objectID": "index.html#recent-posts",
    "href": "index.html#recent-posts",
    "title": "Welcome to the blog of Rchemist",
    "section": "Recent posts",
    "text": "Recent posts\n\n\n\n\n\n\n\n\n\n\n\n\n\nPosts\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nmlr3 하이퍼파라미터 튜닝\n\n\n\n\n\nmlr3를 이용한 하이퍼파라미터 튜닝 학습\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\n학습관점에서 비교하는 dplyr과 data.table\n\n\n\n\n\n\n\n\n\n\n\n\n\nFeb 27, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2023-01-19-ojs/index.html",
    "href": "posts/2023-01-19-ojs/index.html",
    "title": "Observable.js",
    "section": "",
    "text": "PlotData\n\n\n\n\n\n\nviewof bill_length_min = Inputs.range([32,50],\n{value: 35, step:1, label: \"Bill length (min)\"})\n\nviewof islands = Inputs.checkbox(\n  [\"Torgersen\",\"Biscoe\",\"Dream\"],\n  {value: [\"Torgersen\",\"Biscoe\"],\n    label: \"Islands:\"\n  }\n)\n\nfiltered = transpose(data).filter(function(penguin){\n  return bill_length_min < penguin.bill_length_mm && islands.includes(penguin.island)\n});\n\n\nPlot.rectY(filtered,\n  Plot.binX(\n    {y: \"count\"},\n    {x: \"body_mass_g\", fill: \"species\", thresholds: 20}\n  ))\n  .plot({\n    facet: {\n      data: filtered,\n      x: \"sex\",\n      y: \"species\",\n      marginRight:80\n    },\n    marks: [\n      Plot.frame(),\n    ]\n  })\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInputs.table(filtered)"
  },
  {
    "objectID": "posts/2023-01-19-quarto-intro/index.html",
    "href": "posts/2023-01-19-quarto-intro/index.html",
    "title": "Quarto 사용법",
    "section": "",
    "text": "Quarto는 Rmarkdown을 계승하는 차세대 문서양식입니다.\n이미 아실지 모르겠지만, RStudio는 R 뿐만 아니라 Python까지 지원하고 있습니다 (reticulate란 패키지를 통해).\n다만 Rstudio 라는 이름 때문인지, Python 유저들은 jupyter를 주로 사용했던 것 같습니다.\n\n아무튼 2022년 12월 이후, RStudio사는 POSIT으로 사명을 변경하였습니다. 이는 RStudio가 R 사용자만을 위한 통합개발환경 (Integrated Development Environment, IDE)에서 벗어나 R, Python, Julia 등을 사용하는 모든 데이터 사이언티스들을 위한 IDE를 추구한다는 의미라고 볼 수 있습니다.\n\nQuarto 역시 마찬가지입니다. 전신이었던 Rmarkdown이 갖는 이름에서 벗어나 Quarto라는 새로운 이름을 통해 R과 Python 유저 모두 편리하게 사용할 수 있는 document 양식을 지향합니다.\n실제로 Quarto는 기존의 Rmarkdown 사용자를 위한 knitr 뿐만 아니라 python의 jupyter notebook 사용자들을 위한 jupyter 모드도 사용이 가능합니다.\n더 자세한 내용은 Quarto 홈페이지를 참고하세요!"
  },
  {
    "objectID": "posts/2023-01-19-quarto-intro/index.html#quarto-준비하기",
    "href": "posts/2023-01-19-quarto-intro/index.html#quarto-준비하기",
    "title": "Quarto 사용법",
    "section": "Quarto 준비하기",
    "text": "Quarto 준비하기\nQuarto를 사용하기 위해서는 Quarto 패키지를 설치해야 합니다.\n\n\n# not run\ninstall.packages('quarto')\n\nQuarto 설치가 완료되었다면 RStudio의 좌측 상단에서 Quarto document를 생성할 수 있습니다.\n\n\nQuarto document는 .qmd 확장자로 끝나는 파일입니다.\n.qmd 파일은 Source 에디터, Visual 에디터로 작업을 수행할 수 있습니다. 특히 Visual 에디터는 다양한 markdown 문법들을 단축키들을 활용해 원하는 문서를 쉽게 만들 수 있다는 장점이 있습니다."
  },
  {
    "objectID": "posts/2023-01-19-quarto-intro/index.html#quarto의-구조",
    "href": "posts/2023-01-19-quarto-intro/index.html#quarto의-구조",
    "title": "Quarto 사용법",
    "section": "Quarto의 구조",
    "text": "Quarto의 구조\nQuarto는 크게 3가지의 부분으로 구성됩니다.\n\n1) YAML\nYAML은 YAML Ain’t Markup Language의 이름을 갖고 있는 언어로, 가독성에 초점을 두고 개발되었습니다.\nQuarto의 시작 부분에 문서 형식을 설정하는 용도로 yaml문법을 이용합니다.\n\n대표적으로 설정해줄 수 있는 옵션은 다음과 같습니다.\n\ntoc: markdown의 목차를 한눈에 볼 수 있게 색인을 생성합니다.\ntoc-location: toc의 위치를 설정합니다. left, right\ncode-fold: r 코드 부분을 접거나 펼 수 있습니다.\ntheme: Quarto의 문서 테마를 지정할 수 있습니다. 참고\n\n그 외 설명은 quarto 공식 홈페이지를 참고하세요.\n\n\n2) R code\nr chunk를 만드는 방법은 (백틱``)을 3번 입력하거나, 단축키(ctrl+shift+i)를 이용하면 됩니다.\n\n\n\n3) markdown\n간단한 markdown 문법을 소개합니다. quarto의 visual 에디터를 이용할 때의 단축키도 첨부합니다.\n\nHeader\n제목과 같이 큰 글자는 #의 개수에 따라 달라집니다.\n\n\n글자 옵션\nquarto에서 사용할 수 있는 텍스트 옵션들은 다음과 같습니다.\n\n굵게: Asterisk (ctrl + b)\n기울이기: Asterisk (ctrl + i)\n밑줄:  Asterisk  (ctrl + u)\nsuperscript: R2 (^텍스트^)\nsubscript: HRmax - HRmin (~텍스트~)\nstrike through : 밑줄찍찍 (~~텍스트~~)\nverbatim code: Quarto (ctrl + d)\n글자 색상 변경: special css 문법 활용하기.\n링크 삽입: 네이버\n이미지 삽입: \nblockquote : 문장 앞에 >를 붙여줍니다.\n\n\n인용구 등을 표시할 때 blockquote를 많이 사용합니다.\n\n\n\nList 출력\n\n1) Unordered list (순서없는 리스트)\n\nItem 1\n\nitem 1-1\nitem 1-2\n\nitem 1-2-1\nitem 1-2-2\n\n\n\n\n\n2) Ordered list (순서가 지정된 리스트)\n\nitem 1\n\nitem 1-1\nitem 1-2\n\nsub-item 1\n\nitem 1\n\n\n\n\n자세한 markdown syntax는 Quarto 홈페이지를 참고하세요."
  },
  {
    "objectID": "posts/2023-01-19-quarto-intro/index.html#quarto-실행하기",
    "href": "posts/2023-01-19-quarto-intro/index.html#quarto-실행하기",
    "title": "Quarto 사용법",
    "section": "Quarto 실행하기",
    "text": "Quarto 실행하기\nRender 버튼(shortcut: ctrl + shift + k)을 누르시면 html 문서가 생성됩니다.\n\n1 + 1\n\n[1] 2\n\n\nterminal 창의 명령어를 통해서도 실행 가능합니다. 해당 파일의 경로에서 아래의 명령어를 실행합니다.\n\nquarto render test.qmd --to html\n\n\n# | echo: true\n#| eval: false\n2 * 2\n\n[1] 4\n\n\ncode 출력과 관련된 옵션은 다음과 같습니다.\n\necho: false 는 입력한 코드가 출력되지 않게 합니다.\neval: false는 입력한 코드의 결과물이 출력되지 않게 합니다.\nwarning: false는 코드 실행 시 나타나는 경고 메시지를 출력하지 않게 합니다.\n\n\n\n```{r}\n#| warning: false\n#| message: false\n#| output-location: column\n#| label: fig-airquality\n#| fig-cap: Teup and ozone level\nlibrary(ggplot2)\nggplot(airquality, aes(Temp, Ozone))+\n  geom_point()+\n  geom_smooth()\n```\n\n\n\n\nFigure 1: Teup and ozone level\n\n\n\n\n\n\nCallout\n\n\n\n\n\n\nNote\n\n\n\ncallout에는 5 종류가 있습니다.\n\n\n\n\n\n\n\n\nWarning\n\n\n\nWarning callout 입니다.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nImportant callout 입니다.\n\n\n\n\n\n\n\n\nTip\n\n\n\nTip callout입니다.\n\n\n\n\n\n\n\n\nDanger\n\n\n\nCaution callout 입니다.\n\n\n\n\nTabsets\nmarkdown에서는 tab을 나누어 각각 화면을 출력할 수 있습니다.\n\nSplit up and flip between sections\n\nCodeOutput\n\n\n\n```{r}\n#| eval: false\nhead(mtcars)\n```\n\n\n\n\nhead(mtcars)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n22.8\n4\n108\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\nValiant\n18.1\n6\n225\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\n\n\n\n\n\n\n\n\n\n그래프 출력하기\n\n# #|을 통해 r chunk의 옵션을 변경할 수 있습니다.\n# layout을 통해 figure의 위치를 조절할 수 있습니다.\n\nrequire(dplyr)\nrequire(ggplot2)\ncars |>\n  ggplot(aes(speed, dist)) +\n  geom_point()\nmtcars |>\n  ggplot(aes(disp, mpg))+\n  geom_point()\n\n\n\n\n\n\nSpeed and Stopping Distances of Cars\n\n\n\n\n \n\n\n\n\n\nEngine displacement and fuel efficiency in cars\n\n\n\n\n\n\n\n\n\nReference\n\nhttps://quarto.org/docs/visual-editor/\nhttps://quarto.org/"
  },
  {
    "objectID": "posts/2023-01-25-colors/index.html",
    "href": "posts/2023-01-25-colors/index.html",
    "title": "R에서 색상 다루기",
    "section": "",
    "text": "0. Intro\n색상은 시각화에서 가장 중요한 역할을 한다고 해도 과언이 아닙니다. 그래프의 색상에 따라 전달하고자 하는 의미, 전달되는 방법이 크게 달라질 수 있습니다.\n이번 글에서는 R에서 데이터 시각화를 위해 색상을 고르는 방법에 대해 살펴보겠습니다.\n\n\n1. colors()\nR에는 기본적으로 내장된 색상 이름이 657가지나 됩니다. 어떤 종류의 색상이 있는지 살펴보기 위해서는 colors() 를 실행해보면 됩니다.\n\ncolors()\n\n  [1] \"white\"                \"aliceblue\"            \"antiquewhite\"        \n  [4] \"antiquewhite1\"        \"antiquewhite2\"        \"antiquewhite3\"       \n  [7] \"antiquewhite4\"        \"aquamarine\"           \"aquamarine1\"         \n [10] \"aquamarine2\"          \"aquamarine3\"          \"aquamarine4\"         \n [13] \"azure\"                \"azure1\"               \"azure2\"              \n [16] \"azure3\"               \"azure4\"               \"beige\"               \n [19] \"bisque\"               \"bisque1\"              \"bisque2\"             \n [22] \"bisque3\"              \"bisque4\"              \"black\"               \n [25] \"blanchedalmond\"       \"blue\"                 \"blue1\"               \n [28] \"blue2\"                \"blue3\"                \"blue4\"               \n [31] \"blueviolet\"           \"brown\"                \"brown1\"              \n [34] \"brown2\"               \"brown3\"               \"brown4\"              \n [37] \"burlywood\"            \"burlywood1\"           \"burlywood2\"          \n [40] \"burlywood3\"           \"burlywood4\"           \"cadetblue\"           \n [43] \"cadetblue1\"           \"cadetblue2\"           \"cadetblue3\"          \n [46] \"cadetblue4\"           \"chartreuse\"           \"chartreuse1\"         \n [49] \"chartreuse2\"          \"chartreuse3\"          \"chartreuse4\"         \n [52] \"chocolate\"            \"chocolate1\"           \"chocolate2\"          \n [55] \"chocolate3\"           \"chocolate4\"           \"coral\"               \n [58] \"coral1\"               \"coral2\"               \"coral3\"              \n [61] \"coral4\"               \"cornflowerblue\"       \"cornsilk\"            \n [64] \"cornsilk1\"            \"cornsilk2\"            \"cornsilk3\"           \n [67] \"cornsilk4\"            \"cyan\"                 \"cyan1\"               \n [70] \"cyan2\"                \"cyan3\"                \"cyan4\"               \n [73] \"darkblue\"             \"darkcyan\"             \"darkgoldenrod\"       \n [76] \"darkgoldenrod1\"       \"darkgoldenrod2\"       \"darkgoldenrod3\"      \n [79] \"darkgoldenrod4\"       \"darkgray\"             \"darkgreen\"           \n [82] \"darkgrey\"             \"darkkhaki\"            \"darkmagenta\"         \n [85] \"darkolivegreen\"       \"darkolivegreen1\"      \"darkolivegreen2\"     \n [88] \"darkolivegreen3\"      \"darkolivegreen4\"      \"darkorange\"          \n [91] \"darkorange1\"          \"darkorange2\"          \"darkorange3\"         \n [94] \"darkorange4\"          \"darkorchid\"           \"darkorchid1\"         \n [97] \"darkorchid2\"          \"darkorchid3\"          \"darkorchid4\"         \n[100] \"darkred\"              \"darksalmon\"           \"darkseagreen\"        \n[103] \"darkseagreen1\"        \"darkseagreen2\"        \"darkseagreen3\"       \n[106] \"darkseagreen4\"        \"darkslateblue\"        \"darkslategray\"       \n[109] \"darkslategray1\"       \"darkslategray2\"       \"darkslategray3\"      \n[112] \"darkslategray4\"       \"darkslategrey\"        \"darkturquoise\"       \n[115] \"darkviolet\"           \"deeppink\"             \"deeppink1\"           \n[118] \"deeppink2\"            \"deeppink3\"            \"deeppink4\"           \n[121] \"deepskyblue\"          \"deepskyblue1\"         \"deepskyblue2\"        \n[124] \"deepskyblue3\"         \"deepskyblue4\"         \"dimgray\"             \n[127] \"dimgrey\"              \"dodgerblue\"           \"dodgerblue1\"         \n[130] \"dodgerblue2\"          \"dodgerblue3\"          \"dodgerblue4\"         \n[133] \"firebrick\"            \"firebrick1\"           \"firebrick2\"          \n[136] \"firebrick3\"           \"firebrick4\"           \"floralwhite\"         \n[139] \"forestgreen\"          \"gainsboro\"            \"ghostwhite\"          \n[142] \"gold\"                 \"gold1\"                \"gold2\"               \n[145] \"gold3\"                \"gold4\"                \"goldenrod\"           \n[148] \"goldenrod1\"           \"goldenrod2\"           \"goldenrod3\"          \n[151] \"goldenrod4\"           \"gray\"                 \"gray0\"               \n[154] \"gray1\"                \"gray2\"                \"gray3\"               \n[157] \"gray4\"                \"gray5\"                \"gray6\"               \n[160] \"gray7\"                \"gray8\"                \"gray9\"               \n[163] \"gray10\"               \"gray11\"               \"gray12\"              \n[166] \"gray13\"               \"gray14\"               \"gray15\"              \n[169] \"gray16\"               \"gray17\"               \"gray18\"              \n[172] \"gray19\"               \"gray20\"               \"gray21\"              \n[175] \"gray22\"               \"gray23\"               \"gray24\"              \n[178] \"gray25\"               \"gray26\"               \"gray27\"              \n[181] \"gray28\"               \"gray29\"               \"gray30\"              \n[184] \"gray31\"               \"gray32\"               \"gray33\"              \n[187] \"gray34\"               \"gray35\"               \"gray36\"              \n[190] \"gray37\"               \"gray38\"               \"gray39\"              \n[193] \"gray40\"               \"gray41\"               \"gray42\"              \n[196] \"gray43\"               \"gray44\"               \"gray45\"              \n[199] \"gray46\"               \"gray47\"               \"gray48\"              \n[202] \"gray49\"               \"gray50\"               \"gray51\"              \n[205] \"gray52\"               \"gray53\"               \"gray54\"              \n[208] \"gray55\"               \"gray56\"               \"gray57\"              \n[211] \"gray58\"               \"gray59\"               \"gray60\"              \n[214] \"gray61\"               \"gray62\"               \"gray63\"              \n[217] \"gray64\"               \"gray65\"               \"gray66\"              \n[220] \"gray67\"               \"gray68\"               \"gray69\"              \n[223] \"gray70\"               \"gray71\"               \"gray72\"              \n[226] \"gray73\"               \"gray74\"               \"gray75\"              \n[229] \"gray76\"               \"gray77\"               \"gray78\"              \n[232] \"gray79\"               \"gray80\"               \"gray81\"              \n[235] \"gray82\"               \"gray83\"               \"gray84\"              \n[238] \"gray85\"               \"gray86\"               \"gray87\"              \n[241] \"gray88\"               \"gray89\"               \"gray90\"              \n[244] \"gray91\"               \"gray92\"               \"gray93\"              \n[247] \"gray94\"               \"gray95\"               \"gray96\"              \n[250] \"gray97\"               \"gray98\"               \"gray99\"              \n[253] \"gray100\"              \"green\"                \"green1\"              \n[256] \"green2\"               \"green3\"               \"green4\"              \n[259] \"greenyellow\"          \"grey\"                 \"grey0\"               \n[262] \"grey1\"                \"grey2\"                \"grey3\"               \n[265] \"grey4\"                \"grey5\"                \"grey6\"               \n[268] \"grey7\"                \"grey8\"                \"grey9\"               \n[271] \"grey10\"               \"grey11\"               \"grey12\"              \n[274] \"grey13\"               \"grey14\"               \"grey15\"              \n[277] \"grey16\"               \"grey17\"               \"grey18\"              \n[280] \"grey19\"               \"grey20\"               \"grey21\"              \n[283] \"grey22\"               \"grey23\"               \"grey24\"              \n[286] \"grey25\"               \"grey26\"               \"grey27\"              \n[289] \"grey28\"               \"grey29\"               \"grey30\"              \n[292] \"grey31\"               \"grey32\"               \"grey33\"              \n[295] \"grey34\"               \"grey35\"               \"grey36\"              \n[298] \"grey37\"               \"grey38\"               \"grey39\"              \n[301] \"grey40\"               \"grey41\"               \"grey42\"              \n[304] \"grey43\"               \"grey44\"               \"grey45\"              \n[307] \"grey46\"               \"grey47\"               \"grey48\"              \n[310] \"grey49\"               \"grey50\"               \"grey51\"              \n[313] \"grey52\"               \"grey53\"               \"grey54\"              \n[316] \"grey55\"               \"grey56\"               \"grey57\"              \n[319] \"grey58\"               \"grey59\"               \"grey60\"              \n[322] \"grey61\"               \"grey62\"               \"grey63\"              \n[325] \"grey64\"               \"grey65\"               \"grey66\"              \n[328] \"grey67\"               \"grey68\"               \"grey69\"              \n[331] \"grey70\"               \"grey71\"               \"grey72\"              \n[334] \"grey73\"               \"grey74\"               \"grey75\"              \n[337] \"grey76\"               \"grey77\"               \"grey78\"              \n[340] \"grey79\"               \"grey80\"               \"grey81\"              \n[343] \"grey82\"               \"grey83\"               \"grey84\"              \n[346] \"grey85\"               \"grey86\"               \"grey87\"              \n[349] \"grey88\"               \"grey89\"               \"grey90\"              \n[352] \"grey91\"               \"grey92\"               \"grey93\"              \n[355] \"grey94\"               \"grey95\"               \"grey96\"              \n[358] \"grey97\"               \"grey98\"               \"grey99\"              \n[361] \"grey100\"              \"honeydew\"             \"honeydew1\"           \n[364] \"honeydew2\"            \"honeydew3\"            \"honeydew4\"           \n[367] \"hotpink\"              \"hotpink1\"             \"hotpink2\"            \n[370] \"hotpink3\"             \"hotpink4\"             \"indianred\"           \n[373] \"indianred1\"           \"indianred2\"           \"indianred3\"          \n[376] \"indianred4\"           \"ivory\"                \"ivory1\"              \n[379] \"ivory2\"               \"ivory3\"               \"ivory4\"              \n[382] \"khaki\"                \"khaki1\"               \"khaki2\"              \n[385] \"khaki3\"               \"khaki4\"               \"lavender\"            \n[388] \"lavenderblush\"        \"lavenderblush1\"       \"lavenderblush2\"      \n[391] \"lavenderblush3\"       \"lavenderblush4\"       \"lawngreen\"           \n[394] \"lemonchiffon\"         \"lemonchiffon1\"        \"lemonchiffon2\"       \n[397] \"lemonchiffon3\"        \"lemonchiffon4\"        \"lightblue\"           \n[400] \"lightblue1\"           \"lightblue2\"           \"lightblue3\"          \n[403] \"lightblue4\"           \"lightcoral\"           \"lightcyan\"           \n[406] \"lightcyan1\"           \"lightcyan2\"           \"lightcyan3\"          \n[409] \"lightcyan4\"           \"lightgoldenrod\"       \"lightgoldenrod1\"     \n[412] \"lightgoldenrod2\"      \"lightgoldenrod3\"      \"lightgoldenrod4\"     \n[415] \"lightgoldenrodyellow\" \"lightgray\"            \"lightgreen\"          \n[418] \"lightgrey\"            \"lightpink\"            \"lightpink1\"          \n[421] \"lightpink2\"           \"lightpink3\"           \"lightpink4\"          \n[424] \"lightsalmon\"          \"lightsalmon1\"         \"lightsalmon2\"        \n[427] \"lightsalmon3\"         \"lightsalmon4\"         \"lightseagreen\"       \n[430] \"lightskyblue\"         \"lightskyblue1\"        \"lightskyblue2\"       \n[433] \"lightskyblue3\"        \"lightskyblue4\"        \"lightslateblue\"      \n[436] \"lightslategray\"       \"lightslategrey\"       \"lightsteelblue\"      \n[439] \"lightsteelblue1\"      \"lightsteelblue2\"      \"lightsteelblue3\"     \n[442] \"lightsteelblue4\"      \"lightyellow\"          \"lightyellow1\"        \n[445] \"lightyellow2\"         \"lightyellow3\"         \"lightyellow4\"        \n[448] \"limegreen\"            \"linen\"                \"magenta\"             \n[451] \"magenta1\"             \"magenta2\"             \"magenta3\"            \n[454] \"magenta4\"             \"maroon\"               \"maroon1\"             \n[457] \"maroon2\"              \"maroon3\"              \"maroon4\"             \n[460] \"mediumaquamarine\"     \"mediumblue\"           \"mediumorchid\"        \n[463] \"mediumorchid1\"        \"mediumorchid2\"        \"mediumorchid3\"       \n[466] \"mediumorchid4\"        \"mediumpurple\"         \"mediumpurple1\"       \n[469] \"mediumpurple2\"        \"mediumpurple3\"        \"mediumpurple4\"       \n[472] \"mediumseagreen\"       \"mediumslateblue\"      \"mediumspringgreen\"   \n[475] \"mediumturquoise\"      \"mediumvioletred\"      \"midnightblue\"        \n[478] \"mintcream\"            \"mistyrose\"            \"mistyrose1\"          \n[481] \"mistyrose2\"           \"mistyrose3\"           \"mistyrose4\"          \n[484] \"moccasin\"             \"navajowhite\"          \"navajowhite1\"        \n[487] \"navajowhite2\"         \"navajowhite3\"         \"navajowhite4\"        \n[490] \"navy\"                 \"navyblue\"             \"oldlace\"             \n[493] \"olivedrab\"            \"olivedrab1\"           \"olivedrab2\"          \n[496] \"olivedrab3\"           \"olivedrab4\"           \"orange\"              \n[499] \"orange1\"              \"orange2\"              \"orange3\"             \n[502] \"orange4\"              \"orangered\"            \"orangered1\"          \n[505] \"orangered2\"           \"orangered3\"           \"orangered4\"          \n[508] \"orchid\"               \"orchid1\"              \"orchid2\"             \n[511] \"orchid3\"              \"orchid4\"              \"palegoldenrod\"       \n[514] \"palegreen\"            \"palegreen1\"           \"palegreen2\"          \n[517] \"palegreen3\"           \"palegreen4\"           \"paleturquoise\"       \n[520] \"paleturquoise1\"       \"paleturquoise2\"       \"paleturquoise3\"      \n[523] \"paleturquoise4\"       \"palevioletred\"        \"palevioletred1\"      \n[526] \"palevioletred2\"       \"palevioletred3\"       \"palevioletred4\"      \n[529] \"papayawhip\"           \"peachpuff\"            \"peachpuff1\"          \n[532] \"peachpuff2\"           \"peachpuff3\"           \"peachpuff4\"          \n[535] \"peru\"                 \"pink\"                 \"pink1\"               \n[538] \"pink2\"                \"pink3\"                \"pink4\"               \n[541] \"plum\"                 \"plum1\"                \"plum2\"               \n[544] \"plum3\"                \"plum4\"                \"powderblue\"          \n[547] \"purple\"               \"purple1\"              \"purple2\"             \n[550] \"purple3\"              \"purple4\"              \"red\"                 \n[553] \"red1\"                 \"red2\"                 \"red3\"                \n[556] \"red4\"                 \"rosybrown\"            \"rosybrown1\"          \n[559] \"rosybrown2\"           \"rosybrown3\"           \"rosybrown4\"          \n[562] \"royalblue\"            \"royalblue1\"           \"royalblue2\"          \n[565] \"royalblue3\"           \"royalblue4\"           \"saddlebrown\"         \n[568] \"salmon\"               \"salmon1\"              \"salmon2\"             \n[571] \"salmon3\"              \"salmon4\"              \"sandybrown\"          \n[574] \"seagreen\"             \"seagreen1\"            \"seagreen2\"           \n[577] \"seagreen3\"            \"seagreen4\"            \"seashell\"            \n[580] \"seashell1\"            \"seashell2\"            \"seashell3\"           \n[583] \"seashell4\"            \"sienna\"               \"sienna1\"             \n[586] \"sienna2\"              \"sienna3\"              \"sienna4\"             \n[589] \"skyblue\"              \"skyblue1\"             \"skyblue2\"            \n[592] \"skyblue3\"             \"skyblue4\"             \"slateblue\"           \n[595] \"slateblue1\"           \"slateblue2\"           \"slateblue3\"          \n[598] \"slateblue4\"           \"slategray\"            \"slategray1\"          \n[601] \"slategray2\"           \"slategray3\"           \"slategray4\"          \n[604] \"slategrey\"            \"snow\"                 \"snow1\"               \n[607] \"snow2\"                \"snow3\"                \"snow4\"               \n[610] \"springgreen\"          \"springgreen1\"         \"springgreen2\"        \n[613] \"springgreen3\"         \"springgreen4\"         \"steelblue\"           \n[616] \"steelblue1\"           \"steelblue2\"           \"steelblue3\"          \n[619] \"steelblue4\"           \"tan\"                  \"tan1\"                \n[622] \"tan2\"                 \"tan3\"                 \"tan4\"                \n[625] \"thistle\"              \"thistle1\"             \"thistle2\"            \n[628] \"thistle3\"             \"thistle4\"             \"tomato\"              \n[631] \"tomato1\"              \"tomato2\"              \"tomato3\"             \n[634] \"tomato4\"              \"turquoise\"            \"turquoise1\"          \n[637] \"turquoise2\"           \"turquoise3\"           \"turquoise4\"          \n[640] \"violet\"               \"violetred\"            \"violetred1\"          \n[643] \"violetred2\"           \"violetred3\"           \"violetred4\"          \n[646] \"wheat\"                \"wheat1\"               \"wheat2\"              \n[649] \"wheat3\"               \"wheat4\"               \"whitesmoke\"          \n[652] \"yellow\"               \"yellow1\"              \"yellow2\"             \n[655] \"yellow3\"              \"yellow4\"              \"yellowgreen\"         \n\n\n657가지의 색상 중 원하는 색의 이름으로 그 색을 사용할 수 있습니다.\n우선 R에서 가장 많이 활용되는 시각화 패키지 ggplot2에 있는 diamonds 데이터로 예시를 들어보겠습니다.\n\nlibrary(ggplot2)\nggplot(diamonds,\n       aes(x=cut))+\n  geom_bar(fill=colors()[1:5])\n\n\n\n\n\ncolors()[1:5]\n\n[1] \"white\"         \"aliceblue\"     \"antiquewhite\"  \"antiquewhite1\"\n[5] \"antiquewhite2\"\n\n\ncolors()의 1~5번째 값을 확인해보니, white, aliceblue, antiquewhite 등이었습니다. 이 색상들을 활용하여 각각의 막대 그래프 색을 지정해줬습니다.\n물론 하나의 색상만으로 막대그래프의 색상을 동일하게 지정해줄 수도 있습니다.\n\nlibrary(ggplot2)\nggplot(diamonds,\n       aes(x=cut))+\n  geom_bar(fill=colors()[657])\n\n\n\n\n각각의 색상들은 모두 자신만의 16자리의 값을 갖고 있습니다. 이 16자리 형태의 값들은 HEX color라고 불리며, 웹페이지에서 색상을 나타내기 위한 규격입니다.\n예시로는 #FFFFFF를 들 수 있겠습니다. HEX color는 맨 앞에 #이 오고, 숫자나 문자 6자리가 오게됩니다. 첫 두 자리는 적색 계열을, 다음 두 글자는 녹색, 마지막 두 글자는 청색 계열을 나타냅니다. 각각의 색상은 모두 00부터 FF까지의 값을 갖습니다.\n이처럼 각각의 색상별로 고유한 HEX 코드가 존재하지만, 우리에게는 색상의 이름으로 선택하는 것이 훨씬 쉽기 때문에, colors()를 이용해서 원하는 색상을 선택하여 시각화를 할 수 있습니다.\n\nggplot(diamonds, aes(x=color)) +\n  geom_bar(fill=c('red','orange','yellow','green','blue','navy', 'purple'))\n\n\n\n\n\n\n2. RColorBrewer()\n앞서 colors()를 이용해서는 표현하고자 하는 범주만큼 색상을 일일일 입력해줘야 했습니다.\n이러한 방법은 원하는 색상을 직접 선택할 수 있다는 장점이 있으나, 아무래도 번거롭다는 단점이 있습니다.\n그래서 R에서 저장된 색상모음들을 이용하는 것을 통해 번거로움을 해소할 수 있습니다. 바로 RColorBrewer()라는 패키지를 이용하는 방법입니다.\n\n# 패키지 설치\ninstall.packages('RColorBrewer')\n\nInstalling RColorBrewer [1.1-3] ...\n    OK [linked cache]\n\n# 패키지 불러오기\nlibrary(RColorBrewer)\n\n패키지를 잘 불러왔다면, display.brewer.all()을 이용해 사용 가능한 모든 색상 팔레트를 확인할 수 있습니다.\n\ndisplay.brewer.all()\n\n\n\n\n\n\n팔레트에는 크게 세 종류가 있습니다.\n\n연속형 팔레트(Sequential palettes): 위 사진에서 첫 번째 그룹에 해당하는 팔레트입니다. 특정 색상이 점점 진해지는 특징을 갖고 있습니다. 순서대로 나열된 데이터를 시각화하기에 적합합니다.\n정성 팔레트(Qualitative palettes): 위 사진에서 두 번째 그룹에 해당하는 팔레트입니다. 클래스 간의 크기 차이를 의미하지 않으며, 색상은 클래스 간의 주요 시각적 차이를 만드는 데 사용됩니다. 질적 체계는 명목 또는 범주형 데이터를 표현하는 데 가장 적합합니다.\n다범주 팔레트(Diverging palettes): 위 사진에서 세 번째 그룹에 해당하는 팔레트입니다. 데이터가 갖는 범위의 양 끝~ 중간 범위의 값과 끝값을 똑같이 강조할 수 있습니다. 양 끝으로 갈수록 색이 진해지고, 중간으로 갈수록 색이 연해지므로, 양 끝의 값을 강조하는 데 사용할 수 있습니다.\n\nggplot을 이용할 때 팔레트를 이용하기 위해서는 scale_fill_brewer() 또는 scale_color_brewer() 를 이용해야 합니다.\n\nggplot(diamonds, aes(x=cut, fill=color)) +\n  geom_bar() + \n  scale_fill_brewer(palette = 'Spectral',direction = -1)\n\n\n\n\ndiamonds에서 color 변수는 범주별 등급을 나타냅니다. 양 극단의 color을 강조시키기 위해 때문에, 다범주 팔레트중 하나인 Spectral을 사용하였습니다.\n\n\n3. 패키지 내장 팔레트\n다른 팔레트를 이용하는 방법은 ggplot과 함께 사용할 수 있는 다른 패키지들을 이용하는 것입니다.\n\nlibrary(ggthemes)\nlibrary(ggsci)\n\n대표적으로는 ggthemes, ggsci와 같은 패키지가 있습니다. scale_fill_ 또는 scale_color_로 시작하는 함수를 이용해 다양한 팔레트를 선택할 수 있습니다.\n\nggplot(diamonds, aes(x=price, y=carat, color=cut)) +\n  geom_point() + \n  ggthemes::scale_color_pander()\n\n\n\n\n이 때 각 팔레트마다 가능한 범주의 수가 정해져 있으니, 잘 확인해보고 사용하는 것이 필요합니다.\n\n\n참고자료\n\nhttps://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3\nhttps://r-graph-gallery.com/38-rcolorbrewers-palettes.html"
  },
  {
    "objectID": "posts/2023-01-25-dplyr_basic/index.html",
    "href": "posts/2023-01-25-dplyr_basic/index.html",
    "title": "dplyr 기초 문법 이해하기",
    "section": "",
    "text": "dplyr 패키지는 데이터를 다루는 패키지 중 하나로, 아래의 작업을 빠르고 쉽게 도와줄 수 있습니다.\n\n데이터를 다루는 흐름을 그대로 코드에 나타냄으로써, 분석 흐름을 이해하기 쉽습니다.\n단순한 영어 동사로 이루어진 함수들을 제공하여, 작성하는 코드를 이해하기 쉽습니다.\n\ndplyr 패키지에 대해 설명하기 위해 starwars 데이터를 사용하도록 하겠습니다. 자세한 사항은 ?starwars 를 통해 확인할 수 있습니다.\n\nlibrary(dplyr)\n\nstarwars\n\n# A tibble: 87 × 14\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Luke Skywa…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n 2 C-3PO          167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n 3 R2-D2           96    32 <NA>    white,… red        33   none  mascu… Naboo  \n 4 Darth Vader    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n 5 Leia Organa    150    49 brown   light   brown      19   fema… femin… Aldera…\n 6 Owen Lars      178   120 brown,… light   blue       52   male  mascu… Tatooi…\n 7 Beru White…    165    75 brown   light   blue       47   fema… femin… Tatooi…\n 8 R5-D4           97    32 <NA>    white,… red        NA   none  mascu… Tatooi…\n 9 Biggs Dark…    183    84 black   light   brown      24   male  mascu… Tatooi…\n10 Obi-Wan Ke…    182    77 auburn… fair    blue-g…    57   male  mascu… Stewjon\n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\n\nstarwars는 tibble 데이터 구조를 갖습니다. 이는 dplyr 로 데이터를 불러올 때의 데이터 구조입니다. tibble은 data.frame과 동일한 구조이지만 다른 점이 존재합니다.\n\ntibble은 달리 행의 일부분만 보여줍니다.\ntibble은 column의 데이터 유형(type)도 바로 알려줍니다.\n\n\n1. dplyr의 동사들\ndplyr는 영어 단어 동사를 함수로 사용하여 데이터를 다루게 됩니다. 이 함수들은 크게 세 가지로 나누어 볼 수 있습니다.\n\n행 (Rows)\n\nfilter() : column을 기준으로 조건에 맞는 행들을 선택합니다.\nslice() : 위치를 기준으로 행들을 선택합니다.\narrange() : 행의 순서를 변경합니다.\n\n열 (Columns)\n\nselect() : 특정 열을 선택합니다.\nrename() : 열의 이름을 변경합니다.\nmutate() : 새로운 열을 추가합니다.\nrelocate() : 열의 순서를 변경합니다.\n\n행 요약\n\nsummarise() : 여러 행을 계산합니다.\n\n\n\n\n2. Pipe 구조\n모든 dplyr의 함수는 분석하고자 하는 데이터(tibble)을 첫 번째 인자로 받습니다. dplyr에서는 f(x,y) 구조 보다는 x %>% f(y) 형태로 입력합니다. 이 때 %>%또는|>를 pipe 연산자라고 합니다. 파이프 연산자를 여러 번 사용하여 여러 함수를 이어서 실행할 수 있습니다.\n\n\n\n3. filter() 행 선택하기\nfilter()는 데이터에서 일부 행들을 선택하는 함수입니다. filter() 안에는 찾고자 하는 조건이 TRUE인 행들만 선택이 되게 됩니다.\n예를 들어, starwars 데이터에서 skin_color가 light이고 eye_color가 brown인 경우를 찾을 때는\n\nstarwars |> filter(skin_color=='light',\n                   eye_color=='brown')\n\n# A tibble: 7 × 14\n  name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n  <chr>         <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n1 Leia Organa     150    49 brown   light   brown        19 fema… femin… Aldera…\n2 Biggs Darkl…    183    84 black   light   brown        24 male  mascu… Tatooi…\n3 Cordé           157    NA brown   light   brown        NA fema… femin… Naboo  \n4 Dormé           165    NA brown   light   brown        NA fema… femin… Naboo  \n5 Raymus Anti…    188    79 brown   light   brown        NA male  mascu… Aldera…\n6 Poe Dameron      NA    NA brown   light   brown        NA male  mascu… <NA>   \n7 Padmé Amida…    165    45 brown   light   brown        46 fema… femin… Naboo  \n# … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n#   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n#   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\n\n이는 기본 R 코드에서 다음과 같이 구현할 수 있습니다.\n\nstarwars[starwars$skin_color=='light' & starwars$eye_color=='brown',]\n\n# A tibble: 7 × 14\n  name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n  <chr>         <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n1 Leia Organa     150    49 brown   light   brown        19 fema… femin… Aldera…\n2 Biggs Darkl…    183    84 black   light   brown        24 male  mascu… Tatooi…\n3 Cordé           157    NA brown   light   brown        NA fema… femin… Naboo  \n4 Dormé           165    NA brown   light   brown        NA fema… femin… Naboo  \n5 Raymus Anti…    188    79 brown   light   brown        NA male  mascu… Aldera…\n6 Poe Dameron      NA    NA brown   light   brown        NA male  mascu… <NA>   \n7 Padmé Amida…    165    45 brown   light   brown        46 fema… femin… Naboo  \n# … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n#   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n#   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\n\n\n\n4. arrange(): 행 순서 정렬하기\narrange()는 filter()와 동일하게 행을 다루는 함수입니다. 다만 arrange()는 다루는 데이터의 행을 재정렬합니다.\n만약 두 가지 이상의 열 이름을 제공하는 경우, 첫 번째 열에서 같은 값이 나왔을 때, 추가적으로 행을 정렬하는 기준이 정해지게 됩니다.\n\nstarwars |> arrange(height, mass)\n\n# A tibble: 87 × 14\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Yoda            66    17 white   green   brown       896 male  mascu… <NA>   \n 2 Ratts Tyer…     79    15 none    grey, … unknown      NA male  mascu… Aleen …\n 3 Wicket Sys…     88    20 brown   brown   brown         8 male  mascu… Endor  \n 4 Dud Bolt        94    45 none    blue, … yellow       NA male  mascu… Vulpter\n 5 R2-D2           96    32 <NA>    white,… red          33 none  mascu… Naboo  \n 6 R4-P17          96    NA none    silver… red, b…      NA none  femin… <NA>   \n 7 R5-D4           97    32 <NA>    white,… red          NA none  mascu… Tatooi…\n 8 Sebulba        112    40 none    grey, … orange       NA male  mascu… Malast…\n 9 Gasgano        122    NA none    white,… black        NA male  mascu… Troiken\n10 Watto          137    NA black   blue, … yellow       NA male  mascu… Toydar…\n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\n\nheight를 기준으로 오름차순이 되었고, height가 같은 경우에는 mass가 작은 값부터 오게끔 정렬되었습니다.\n만약 내림차순으로 데이터를 정렬하고 싶은 경우는 desc() 를 함께 사용하면 됩니다.\n\nstarwars |> arrange(desc(height))\n\n# A tibble: 87 × 14\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Yarael Poof    264    NA none    white   yellow     NA   male  mascu… Quermia\n 2 Tarfful        234   136 brown   brown   blue       NA   male  mascu… Kashyy…\n 3 Lama Su        229    88 none    grey    black      NA   male  mascu… Kamino \n 4 Chewbacca      228   112 brown   unknown blue      200   male  mascu… Kashyy…\n 5 Roos Tarpa…    224    82 none    grey    orange     NA   male  mascu… Naboo  \n 6 Grievous       216   159 none    brown,… green,…    NA   male  mascu… Kalee  \n 7 Taun We        213    NA none    grey    black      NA   fema… femin… Kamino \n 8 Rugor Nass     206    NA none    green   orange     NA   male  mascu… Naboo  \n 9 Tion Medon     206    80 none    grey    black      NA   male  mascu… Utapau \n10 Darth Vader    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\n\n\n\n5. slice(): 행의 위치를 통한 행 선택\nslice()는 행의 번호(index)를 통해 행들을 선택합니다.\n\nstarwars |> slice(5:10)\n\n# A tibble: 6 × 14\n  name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n  <chr>         <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n1 Leia Organa     150    49 brown   light   brown        19 fema… femin… Aldera…\n2 Owen Lars       178   120 brown,… light   blue         52 male  mascu… Tatooi…\n3 Beru Whites…    165    75 brown   light   blue         47 fema… femin… Tatooi…\n4 R5-D4            97    32 <NA>    white,… red          NA none  mascu… Tatooi…\n5 Biggs Darkl…    183    84 black   light   brown        24 male  mascu… Tatooi…\n6 Obi-Wan Ken…    182    77 auburn… fair    blue-g…      57 male  mascu… Stewjon\n# … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n#   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n#   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\n\nslice()와 유사하게 사용할 수 있는 다음과 같습니다.\n\nslice_head(), slice_tail(): 각각 데이터의 첫 ~행, 마지막 ~행을 선택할 수 있습니다.\n\nstarwars |> slice_head(n=5)\n\n# A tibble: 5 × 14\n  name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n  <chr>         <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n1 Luke Skywal…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n2 C-3PO           167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n3 R2-D2            96    32 <NA>    white,… red        33   none  mascu… Naboo  \n4 Darth Vader     202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n5 Leia Organa     150    49 brown   light   brown      19   fema… femin… Aldera…\n# … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n#   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n#   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\n\nslice_sample(): 무작위로 행을 선택합니다. n을 통해 행의 개수를 선택하거나, prop 옵션을 통해 특정 비율만큼 행을 선택할 수 있습니다.\n\nstarwars |> slice_sample(n=10)\n\n# A tibble: 10 × 14\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Tion Medon     206    80 none    grey    black        NA male  mascu… Utapau \n 2 Dooku          193    80 white   fair    brown       102 male  mascu… Serenno\n 3 Cliegg Lars    183    NA brown   fair    blue         82 male  mascu… Tatooi…\n 4 Yoda            66    17 white   green   brown       896 male  mascu… <NA>   \n 5 San Hill       191    NA none    grey    gold         NA male  mascu… Muunil…\n 6 Lama Su        229    88 none    grey    black        NA male  mascu… Kamino \n 7 Eeth Koth      171    NA black   brown   brown        NA male  mascu… Iridon…\n 8 R2-D2           96    32 <NA>    white,… red          33 none  mascu… Naboo  \n 9 Bib Fortuna    180    NA none    pale    pink         NA male  mascu… Ryloth \n10 Raymus Ant…    188    79 brown   light   brown        NA male  mascu… Aldera…\n# … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n#   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n#   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\nstarwars |> slice_sample(prop = 0.1)\n\n# A tibble: 8 × 14\n  name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n  <chr>         <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n1 Zam Wesell      168    55 blonde  fair, … yellow       NA fema… femin… Zolan  \n2 Plo Koon        188    80 none    orange  black        22 male  mascu… Dorin  \n3 Finn             NA    NA black   dark    dark         NA male  mascu… <NA>   \n4 Bail Presto…    191    NA black   tan     brown        67 male  mascu… Aldera…\n5 Saesee Tiin     188    NA none    pale    orange       NA male  mascu… Iktotch\n6 Bib Fortuna     180    NA none    pale    pink         NA male  mascu… Ryloth \n7 Sly Moore       178    48 none    pale    white        NA <NA>  <NA>   Umbara \n8 R4-P17           96    NA none    silver… red, b…      NA none  femin… <NA>   \n# … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n#   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n#   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\n\nreplace=T를 통해 복원추출을 수행할 수 있습니다.\nslice_min(), slice_max()를 통해 특정 열의 가장 높거나 가장 낮은 값을 갖는 행을 선택할 수 있습니다.\n\nstarwars |> \n  slice_max(height,n=3)\n\n# A tibble: 3 × 14\n  name        height  mass hair_c…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n  <chr>        <int> <dbl> <chr>    <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n1 Yarael Poof    264    NA none     white   yellow       NA male  mascu… Quermia\n2 Tarfful        234   136 brown    brown   blue         NA male  mascu… Kashyy…\n3 Lama Su        229    88 none     grey    black        NA male  mascu… Kamino \n# … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n#   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n#   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\n\n\n\n\n6. select(): 열 선택하기\n큰 데이터를 다루게 될 경우, 많은 열이 존재하기 마련입니다. 이 중 분석하고자 하는 일부의 열만 선택할 수 있도록 도와주는 함수가 바로 select()입니다.\n\nstarwars |> select(hair_color, skin_color, eye_color)\n\n# A tibble: 87 × 3\n   hair_color    skin_color  eye_color\n   <chr>         <chr>       <chr>    \n 1 blond         fair        blue     \n 2 <NA>          gold        yellow   \n 3 <NA>          white, blue red      \n 4 none          white       yellow   \n 5 brown         light       brown    \n 6 brown, grey   light       blue     \n 7 brown         light       blue     \n 8 <NA>          white, red  red      \n 9 black         light       brown    \n10 auburn, white fair        blue-gray\n# … with 77 more rows\n\n\n만약 열들이 붙어 있다면 :을 이용해 한번에 출력할 수도 있습니다.\n\nstarwars |> select(hair_color:eye_color)\n\n# A tibble: 87 × 3\n   hair_color    skin_color  eye_color\n   <chr>         <chr>       <chr>    \n 1 blond         fair        blue     \n 2 <NA>          gold        yellow   \n 3 <NA>          white, blue red      \n 4 none          white       yellow   \n 5 brown         light       brown    \n 6 brown, grey   light       blue     \n 7 brown         light       blue     \n 8 <NA>          white, red  red      \n 9 black         light       brown    \n10 auburn, white fair        blue-gray\n# … with 77 more rows\n\n\n또한 select() 안에서 열 이름이 갖는 규칙을 활용하여, 특정 규칙만을 갖는 열만 선택할 수 있습니다.\n\nstarts_with() : 특정한 값으로 시작하는 열 이름 찾기\n\nstarwars |> select(starts_with('hair'))\n\n# A tibble: 87 × 1\n   hair_color   \n   <chr>        \n 1 blond        \n 2 <NA>         \n 3 <NA>         \n 4 none         \n 5 brown        \n 6 brown, grey  \n 7 brown        \n 8 <NA>         \n 9 black        \n10 auburn, white\n# … with 77 more rows\n\n\nends_with() : 특정한 값으로 끝나는 열 이름 찾기\n\nstarwars |> select(ends_with('hair'))\n\n# A tibble: 87 × 0\n\n\nmatches() : 정규표현식을 통한 열 이름 찾기\n\nstarwars |> select(matches('^[a-z]{4}_'))\n\n# A tibble: 87 × 2\n   hair_color    skin_color \n   <chr>         <chr>      \n 1 blond         fair       \n 2 <NA>          gold       \n 3 <NA>          white, blue\n 4 none          white      \n 5 brown         light      \n 6 brown, grey   light      \n 7 brown         light      \n 8 <NA>          white, red \n 9 black         light      \n10 auburn, white fair       \n# … with 77 more rows\n\n\ncontains() :특정한 문자가 포함된 열 이름 찾기\n\nstarwars |> select(contains('_'))\n\n# A tibble: 87 × 4\n   hair_color    skin_color  eye_color birth_year\n   <chr>         <chr>       <chr>          <dbl>\n 1 blond         fair        blue            19  \n 2 <NA>          gold        yellow         112  \n 3 <NA>          white, blue red             33  \n 4 none          white       yellow          41.9\n 5 brown         light       brown           19  \n 6 brown, grey   light       blue            52  \n 7 brown         light       blue            47  \n 8 <NA>          white, red  red             NA  \n 9 black         light       brown           24  \n10 auburn, white fair        blue-gray       57  \n# … with 77 more rows\n\n\nnum_range() : 특정 숫자범위를 갖는 열 이름 찾기\nnum_range() 함수를 설명하기 위해 tidyr 패키지에 있는 billboard 데이터를 사용하겠습니다.\n\nlibrary(tidyr)\nbillboard |> select(num_range('wk',1:10))\n\n# A tibble: 317 × 10\n     wk1   wk2   wk3   wk4   wk5   wk6   wk7   wk8   wk9  wk10\n   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1    87    82    72    77    87    94    99    NA    NA    NA\n 2    91    87    92    NA    NA    NA    NA    NA    NA    NA\n 3    81    70    68    67    66    57    54    53    51    51\n 4    76    76    72    69    67    65    55    59    62    61\n 5    57    34    25    17    17    31    36    49    53    57\n 6    51    39    34    26    26    19     2     2     3     6\n 7    97    97    96    95   100    NA    NA    NA    NA    NA\n 8    84    62    51    41    38    35    35    38    38    36\n 9    59    53    38    28    21    18    16    14    12    10\n10    76    76    74    69    68    67    61    58    57    59\n# … with 307 more rows\n\n\n\n\n\n7. rename(): 열 이름 변경\nselect()문을 이용해 원하는 이름으로 열을 출력할 수도 있습니다.\n\nstarwars |> select(home_world=homeworld)\n\n# A tibble: 87 × 1\n   home_world\n   <chr>     \n 1 Tatooine  \n 2 Tatooine  \n 3 Naboo     \n 4 Tatooine  \n 5 Alderaan  \n 6 Tatooine  \n 7 Tatooine  \n 8 Tatooine  \n 9 Tatooine  \n10 Stewjon   \n# … with 77 more rows\n\n\n그러나 select()는 선택된 열 이외에 다른 열들은 모두 버리기 때문에, rename()을 이용해 열 이름을 변경해줄 수 있습니다.\n\n# rename(new = old)\nstarwars |> rename(home_world = homeworld)\n\n# A tibble: 87 × 14\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender home_…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Luke Skywa…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n 2 C-3PO          167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n 3 R2-D2           96    32 <NA>    white,… red        33   none  mascu… Naboo  \n 4 Darth Vader    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n 5 Leia Organa    150    49 brown   light   brown      19   fema… femin… Aldera…\n 6 Owen Lars      178   120 brown,… light   blue       52   male  mascu… Tatooi…\n 7 Beru White…    165    75 brown   light   blue       47   fema… femin… Tatooi…\n 8 R5-D4           97    32 <NA>    white,… red        NA   none  mascu… Tatooi…\n 9 Biggs Dark…    183    84 black   light   brown      24   male  mascu… Tatooi…\n10 Obi-Wan Ke…    182    77 auburn… fair    blue-g…    57   male  mascu… Stewjon\n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​home_world\n\n\n\n\n8. mutate(): 새로운 열 추가하기\n\nstarwars |> mutate(height_m = height / 100)\n\n# A tibble: 87 × 15\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Luke Skywa…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n 2 C-3PO          167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n 3 R2-D2           96    32 <NA>    white,… red        33   none  mascu… Naboo  \n 4 Darth Vader    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n 5 Leia Organa    150    49 brown   light   brown      19   fema… femin… Aldera…\n 6 Owen Lars      178   120 brown,… light   blue       52   male  mascu… Tatooi…\n 7 Beru White…    165    75 brown   light   blue       47   fema… femin… Tatooi…\n 8 R5-D4           97    32 <NA>    white,… red        NA   none  mascu… Tatooi…\n 9 Biggs Dark…    183    84 black   light   brown      24   male  mascu… Tatooi…\n10 Obi-Wan Ke…    182    77 auburn… fair    blue-g…    57   male  mascu… Stewjon\n# … with 77 more rows, 5 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, height_m <dbl>, and abbreviated variable\n#   names ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\n\ntibble 특성 상 새롭게 만든 열이 바로 보이지 않지만, select()를 이용해 출력할 수 있습니다.\n\nstarwars |>\n  mutate(height_m = height / 100) %>%\n  select(height_m, height, everything())\n\n# A tibble: 87 × 15\n   height_m height name        mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender\n      <dbl>  <int> <chr>      <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr> \n 1     1.72    172 Luke Skyw…    77 blond   fair    blue       19   male  mascu…\n 2     1.67    167 C-3PO         75 <NA>    gold    yellow    112   none  mascu…\n 3     0.96     96 R2-D2         32 <NA>    white,… red        33   none  mascu…\n 4     2.02    202 Darth Vad…   136 none    white   yellow     41.9 male  mascu…\n 5     1.5     150 Leia Orga…    49 brown   light   brown      19   fema… femin…\n 6     1.78    178 Owen Lars    120 brown,… light   blue       52   male  mascu…\n 7     1.65    165 Beru Whit…    75 brown   light   blue       47   fema… femin…\n 8     0.97     97 R5-D4         32 <NA>    white,… red        NA   none  mascu…\n 9     1.83    183 Biggs Dar…    84 black   light   brown      24   male  mascu…\n10     1.82    182 Obi-Wan K…    77 auburn… fair    blue-g…    57   male  mascu…\n# … with 77 more rows, 5 more variables: homeworld <chr>, species <chr>,\n#   films <list>, vehicles <list>, starships <list>, and abbreviated variable\n#   names ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year\n\n\nmutate() 안에서 새롭게 만든 열도 접근이 가능합니다.\n\nstarwars |> \n  mutate(\n    height_m = height / 100,\n    BMI = mass / (height_m^2)\n  ) %>%\n  select(BMI, everything())\n\n# A tibble: 87 × 16\n     BMI name  height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <dbl> <chr>  <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1  26.0 Luke…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n 2  26.9 C-3PO    167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n 3  34.7 R2-D2     96    32 <NA>    white,… red        33   none  mascu… Naboo  \n 4  33.3 Dart…    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n 5  21.8 Leia…    150    49 brown   light   brown      19   fema… femin… Aldera…\n 6  37.9 Owen…    178   120 brown,… light   blue       52   male  mascu… Tatooi…\n 7  27.5 Beru…    165    75 brown   light   blue       47   fema… femin… Tatooi…\n 8  34.0 R5-D4     97    32 <NA>    white,… red        NA   none  mascu… Tatooi…\n 9  25.1 Bigg…    183    84 black   light   brown      24   male  mascu… Tatooi…\n10  23.2 Obi-…    182    77 auburn… fair    blue-g…    57   male  mascu… Stewjon\n# … with 77 more rows, 5 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, height_m <dbl>, and abbreviated variable\n#   names ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\n\n만약 기존의 열은 없애고 새로운 열만 남기고 싶다면, transmute() 를 이용할 수 있습니다.\n\nstarwars |>\n  transmute(\n    height_m = height / 100,\n    BMI = mass / (height_m^2)\n  )\n\n# A tibble: 87 × 2\n   height_m   BMI\n      <dbl> <dbl>\n 1     1.72  26.0\n 2     1.67  26.9\n 3     0.96  34.7\n 4     2.02  33.3\n 5     1.5   21.8\n 6     1.78  37.9\n 7     1.65  27.5\n 8     0.97  34.0\n 9     1.83  25.1\n10     1.82  23.2\n# … with 77 more rows\n\n\n\n\n9. relocate(): 열의 순서 변경\nrelocate()는 옮길 열들과, 옮길 위치를 지정해주면 됩니다.\n\n# .before or .after\nstarwars |> relocate(sex:homeworld, # 옮길 열들\n                    .before = height # 옮길 위치\n                    )\n\n# A tibble: 87 × 14\n   name        sex   gender homew…¹ height  mass hair_…² skin_…³ eye_c…⁴ birth…⁵\n   <chr>       <chr> <chr>  <chr>    <int> <dbl> <chr>   <chr>   <chr>     <dbl>\n 1 Luke Skywa… male  mascu… Tatooi…    172    77 blond   fair    blue       19  \n 2 C-3PO       none  mascu… Tatooi…    167    75 <NA>    gold    yellow    112  \n 3 R2-D2       none  mascu… Naboo       96    32 <NA>    white,… red        33  \n 4 Darth Vader male  mascu… Tatooi…    202   136 none    white   yellow     41.9\n 5 Leia Organa fema… femin… Aldera…    150    49 brown   light   brown      19  \n 6 Owen Lars   male  mascu… Tatooi…    178   120 brown,… light   blue       52  \n 7 Beru White… fema… femin… Tatooi…    165    75 brown   light   blue       47  \n 8 R5-D4       none  mascu… Tatooi…     97    32 <NA>    white,… red        NA  \n 9 Biggs Dark… male  mascu… Tatooi…    183    84 black   light   brown      24  \n10 Obi-Wan Ke… male  mascu… Stewjon    182    77 auburn… fair    blue-g…    57  \n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​homeworld, ²​hair_color, ³​skin_color, ⁴​eye_color, ⁵​birth_year\n\n\n\n\n10. summarise(): 값들 요약\nsummarise() 는 하나의 열을 평균, 표준편차, 중앙값 등으로 요약하기 위해 함께 사용되는 함수입니다.\n\nstarwars |> summarise(height = mean(height, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  height\n   <dbl>\n1   174.\n\n\ndplyr와 %>%(또는 |>)를 사용하여 출력했을 때, 출력된 값이 저장되지 않습니다. 즉 분석하는 데이터에는 변경사항이 없습니다. 만약 새로운 열을 추가하거나 이름을 변경할 때, 또는 계산한 값을 저장하기 위해서는 <- 를 이용해 데이터에 저장하거나 새로운 값으로 선언해야 합니다.\n\nstarwars2 <- starwars %>%\n  group_by(species, sex) %>%\n  select(height, mass) %>%\n  summarise(\n    height = mean(height, na.rm = TRUE),\n    mass = mean(mass, na.rm = TRUE)\n  )\n\n# starwars2에는 group_by 후 summarise한 값만 존재\nstarwars2\n\n# A tibble: 41 × 4\n# Groups:   species [38]\n   species   sex    height  mass\n   <chr>     <chr>   <dbl> <dbl>\n 1 Aleena    male      79   15  \n 2 Besalisk  male     198  102  \n 3 Cerean    male     198   82  \n 4 Chagrian  male     196  NaN  \n 5 Clawdite  female   168   55  \n 6 Droid     none     131.  69.8\n 7 Dug       male     112   40  \n 8 Ewok      male      88   20  \n 9 Geonosian male     183   80  \n10 Gungan    male     209.  74  \n# … with 31 more rows\n\n\nReference\n\nhttps://dplyr.tidyverse.org/articles/dplyr.html"
  },
  {
    "objectID": "posts/2023-01-26-dplyr_colwise/index.html",
    "href": "posts/2023-01-26-dplyr_colwise/index.html",
    "title": "dplyr 심화: across()",
    "section": "",
    "text": "데이터 분석을 수행할 때, 여러 열에 대해 동일한 작업을 해주는 경우가 종종 있습니다. 그러나 동일한 코드를 복사해서 붙여넣기 하는 것은 굉장히 번거로운 일이고, 때로는 실수의 원인이 되기도 합니다.\n\nlibrary(dplyr)\nstorms |> \n  group_by(name, month) |> \n  summarise(mean_wind = mean(wind, na.rm=T),\n            mean_pressure = mean(pressure,na.rm=T),\n            mean_tropical = mean(tropicalstorm_force_diameter, na.rm=T),\n            mean_hurricane_force = mean(hurricane_force_diameter, na.rm=T))\n\n# A tibble: 396 × 6\n# Groups:   name [214]\n   name     month mean_wind mean_pressure mean_tropical mean_hurricane_force\n   <chr>    <dbl>     <dbl>         <dbl>         <dbl>                <dbl>\n 1 AL011993     5      25           1002.           NaN                  NaN\n 2 AL011993     6      28.3          999.           NaN                  NaN\n 3 AL012000     6      25           1009.           NaN                  NaN\n 4 AL021992     6      29           1007.           NaN                  NaN\n 5 AL021994     7      24.2         1016.           NaN                  NaN\n 6 AL021999     7      28.8         1005.           NaN                  NaN\n 7 AL022000     6      29.2         1009.           NaN                  NaN\n 8 AL022001     7      25           1011            NaN                  NaN\n 9 AL022003     6      30           1009.           NaN                  NaN\n10 AL022006     7      38           1002.            48                    0\n# … with 386 more rows\n\n\n이번 글에서는 여러 개의 열에 대해 동일한 작업을 수행할 수 있는 across() 에 대해 살펴보도록 하겠습니다.\nacross() 를 사용할 경우, 위의 코드는 다음과 같이 입력할 수 있습니다.\n\nstorms |> \n  group_by(name,month) |> \n  summarise(across(wind:hurricane_force_diameter, mean, na.rm=T))\n\n# A tibble: 396 × 6\n# Groups:   name [214]\n   name     month  wind pressure tropicalstorm_force_diameter hurricane_force_…¹\n   <chr>    <dbl> <dbl>    <dbl>                        <dbl>              <dbl>\n 1 AL011993     5  25      1002.                          NaN                NaN\n 2 AL011993     6  28.3     999.                          NaN                NaN\n 3 AL012000     6  25      1009.                          NaN                NaN\n 4 AL021992     6  29      1007.                          NaN                NaN\n 5 AL021994     7  24.2    1016.                          NaN                NaN\n 6 AL021999     7  28.8    1005.                          NaN                NaN\n 7 AL022000     6  29.2    1009.                          NaN                NaN\n 8 AL022001     7  25      1011                           NaN                NaN\n 9 AL022003     6  30      1009.                          NaN                NaN\n10 AL022006     7  38      1002.                           48                  0\n# … with 386 more rows, and abbreviated variable name ¹​hurricane_force_diameter\n\n\n\n기본 사용법\nacross() 에는 핵심적인 두 가지의 인자를 받을 수 있습니다.\n\n.cols: 함수를 적용시킬 열들을 입력합니다. 열의 위치, 이름, 유형을 통해 열들을 선택할 수 있습니다.\n.fns: 열들에 적용시킬 함수를 입력합니다. purrr 패키지 스타일의 식 ~.x/2와 같은 형태로도 입력 가능합니다.\n\nacross()는 주로 summarise() 와 함께 사용해 여러 열에 동일한 함수를 적용시켜줍니다.\n\n# 열의 유형으로 선택하기\nstarwars |> \n  summarise(across(where(is.character), n_distinct))\n\n# A tibble: 1 × 8\n   name hair_color skin_color eye_color   sex gender homeworld species\n  <int>      <int>      <int>     <int> <int>  <int>     <int>   <int>\n1    87         13         31        15     5      3        49      38\n\n# 열의 이름으로 선택\nstarwars |> \n  group_by(species) |> \n  filter(n()>1) |> \n  summarise(across(c(sex,gender,homeworld), n_distinct))\n\n# A tibble: 9 × 4\n  species    sex gender homeworld\n  <chr>    <int>  <int>     <int>\n1 Droid        1      2         3\n2 Gungan       1      1         1\n3 Human        2      2        16\n4 Kaminoan     2      2         1\n5 Mirialan     1      1         1\n6 Twi'lek      2      2         1\n7 Wookiee      1      1         1\n8 Zabrak       1      1         2\n9 <NA>         1      1         3\n\n# purrr 방식 함수 적용\nstarwars |> \n  group_by(species) |> \n  filter(n()>1) |> \n  summarise(across(is.numeric, ~mean(.x, na.rm=T)))\n\n# A tibble: 9 × 4\n  species  height  mass birth_year\n  <chr>     <dbl> <dbl>      <dbl>\n1 Droid      131.  69.8       53.3\n2 Gungan     209.  74         52  \n3 Human      177.  82.8       53.4\n4 Kaminoan   221   88        NaN  \n5 Mirialan   168   53.1       49  \n6 Twi'lek    179   55         48  \n7 Wookiee    231  124        200  \n8 Zabrak     173   80         54  \n9 <NA>       181.  48         62  \n\n\n\n\n여러 함수 적용하기\nacross()를 이용해 여러 열에 두 가지 이상의 함수를 적용할 수 있습니다.\n\nmin_max <- list(\n  min = ~min(.x, na.rm=T),\n  max = ~max(.x ,na.rm=T)\n)\n\nstarwars |> \n  group_by(species) |> \n  summarise(across(is.numeric,min_max))\n\n# A tibble: 38 × 7\n   species   height_min height_max mass_min mass_max birth_year_min birth_year…¹\n   <chr>          <int>      <int>    <dbl>    <dbl>          <dbl>        <dbl>\n 1 Aleena            79         79       15       15            Inf         -Inf\n 2 Besalisk         198        198      102      102            Inf         -Inf\n 3 Cerean           198        198       82       82             92           92\n 4 Chagrian         196        196      Inf     -Inf            Inf         -Inf\n 5 Clawdite         168        168       55       55            Inf         -Inf\n 6 Droid             96        200       32      140             15          112\n 7 Dug              112        112       40       40            Inf         -Inf\n 8 Ewok              88         88       20       20              8            8\n 9 Geonosian        183        183       80       80            Inf         -Inf\n10 Gungan           196        224       66       82             52           52\n# … with 28 more rows, and abbreviated variable name ¹​birth_year_max\n\n\n여러 개의 함수를 적용한 경우, .names 를 통해 결과 데이터에서 출력되는 열의 이름을 변경합니다.\n\nstarwars |> \n  summarise(across(is.numeric, min_max, .names = \"{.fn}_{.col}\")) |> \n  relocate(starts_with('min'))\n\n# A tibble: 1 × 6\n  min_height min_mass min_birth_year max_height max_mass max_birth_year\n       <int>    <dbl>          <dbl>      <int>    <dbl>          <dbl>\n1         66       15              8        264     1358            896\n\n\n\n\n다른 함수와의 활용\n\n1. mutate()\n\nmin_max_scale <- function(x){\n  m <- min(x, na.rm=T)\n  M <- max(x, na.rm=T)\n  return((x-m)/(M-m))\n}\n\ndf <- tibble(x=1:4, y=rnorm(4))\ndf |> mutate(\n  across(is.numeric, min_max_scale)\n)\n\n# A tibble: 4 × 2\n      x     y\n  <dbl> <dbl>\n1 0     0    \n2 0.333 0.433\n3 0.667 1    \n4 1     0.653\n\n\n\n\n2. distinct() , count()\ncount(), distinct() 와 같은 함수는 summarise() 를 생략할 수 있습니다.\ndistinct(): unique한 값 찾기\n\nstarwars |> distinct(across(contains('color')))\n\n# A tibble: 67 × 3\n   hair_color    skin_color  eye_color\n   <chr>         <chr>       <chr>    \n 1 blond         fair        blue     \n 2 <NA>          gold        yellow   \n 3 <NA>          white, blue red      \n 4 none          white       yellow   \n 5 brown         light       brown    \n 6 brown, grey   light       blue     \n 7 brown         light       blue     \n 8 <NA>          white, red  red      \n 9 black         light       brown    \n10 auburn, white fair        blue-gray\n# … with 57 more rows\n\n\ncount(): 수를 셀 때 사용하는 함수입니다. across()와 함께 사용할 경우, 조건에 해당하는 열들의 조합별로 수를 셉니다.\n\nstarwars |> count(across(contains('color')), sort = T)\n\n# A tibble: 67 × 4\n   hair_color skin_color eye_color     n\n   <chr>      <chr>      <chr>     <int>\n 1 brown      light      brown         6\n 2 brown      fair       blue          4\n 3 none       grey       black         4\n 4 black      dark       brown         3\n 5 blond      fair       blue          3\n 6 black      fair       brown         2\n 7 black      tan        brown         2\n 8 black      yellow     blue          2\n 9 brown      fair       brown         2\n10 none       white      yellow        2\n# … with 57 more rows\n\n\n\n\nfilter()\nfilter()와 across()는 바로 사용할 수 없습니다.\n\nif_any() : 하나만 함수 부분에 해당되더라도 선택합니다.\n\nstarwars |> \n  filter(if_any(everything(),~!is.na(.x)))\n\n# A tibble: 87 × 14\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Luke Skywa…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n 2 C-3PO          167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n 3 R2-D2           96    32 <NA>    white,… red        33   none  mascu… Naboo  \n 4 Darth Vader    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n 5 Leia Organa    150    49 brown   light   brown      19   fema… femin… Aldera…\n 6 Owen Lars      178   120 brown,… light   blue       52   male  mascu… Tatooi…\n 7 Beru White…    165    75 brown   light   blue       47   fema… femin… Tatooi…\n 8 R5-D4           97    32 <NA>    white,… red        NA   none  mascu… Tatooi…\n 9 Biggs Dark…    183    84 black   light   brown      24   male  mascu… Tatooi…\n10 Obi-Wan Ke…    182    77 auburn… fair    blue-g…    57   male  mascu… Stewjon\n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\n\nif_all() : 열의 모든 값들이 함수 부분을 충족해야 선택합니다.\n\n\nstarwars |> \n  filter(if_all(everything(),~!is.na(.x)))\n\n# A tibble: 29 × 14\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Luke Skywa…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n 2 Darth Vader    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n 3 Leia Organa    150    49 brown   light   brown      19   fema… femin… Aldera…\n 4 Owen Lars      178   120 brown,… light   blue       52   male  mascu… Tatooi…\n 5 Beru White…    165    75 brown   light   blue       47   fema… femin… Tatooi…\n 6 Biggs Dark…    183    84 black   light   brown      24   male  mascu… Tatooi…\n 7 Obi-Wan Ke…    182    77 auburn… fair    blue-g…    57   male  mascu… Stewjon\n 8 Anakin Sky…    188    84 blond   fair    blue       41.9 male  mascu… Tatooi…\n 9 Chewbacca      228   112 brown   unknown blue      200   male  mascu… Kashyy…\n10 Han Solo       180    80 brown   fair    brown      29   male  mascu… Corell…\n# … with 19 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\n\n\n\n\nacross() vs _if(), _at(), _all()의 비교\n_if(), _at(), _all()은 dplyr 이전 버전에서 쓰이던 함수들로, across() 처럼 여러 열에 대해 동시에 작업을 하기 위해 사용하는 함수들입니다.\nacross() 가 더 좋은 이유는 다음과 같습니다.\n\n여러 열들에 대해 특정 함수를 사용하여 요약할 수 있습니다.\n각 함수별로 _if(), _at(), _all() 이 존재했습니다. across()는 이런 함수들의 기능을 아우르기 때문에, 사용해야 할 함수의 숫자를 줄여줍니다.\n\nacross()와 _if(), _at(), _all() 을 대응시켜보면 다음과 같습니다. 만약 mutate()를 통해 column을 변화시키고자 할 경우,\n\n_if()\n\nstarwars |> mutate_if(is.numeric, mean, na.rm=T) \n\n# A tibble: 87 × 14\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <dbl> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Luke Skywa…   174.  97.3 blond   fair    blue       87.6 male  mascu… Tatooi…\n 2 C-3PO         174.  97.3 <NA>    gold    yellow     87.6 none  mascu… Tatooi…\n 3 R2-D2         174.  97.3 <NA>    white,… red        87.6 none  mascu… Naboo  \n 4 Darth Vader   174.  97.3 none    white   yellow     87.6 male  mascu… Tatooi…\n 5 Leia Organa   174.  97.3 brown   light   brown      87.6 fema… femin… Aldera…\n 6 Owen Lars     174.  97.3 brown,… light   blue       87.6 male  mascu… Tatooi…\n 7 Beru White…   174.  97.3 brown   light   blue       87.6 fema… femin… Tatooi…\n 8 R5-D4         174.  97.3 <NA>    white,… red        87.6 none  mascu… Tatooi…\n 9 Biggs Dark…   174.  97.3 black   light   brown      87.6 male  mascu… Tatooi…\n10 Obi-Wan Ke…   174.  97.3 auburn… fair    blue-g…    87.6 male  mascu… Stewjon\n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\nstarwars |> mutate(across(is.numeric,mean, na.rm=T))\n\n# A tibble: 87 × 14\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <dbl> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Luke Skywa…   174.  97.3 blond   fair    blue       87.6 male  mascu… Tatooi…\n 2 C-3PO         174.  97.3 <NA>    gold    yellow     87.6 none  mascu… Tatooi…\n 3 R2-D2         174.  97.3 <NA>    white,… red        87.6 none  mascu… Naboo  \n 4 Darth Vader   174.  97.3 none    white   yellow     87.6 male  mascu… Tatooi…\n 5 Leia Organa   174.  97.3 brown   light   brown      87.6 fema… femin… Aldera…\n 6 Owen Lars     174.  97.3 brown,… light   blue       87.6 male  mascu… Tatooi…\n 7 Beru White…   174.  97.3 brown   light   blue       87.6 fema… femin… Tatooi…\n 8 R5-D4         174.  97.3 <NA>    white,… red        87.6 none  mascu… Tatooi…\n 9 Biggs Dark…   174.  97.3 black   light   brown      87.6 male  mascu… Tatooi…\n10 Obi-Wan Ke…   174.  97.3 auburn… fair    blue-g…    87.6 male  mascu… Stewjon\n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\n\n_at()\n\nMode <- function(x){\n  y <- names(which.max(table(x)))\n  return(y)\n}\nstarwars |> \n  mutate_at(vars(ends_with('color')),Mode) |> \n  select(ends_with('color'))\n\n# A tibble: 87 × 3\n   hair_color skin_color eye_color\n   <chr>      <chr>      <chr>    \n 1 none       fair       brown    \n 2 none       fair       brown    \n 3 none       fair       brown    \n 4 none       fair       brown    \n 5 none       fair       brown    \n 6 none       fair       brown    \n 7 none       fair       brown    \n 8 none       fair       brown    \n 9 none       fair       brown    \n10 none       fair       brown    \n# … with 77 more rows\n\nstarwars |> \n  mutate(across(ends_with('color'),Mode)) |> \n  select(ends_with('color'))\n\n# A tibble: 87 × 3\n   hair_color skin_color eye_color\n   <chr>      <chr>      <chr>    \n 1 none       fair       brown    \n 2 none       fair       brown    \n 3 none       fair       brown    \n 4 none       fair       brown    \n 5 none       fair       brown    \n 6 none       fair       brown    \n 7 none       fair       brown    \n 8 none       fair       brown    \n 9 none       fair       brown    \n10 none       fair       brown    \n# … with 77 more rows\n\n\n_all()\n\ndf <- tibble(x=2, y=4, z=8)\ndf |> mutate_all(~.x/y)\n\n# A tibble: 1 × 3\n      x     y     z\n  <dbl> <dbl> <dbl>\n1   0.5     1     8\n\ndf |> mutate(across(everything(),~.x/y))\n\n# A tibble: 1 × 3\n      x     y     z\n  <dbl> <dbl> <dbl>\n1   0.5     1     2\n\n\n_all() 함수는 across() 안에 everything()을 사용하여 구현이 가능합니다."
  },
  {
    "objectID": "posts/2023-01-26-dplyr_groupby/index.html",
    "href": "posts/2023-01-26-dplyr_groupby/index.html",
    "title": "dplyr group_by",
    "section": "",
    "text": "group_by() : 그룹별 계산\ngroup_by()는 특정 집단의 범주별로 어떤 값들을 요약하거나 계산할 때 많이 활용되는 함수입니다.\n\nlibrary(dplyr)\nstarwars %>%\n  group_by(species, sex) %>%\n  select(height, mass) %>%\n  summarise(\n    height = mean(height, na.rm = TRUE),\n    mass = mean(mass, na.rm = TRUE)\n  )\n\n# A tibble: 41 × 4\n# Groups:   species [38]\n   species   sex    height  mass\n   <chr>     <chr>   <dbl> <dbl>\n 1 Aleena    male      79   15  \n 2 Besalisk  male     198  102  \n 3 Cerean    male     198   82  \n 4 Chagrian  male     196  NaN  \n 5 Clawdite  female   168   55  \n 6 Droid     none     131.  69.8\n 7 Dug       male     112   40  \n 8 Ewok      male      88   20  \n 9 Geonosian male     183   80  \n10 Gungan    male     209.  74  \n# … with 31 more rows\n\n\n\nby_species <- starwars |> group_by(species)\nby_sex_gender <- starwars |> group_by(sex,gender)\n\n출력했을 때, 데이터가 그룹으로 묶인 것을 알 수 있습니다.\n\nby_species\n\n# A tibble: 87 × 14\n# Groups:   species [38]\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Luke Skywa…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n 2 C-3PO          167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n 3 R2-D2           96    32 <NA>    white,… red        33   none  mascu… Naboo  \n 4 Darth Vader    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n 5 Leia Organa    150    49 brown   light   brown      19   fema… femin… Aldera…\n 6 Owen Lars      178   120 brown,… light   blue       52   male  mascu… Tatooi…\n 7 Beru White…    165    75 brown   light   blue       47   fema… femin… Tatooi…\n 8 R5-D4           97    32 <NA>    white,… red        NA   none  mascu… Tatooi…\n 9 Biggs Dark…    183    84 black   light   brown      24   male  mascu… Tatooi…\n10 Obi-Wan Ke…    182    77 auburn… fair    blue-g…    57   male  mascu… Stewjon\n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\nby_sex_gender\n\n# A tibble: 87 × 14\n# Groups:   sex, gender [6]\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Luke Skywa…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n 2 C-3PO          167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n 3 R2-D2           96    32 <NA>    white,… red        33   none  mascu… Naboo  \n 4 Darth Vader    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n 5 Leia Organa    150    49 brown   light   brown      19   fema… femin… Aldera…\n 6 Owen Lars      178   120 brown,… light   blue       52   male  mascu… Tatooi…\n 7 Beru White…    165    75 brown   light   blue       47   fema… femin… Tatooi…\n 8 R5-D4           97    32 <NA>    white,… red        NA   none  mascu… Tatooi…\n 9 Biggs Dark…    183    84 black   light   brown      24   male  mascu… Tatooi…\n10 Obi-Wan Ke…    182    77 auburn… fair    blue-g…    57   male  mascu… Stewjon\n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\n\ntally() 를 이용해 그룹별 n수를 파악할 수도 있습니다.\nsort 인자를 통해서 그룹 수가 많은 순서대로 정렬할 수 있습니다.\n\nby_species |> tally()\n\n# A tibble: 38 × 2\n   species       n\n   <chr>     <int>\n 1 Aleena        1\n 2 Besalisk      1\n 3 Cerean        1\n 4 Chagrian      1\n 5 Clawdite      1\n 6 Droid         6\n 7 Dug           1\n 8 Ewok          1\n 9 Geonosian     1\n10 Gungan        3\n# … with 28 more rows\n\nby_sex_gender |> \n  tally(sort=T)\n\n# A tibble: 6 × 3\n# Groups:   sex [5]\n  sex            gender        n\n  <chr>          <chr>     <int>\n1 male           masculine    60\n2 female         feminine     16\n3 none           masculine     5\n4 <NA>           <NA>          4\n5 hermaphroditic masculine     1\n6 none           feminine      1\n\n\ngroup_by() 안에서 새로운 변수를 만들어 그룹별 계산을 진행할 수도 있습니다.\n\nstarwars |> \n  group_by(bmi_cat = cut(mass/(height/100)^2, breaks = c(0,18,23,25,30,Inf))) |> \n  tally()\n\n# A tibble: 6 × 2\n  bmi_cat      n\n  <fct>    <int>\n1 (0,18]       9\n2 (18,23]     11\n3 (23,25]     14\n4 (25,30]     13\n5 (30,Inf]    12\n6 <NA>        28\n\n\n\n\n그룹 변수 정보 확인\n그룹 변수를 지정해준 경우, group_keys() 를 통해 그룹 변수의 범주를 확인할 수 있습니다.\n\nby_species |> group_keys()\n\n# A tibble: 38 × 1\n   species  \n   <chr>    \n 1 Aleena   \n 2 Besalisk \n 3 Cerean   \n 4 Chagrian \n 5 Clawdite \n 6 Droid    \n 7 Dug      \n 8 Ewok     \n 9 Geonosian\n10 Gungan   \n# … with 28 more rows\n\n\n그룹 변수의 이름만 확인할 때는 group_vars() 를 사용합니다.\n\nby_sex_gender |> group_vars()\n\n[1] \"sex\"    \"gender\"\n\n\n\n\n그룹 변수 변경 및 추가\n기존의 그룹처리 되어있는 데이터에 group_by() 를 진행할 시, 새로운 그룹 변수로 덮어씌워집니다.\n\nby_species |> \n  group_by(homeworld) |> \n  tally()\n\n# A tibble: 49 × 2\n   homeworld          n\n   <chr>          <int>\n 1 Alderaan           3\n 2 Aleen Minor        1\n 3 Bespin             1\n 4 Bestine IV         1\n 5 Cato Neimoidia     1\n 6 Cerea              1\n 7 Champala           1\n 8 Chandrila          1\n 9 Concord Dawn       1\n10 Corellia           2\n# … with 39 more rows\n\n\n.add=T 인자를 추가할 경우, 새로운 그룹 변수를 추가할 수도 있습니다.\n\nby_species |> \n  group_by(homeworld, .add=T) |> \n  tally()\n\n# A tibble: 58 × 3\n# Groups:   species [38]\n   species  homeworld       n\n   <chr>    <chr>       <int>\n 1 Aleena   Aleen Minor     1\n 2 Besalisk Ojom            1\n 3 Cerean   Cerea           1\n 4 Chagrian Champala        1\n 5 Clawdite Zolan           1\n 6 Droid    Naboo           1\n 7 Droid    Tatooine        2\n 8 Droid    <NA>            3\n 9 Dug      Malastare       1\n10 Ewok     Endor           1\n# … with 48 more rows\n\n\n\n\n그룹 변수 제거\n그룹 처리된 데이터를 제거하고 싶은 경우, ungroup() 을 사용합니다.\n\nby_species |> \n  ungroup() |> \n  tally()\n\n# A tibble: 1 × 1\n      n\n  <int>\n1    87\n\n\n물론 특정 그룹 변수만 제외할 수도 있습니다.\n\nby_sex_gender |> \n  ungroup(sex) |> \n  tally()\n\n# A tibble: 3 × 2\n  gender        n\n  <chr>     <int>\n1 feminine     17\n2 masculine    66\n3 <NA>          4\n\n\n\n\ngroup_by()와 함께 쓰는 동사\n\n1. summarise()\nsummarise()와 group_by()가 함께 사용될 경우, 그룹별로 요약 계산을 수행합니다.\n\nby_species |> \n  summarise(\n    n=n(),\n    mean_height = mean(height,na.rm=T)\n  )\n\n# A tibble: 38 × 3\n   species       n mean_height\n   <chr>     <int>       <dbl>\n 1 Aleena        1         79 \n 2 Besalisk      1        198 \n 3 Cerean        1        198 \n 4 Chagrian      1        196 \n 5 Clawdite      1        168 \n 6 Droid         6        131.\n 7 Dug           1        112 \n 8 Ewok          1         88 \n 9 Geonosian     1        183 \n10 Gungan        3        209.\n# … with 28 more rows\n\n\n.groups= 인자는 출력되는 결과의 그룹 구조를 다루는 인자입니다.\n\nby_sex_gender |> \n  summarise(n=n(), .groups = 'keep')\n\n# A tibble: 6 × 3\n# Groups:   sex, gender [6]\n  sex            gender        n\n  <chr>          <chr>     <int>\n1 female         feminine     16\n2 hermaphroditic masculine     1\n3 male           masculine    60\n4 none           feminine      1\n5 none           masculine     5\n6 <NA>           <NA>          4\n\nby_sex_gender |> \n  summarise(n=n(), .groups = 'drop')\n\n# A tibble: 6 × 3\n  sex            gender        n\n  <chr>          <chr>     <int>\n1 female         feminine     16\n2 hermaphroditic masculine     1\n3 male           masculine    60\n4 none           feminine      1\n5 none           masculine     5\n6 <NA>           <NA>          4\n\n\n\n\n2. select(), rename(), relocate()\nrename()과 relocate()는 group_by()와 관계없이 동일한 작업을 수행합니다. 각각 열의 이름과 위치에만 영향을 미치게 때문입니다.\nselect()가 group_by()와 함께 쓰이면 그룹 변수가 항상 함께 선택됩니다.\n\nby_species |> select(mass)\n\n# A tibble: 87 × 2\n# Groups:   species [38]\n   species  mass\n   <chr>   <dbl>\n 1 Human      77\n 2 Droid      75\n 3 Droid      32\n 4 Human     136\n 5 Human      49\n 6 Human     120\n 7 Human      75\n 8 Droid      32\n 9 Human      84\n10 Human      77\n# … with 77 more rows\n\n\n그룹 변수가 함께 선택되는 것을 원치 않는다면 ungroup()을 먼저 사용해야 합니다.\n\nby_species |> ungroup() |> select(mass)\n\n# A tibble: 87 × 1\n    mass\n   <dbl>\n 1    77\n 2    75\n 3    32\n 4   136\n 5    49\n 6   120\n 7    75\n 8    32\n 9    84\n10    77\n# … with 77 more rows\n\n\n\n\n3. arrange()\narrange()가 group_by()와 함께 쓰일 경우, 그냥 사용하게 되면 group_by() 가 없을 때와 동일합니다. 그러나 .by_group=T 인자를 통해 그룹 변수를 기준으로 정렬되어 결과가 출력됩니다.\n\nby_species |> \n  arrange(desc(mass)) |> \n  relocate(species, mass)\n\n# A tibble: 87 × 14\n# Groups:   species [38]\n   species     mass name     height hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender\n   <chr>      <dbl> <chr>     <int> <chr>   <chr>   <chr>     <dbl> <chr> <chr> \n 1 Hutt        1358 Jabba D…    175 <NA>    green-… orange    600   herm… mascu…\n 2 Kaleesh      159 Grievous    216 none    brown,… green,…    NA   male  mascu…\n 3 Droid        140 IG-88       200 none    metal   red        15   none  mascu…\n 4 Human        136 Darth V…    202 none    white   yellow     41.9 male  mascu…\n 5 Wookiee      136 Tarfful     234 brown   brown   blue       NA   male  mascu…\n 6 Human        120 Owen La…    178 brown,… light   blue       52   male  mascu…\n 7 Trandoshan   113 Bossk       190 none    green   red        53   male  mascu…\n 8 Wookiee      112 Chewbac…    228 brown   unknown blue      200   male  mascu…\n 9 Human        110 Jek Ton…    180 brown   fair    blue       NA   male  mascu…\n10 Besalisk     102 Dexter …    198 none    brown   yellow     NA   male  mascu…\n# … with 77 more rows, 4 more variables: homeworld <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year\n\nby_species |> \n  arrange(desc(mass), .by_group = T) |> \n  relocate(species, mass)\n\n# A tibble: 87 × 14\n# Groups:   species [38]\n   species   mass name       height hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender\n   <chr>    <dbl> <chr>       <int> <chr>   <chr>   <chr>     <dbl> <chr> <chr> \n 1 Aleena      15 Ratts Tye…     79 none    grey, … unknown      NA male  mascu…\n 2 Besalisk   102 Dexter Je…    198 none    brown   yellow       NA male  mascu…\n 3 Cerean      82 Ki-Adi-Mu…    198 white   pale    yellow       92 male  mascu…\n 4 Chagrian    NA Mas Amedda    196 none    blue    blue         NA male  mascu…\n 5 Clawdite    55 Zam Wesell    168 blonde  fair, … yellow       NA fema… femin…\n 6 Droid      140 IG-88         200 none    metal   red          15 none  mascu…\n 7 Droid       75 C-3PO         167 <NA>    gold    yellow      112 none  mascu…\n 8 Droid       32 R2-D2          96 <NA>    white,… red          33 none  mascu…\n 9 Droid       32 R5-D4          97 <NA>    white,… red          NA none  mascu…\n10 Droid       NA R4-P17         96 none    silver… red, b…      NA none  femin…\n# … with 77 more rows, 4 more variables: homeworld <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year\n\n\n\n\n4. mutate(), transmute()\ngroup_by()와 함께 새로운 변수를 생성할 경우, 같은 그룹의 경우 동일한 값이 들어가게 됩니다.\n\n\n5. filter()\nfilter()와 group_by()를 함께 사용하여, 특정 그룹의 수를 기준으로 선택할 때 사용할 수 있습니다.\n아래의 예시에서는 그룹 별 수가 1인 경우를 모두 제외하고 선택한 결과입니다.\n\nby_species |> \n  filter(n()!=1) |> \n  tally()\n\n# A tibble: 9 × 2\n  species      n\n  <chr>    <int>\n1 Droid        6\n2 Gungan       3\n3 Human       35\n4 Kaminoan     2\n5 Mirialan     2\n6 Twi'lek      2\n7 Wookiee      2\n8 Zabrak       2\n9 <NA>         4\n\n\n\n\n6. slice()\nslice()와 slice() 계열 함수들이 group_by() 와 함께 사용될 경우, 그룹별로 해당되는 값이 출력됩니다.\n\n# 그룹별 첫번째 값 \nby_species |> \n  slice(1) \n\n# A tibble: 38 × 14\n# Groups:   species [38]\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Ratts Tyer…     79    15 none    grey, … unknown      NA male  mascu… Aleen …\n 2 Dexter Jet…    198   102 none    brown   yellow       NA male  mascu… Ojom   \n 3 Ki-Adi-Mun…    198    82 white   pale    yellow       92 male  mascu… Cerea  \n 4 Mas Amedda     196    NA none    blue    blue         NA male  mascu… Champa…\n 5 Zam Wesell     168    55 blonde  fair, … yellow       NA fema… femin… Zolan  \n 6 C-3PO          167    75 <NA>    gold    yellow      112 none  mascu… Tatooi…\n 7 Sebulba        112    40 none    grey, … orange       NA male  mascu… Malast…\n 8 Wicket Sys…     88    20 brown   brown   brown         8 male  mascu… Endor  \n 9 Poggle the…    183    80 none    green   yellow       NA male  mascu… Geonos…\n10 Jar Jar Bi…    196    66 none    orange  orange       52 male  mascu… Naboo  \n# … with 28 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n\nby_species |>\n  filter(!is.na(height)) |> \n  slice_min(height,n=2)\n\n# A tibble: 48 × 14\n# Groups:   species [38]\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Ratts Tyer…     79    15 none    grey, … unknown      NA male  mascu… Aleen …\n 2 Dexter Jet…    198   102 none    brown   yellow       NA male  mascu… Ojom   \n 3 Ki-Adi-Mun…    198    82 white   pale    yellow       92 male  mascu… Cerea  \n 4 Mas Amedda     196    NA none    blue    blue         NA male  mascu… Champa…\n 5 Zam Wesell     168    55 blonde  fair, … yellow       NA fema… femin… Zolan  \n 6 R2-D2           96    32 <NA>    white,… red          33 none  mascu… Naboo  \n 7 R4-P17          96    NA none    silver… red, b…      NA none  femin… <NA>   \n 8 Sebulba        112    40 none    grey, … orange       NA male  mascu… Malast…\n 9 Wicket Sys…     88    20 brown   brown   brown         8 male  mascu… Endor  \n10 Poggle the…    183    80 none    green   yellow       NA male  mascu… Geonos…\n# … with 38 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld"
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html",
    "href": "posts/2023-01-27-Rbase/index.html",
    "title": "R 기초 이해",
    "section": "",
    "text": "이번 포스트에서는 R을 사용하기 위해 반드시 알아야 하는 R 필수 개념에 대해 설명드리도록 하겠습니다."
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#object",
    "href": "posts/2023-01-27-Rbase/index.html#object",
    "title": "R 기초 이해",
    "section": "Object",
    "text": "Object\nobject란 R에서 어떠한 데이터를 갖는 값을 의미합니다. Object는 객체라고도 불리며, 다양한 유형이나 구조의 데이터를 특정 이름으로 저장하는 것을 말합니다.\n\nobject의 생성\nR에서 object(객체)의 생성은 <- 또는 = 를 통해 이루어집니다.\n<-를 기준으로 왼쪽의 값이 object의 이름이고 오른쪽이 object가 갖게 되는 또는 object에 저장되는 데이터입니다.\n\nLHS <- RHS\nA <- B\n\n\n\nobject의 생성과 출력\nobject를 생성한다는 것은 특정 데이터를 특정한 이름으로 저장하는 것입니다.\nA <- B 를 사용해 데이터를 생성하면 A라는 object에는 B라는 데이터가 저장됩니다.\n\na <- 'Welcome to R!'\naa <- 'aa'\naa <- 1\n\n위에서는 ’Welcome to R!’이라고 하는 문자를 a라고 하는 object 로 생성한 것입니다. 반면 object의 출력은 생성한 object 에 저장되어 있는 데이터를 확인하는 것입니다.\nobject를 생성한다고 해서 그 값이 출력되지는 않습니다. object 갖고 있는 데이터를 확인하기 위해서는 object의 이름을 실행하거나 출력하는 함수를 사용해야 합니다.\n\na \n\n[1] \"Welcome to R!\"\n\n# 또는\nprint(a)\n\n[1] \"Welcome to R!\"\n\n\n만약 object를 생성함과 동시에 그 object를 출력하고 싶다면 아래와 같이 실행하면 됩니다.\n\na <- 'Welcome to R!'; print(a)\n\n[1] \"Welcome to R!\""
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#function-함수",
    "href": "posts/2023-01-27-Rbase/index.html#function-함수",
    "title": "R 기초 이해",
    "section": "Function (함수)",
    "text": "Function (함수)\nR에서 함수란 특정한 기능을 수행하는 명령어입니다. 보통 “~을 한다” 처럼 우리말의 동사라고 이해하면 쉽습니다.\nR에서 함수는 일반적으로 ()가 붙습니다.\n\nprint <- '프린트' # 프린트라는 값을 갖는 object\nprint('dd') # 'dd'를 출력하는 함수\n\n[1] \"dd\"\n\n\n위의 예시에서 print는 ’프린트’라는 문자를 갖는 object인 반면, print()는 특정 object를 출력하는 함수입니다.\n물론 함수의 이름으로도 object를 만들 수 있습니다. 그러나 이럴 경우, 분석 과정에서 이름을 혼동하는 경우가 발생할 수 있기 때문에, 나중을 생각한다면 그렇게 권장하는 방법은 아닙니다. 따라서 함수명이 아닌 다른 이름으로 object를 만드시는 것을 추천합니다.\n\n\n\n\n\n\nTip\n\n\n\nR 뿐만 아니라 프로그래밍 언어에는 일반적으로 영어를 활용하여 object 이름을 붙여줍니다.\n다양한 방법들이 있겠으나, 추천드리는 방법은 다음과 같습니다. 우선 띄어쓰기가 필요없는 하나의 단어로 object 이름을 지어주는 것은 말그대로 영어단어를 사용해주면 됩니다.\n\nresult <- 'the result'\n\n하나의 단어를 뛰어 넘어 여러 개의 단어를 붙여 써야 하는 경우에는 아래의 방법 중 원하는 방식을 사용하시면 됩니다.\n\nmyResult\nmy_result\nmy.result"
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#작업-경로-working-directory-wd",
    "href": "posts/2023-01-27-Rbase/index.html#작업-경로-working-directory-wd",
    "title": "R 기초 이해",
    "section": "작업 경로 (working directory, wd)",
    "text": "작업 경로 (working directory, wd)\n작업경로란 현재 내가 데이터 분석을 진행하고 있는 위치를 의미합니다.\n작업경로와 관련된 함수는 크게 2가지가 있습니다.\n\ngetwd() 현재 내 작업경로를 확인합니다.\n\ngetwd()\n\n[1] \"C:/Users/user/Desktop/webpage/posts/2023-01-27-Rbase\"\n\n\nsetwd() 작업경로를 특정한 곳으로 변경합니다.\n\nsetwd(\"작업경로로 설정할 위치\")\n\n\n작업경로를 설정하는 이유는 외부 데이터 파일(e.g., .csv) 을 불러올 때, 그 파일이 있는 경로가 필요하기 때문입니다."
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#패키지-packages",
    "href": "posts/2023-01-27-Rbase/index.html#패키지-packages",
    "title": "R 기초 이해",
    "section": "패키지 (packages)",
    "text": "패키지 (packages)\nR에서 패키지란 특정 함수들을 포함하고 있는 함수 세트 라고 할 수 있습니다.\n데이터 분석에 필요한 패키지들을 설치한 뒤 그 패키지를 불러 들여와야 사용할 수 있습니다.\n\n패키지 설치: install.packages()\n\ninstall.packages('패키지명')\n\n위와 같이 설치하고자 하는 패키지를 install.packages() 함수 안에 따옴표가 붙은 문자 형태로 넣어주어야 합니다.\n패키지 불러오기: library() 또는 require()\n\nlibrary(dplyr)\n# 또는\nrequire(dplyr)\n\n설치된 패키지를 불러오기 위해서는 library() 또는 require() 함수 안에 패키지 이름을 object 형태(따옴표가 붙지 않은 형태)로 넣어주어야 합니다.\n사실 패키지 이름을 입력할 때, 따옴표를 사용해 문자로 넣어주어도 가능합니다. 그러나 문자열로 넣게 된다면 자동완성기능을 활용할 수 없게 됩니다. 그렇기 때문에 패키지의 이름을 전부 입력해야만 하죠. 따라서 가급적이면 따옴표를 사용하지 않는 것을 추천합니다.\n\n\n\n\n\n\nNote\n\n\n\nlibrary()와 require()는 패키지를 불러온다는 점에서 동일한 역할을 하지만, 차이점이 존재합니다.\nlibrary() 는 설치되지 않은 패키지를 불러오면 에러메시지를 출력하지만, require()는 경고와 함께 T/F 값을 반환할 수 있습니다.\n\n# library\nlibrary(ggplot3)\n\nError in library(ggplot3) : there is no package called 'ggplot3'\n\nrequire(ggplot3)\n\n필요한 패키지를 로딩중입니다: ggplot3\nWarning message:\nIn library(package, lib.loc = lib.loc, character.only = TRUE, logical.return = TRUE,  :\n  ‘ggplot3’이라고 불리는 패키지가 없습니다\n\n\n\n패키지를 성공적으로 불러왔다면, 패키지에 있는 함수들을 활용할 수 있게 됩니다.\n물론 패키지를 불러오지 않고 (library()나 require()를 이용하지 않고) 패키지 내의 함수를 사용하는 방법이 있긴 합니다.\n\ndplyr::select(column이름) #패키지명::함수\n\n위의 코드처럼 패키지명::함수명 의 방식을 이용한다면 패키지 내에 있는 함수들을 사용할 수 있습니다.\n그러나 매번 패키지명::을 이용해 함수를 이용하는 것보다 library() 함수를 한 번 실행한 뒤, 패키지의 함수들을 이용하는 것이 훨씬 효율적이겠죠?"
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#numeric",
    "href": "posts/2023-01-27-Rbase/index.html#numeric",
    "title": "R 기초 이해",
    "section": "numeric",
    "text": "numeric\nnumeric은 이름에서 알 수 있듯이 숫자 데이터입니다. numeric은 정수와 실수를 모두 포함합니다. R에서 정수는 integer, 실수는 double로 표현됩니다.\n\ninteger\n우리가 생각하는 정수는 흔히 소숫점이 없는 숫자입니다. 그러나 R에서는 단순히 숫자에 소수점이 없다고 해서 integer로 인식하지 않습니다.\n\nis.integer(1) # FALSE\n\n[1] FALSE\n\nclass(1) # numeric\n\n[1] \"numeric\"\n\nis.integer(1L)\n\n[1] TRUE\n\nclass(1L)\n\n[1] \"integer\"\n\n\n위의 코드로 봤을 때, 단순한 1은 integer가 아니라 numeric입니다.\nR에서 integer를 사용하기 위해선 숫자 뒤에 L을 붙여주어야 합니다.\n\n\ndouble\n우리가 알고 있는 실수는 소수점이 있는 숫자입니다. 그러나 R에서는 앞서 살펴 보았듯, L이 붙어 integer로 지정된 숫자가 아니라면 모두 실수라고 할 수 있습니다.\n\nis.numeric(1) #TRUE\n\n[1] TRUE\n\nis.double(1) #TRUE\n\n[1] TRUE\n\nclass(1.5) #numeric\n\n[1] \"numeric\"\n\n\n1이라는 숫자는 double이기도 하면서 동시에 numeric입니다. 또한 소수점이 들어가는 숫자의 유형을 확인해보면 double이 아니라 numeric이라는 것을 알 수 있습니다.\n즉, numeric이 숫자데이터에서 가장 상위의 개념이고 그 하위 개념으로 double 과 integer 가 있다고 이해하시면 쉽습니다.\n\n#|echo: false\n#|warning: false\n\nrequire(ggplot2)\nrequire(ggforce)\ntemp <- data.frame(x=c(100,300,200),\n                   y=c(250,250,250),\n                   r=c(80,80,200),\n                   y_label=c(250,250,450),\n                   label = c('integer','double','numeric'))\nggplot(temp) + \n  geom_circle(aes(x0=x,y0=y,r=r, fill=label),alpha=.2) +\n  coord_fixed()+\n  geom_label(data=temp,aes(x=x,y=y_label,label=label))+\n  theme_void()+\n  labs(title='    숫자유형 데이터의 관계')+\n  theme(legend.position='none')\n\n\n\n\n그러나 이 둘을 구분해서 사용하는 경우는 드뭅니다. 모든 숫자 데이터는 numeric으로 사용하셔도 상관없습니다."
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#character",
    "href": "posts/2023-01-27-Rbase/index.html#character",
    "title": "R 기초 이해",
    "section": "character",
    "text": "character\ncharacter는 큰 따옴표 또는 작은 따옴표가 붙은 문자열 데이터를 의미합니다.\n\nchr <- 'character'\nchr\n\n[1] \"character\"\n\n\n앞서 object 부분에서 말씀드렸듯이, ‘character’ 라는 문자열 데이터이고, chr는 ‘character’ 값을 갖는 object입니다. chr 와 'chr'을 헷갈리지 마시기 바랍니다."
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#factor",
    "href": "posts/2023-01-27-Rbase/index.html#factor",
    "title": "R 기초 이해",
    "section": "factor",
    "text": "factor\nfactor는 다른 데이터의 유형과 달리 순서 (level)를 갖는 데이터 유형입니다.\n\nvec_num <- 1:10\nvec_fac <- factor(1:10)\nclass(vec_fac) # factor\n\n[1] \"factor\"\n\nprint(vec_fac) \n\n [1] 1  2  3  4  5  6  7  8  9  10\nLevels: 1 2 3 4 5 6 7 8 9 10\n\n\nvec_num과 vec_fac은 모두 1부터 10까지의 데이터를 갖고 있습니다. 그러나 vec_num과 달리 vec_fac을 출력했을 때, Levels도 함께 출력되는 것을 확인할 수 있습니다.\n만약 임의로 factor 변수의 level을 변경하고 싶다면 아래와 같이 factor 함수 안에 levels 부분을 수정해주면 됩니다.\n\nvec_fac2 <- factor(1:10,  levels=c(1,3,5,7,9,10,8,6,4,2))\nprint(vec_fac2)\n\n [1] 1  2  3  4  5  6  7  8  9  10\nLevels: 1 3 5 7 9 10 8 6 4 2\n\n\nvec_fac과 vec_fac2의 levels가 다른 것을 확인할 수 있습니다.\n또한 factor를 ordinal 하게 만들어줄 수 있습니다. ordered=T 를 이용해 nominal 한 factor를 ordinal하게 변경할 수 있습니다.\n\nvec_fac3 <- factor(1:10,\n                   ordered = T,\n                   levels=c(1,3,5,7,9,10,8,6,4,2))\nprint(vec_fac3)\n\n [1] 1  2  3  4  5  6  7  8  9  10\nLevels: 1 < 3 < 5 < 7 < 9 < 10 < 8 < 6 < 4 < 2\n\n\n출력 시 Levels에 < 가 생성되는 것을 알 수 있습니다."
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#logical",
    "href": "posts/2023-01-27-Rbase/index.html#logical",
    "title": "R 기초 이해",
    "section": "logical",
    "text": "logical\nlogical은 단어에서 알 수 있듯 논리형 데이터 입니다. 쉽게 말하면 참(TRUE)인지 거짓(FALSE)인지를 나타내는 데이터 유형입니다.\n\nclass(TRUE) #  logical\n\n[1] \"logical\"\n\nTRUE\n\n[1] TRUE\n\nFALSE\n\n[1] FALSE\n\nT\n\n[1] TRUE\n\nF\n\n[1] FALSE\n\n\nR에서 TRUE 와 FALSE 는 각각 T 와 F로 줄여쓸 수 있습니다.\n\n\n\n\n\n\nNote\n\n\n\nR에서 사용되는 변수를 개념적으로 정리해보면 다음과 같습니다.\n연속형 변수(Continuous variable): numeric, integer, double\n범주형 변수(Categorical variable): character, factor"
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#vector",
    "href": "posts/2023-01-27-Rbase/index.html#vector",
    "title": "R 기초 이해",
    "section": "Vector",
    "text": "Vector\nvector는 하나 이상의 값을 갖는 1차원 구조의 데이터입니다. 가장 단순하지만, 또 데이터 분석에 많이 활용되는 데이터 구조 중 하나입니다.\n보통 vector를 생성할 때는 c() 를 이용해 생성합니다. c()는 ’concatenate’의 약자입니다.\n\nvec1 <- c(1,2,3); vec1\n\n[1] 1 2 3\n\nvec2 <- c('a','b','c'); vec2\n\n[1] \"a\" \"b\" \"c\"\n\n\nvec1은 numeric 데이터를 갖는 vector이고 vec2는 character 데이터를 갖는 vector입니다.\n여러 유형의 데이터를 갖는 vector인 경우, 하나라도 문자(character) 또는 factor가 있는 경우, 전부 그 유형의 데이터를 갖는 vector로 저장됩니다.\n\nvec3 <- c(1,2,3,'a',5,6)\nvec3\n\n[1] \"1\" \"2\" \"3\" \"a\" \"5\" \"6\"\n\n\nvec3를 선언할 때는 1,2,3 과 같은 숫자가 들어갔지만, vec3를 출력해보면 따옴표가 붙은 character인 것을 알 수 있습니다."
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#matrix",
    "href": "posts/2023-01-27-Rbase/index.html#matrix",
    "title": "R 기초 이해",
    "section": "Matrix",
    "text": "Matrix\n2차원 구조의 데이터입니다. 행렬이라고 이해하시면 쉽습니다.\nR에서 matrix를 생성하는 함수는 matrix()입니다.\n\nmat <- matrix(1:12)\nmat2 <- matrix(1:12, nrow=3) # 행의 개수: 3\nmat3 <- matrix(1:12, ncol=3) # 열의 개수: 3\nmat4 <- matrix(1:12, ncol=3, byrow=T)\n\nmatrix() 함수에서는 행 또는 열의 개수를 지정해줄 수 있습니다.\n\nnrow() : 행의 개수 지정\nncol(): 열의 개수 지정\n\n마지막의 byrow인자는 matrix의 입력 순서를 행의 방향으로 설정해주는 것입니다. 초기에는 matrix가 열 방향(위에서 아래로 (↓))이었다면, byrow를 통해 matrix의 값들을 행 방향 (좌에서 우로 (→))으로 입력할 수 있습니다."
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#data.frame",
    "href": "posts/2023-01-27-Rbase/index.html#data.frame",
    "title": "R 기초 이해",
    "section": "Data.frame",
    "text": "Data.frame\n2차원 구조의 데이터로서, R에서 데이터분석을 위해 가장 많이 활용되는 데이터 구조입니다. 데이터프레임은 matrix와 동일한 2차원 형태지만 몇 가지 다른 점이 있습니다.\n\nmatrix와 달리, $ 기호를 이용해 column 이름으로 호출 가능합니다.\n각 열(column)별로 다른 데이터 유형을 가질 수 있습니다.\n\ndata.frame은 앞으로 가장 많이 사용할 데이터 구조이기 때문에, 아래에서 더 다뤄보도록 하겠습니다."
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#list",
    "href": "posts/2023-01-27-Rbase/index.html#list",
    "title": "R 기초 이해",
    "section": "List",
    "text": "List\nlist는 다른 데이터 구조들과는 다릅니다.\n\n데이터프레임의 column처럼 데이터마다 이름을 가질 수 있습니다.\n각 이름마다 다른 유형, 다른 구조의 데이터를 가질 수 있습니다.\n각 이름마다 길이가 다른 데이터를 가질 수 있습니다.\n\nl <- list()\nl$a <- 1:5\nl$b <- LETTERS # 알파벳 대문자\nl$c <- matrix(1:20,nrow=4, byrow=T)\nl$d <- data.frame(a=1:5, b=letters[1:5])\nl\n\n$a\n[1] 1 2 3 4 5\n\n$b\n [1] \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\" \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\"\n[20] \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\"\n\n$c\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    2    3    4    5\n[2,]    6    7    8    9   10\n[3,]   11   12   13   14   15\n[4,]   16   17   18   19   20\n\n$d\n  a b\n1 1 a\n2 2 b\n3 3 c\n4 4 d\n5 5 e\n\n\n위의 코드를 보면, l이라고 하는 list에는 a라는 이름을 갖는 데이터와 b라는 이름을 갖는 데이터가 존재합니다.\n또한 a는 1부터 5까지의 numeric 유형의 vector를 갖는 반면, b는 알파벳 대문자의 character 유형의 vector를, c는 4행 5열의 matrix를, 마지막으로 d는 data.frame을 갖습니다."
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#산술-연산자",
    "href": "posts/2023-01-27-Rbase/index.html#산술-연산자",
    "title": "R 기초 이해",
    "section": "산술 연산자",
    "text": "산술 연산자\n산술연산자는 숫자를 계산하는 데 사용되는 연산자를 말합니다. 우리가 잘 아는 덧셈(+), 뺄셈(-), 곱셈(*), 나눗셈(/) 등의 연산자가 있습니다."
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#논리-연산자",
    "href": "posts/2023-01-27-Rbase/index.html#논리-연산자",
    "title": "R 기초 이해",
    "section": "논리 연산자",
    "text": "논리 연산자\n논리 연산자는 참(TRUE)과 거짓(FALSE)를 반환하는 연산자들을 의미합니다. 보통 LHS와 RHS의 값을 비교할 때 사용하는 연산자입니다.\n연산 결과가 맞는 경우는 TRUE를, 그렇지 않은 경우는 FALSE를 반환합니다.\n논리 연산자는 주로 데이터프레임과 함께 특정 조건을 만족하는 행을 찾아낼 때 사용합니다.\n\nA == B: 같음\n\n10 == 10\n\n[1] TRUE\n\n\nA < B, A <= B : 작음, 작거나 같음\n\n5 < 10\n\n[1] TRUE\n\n5<=10\n\n[1] TRUE\n\n\nA > B, A >= B :큼, 크거나 같음\n\n44>=10\n\n[1] TRUE\n\n10>35\n\n[1] FALSE\n\n\nA != B : 같지 않음\n\n10 != 5\n\n[1] TRUE\n\n\nA & B : A와 B가 모두 참일 때 TRUE를 반환합니다.\n\n10 >5 & 25 > 20\n\n[1] TRUE\n\n\nA | B : A 또는 B 하나만 참이면 TRUE를 반환합니다.\n\n10 <5 | 50 > 49\n\n[1] TRUE"
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#파이프-연산자",
    "href": "posts/2023-01-27-Rbase/index.html#파이프-연산자",
    "title": "R 기초 이해",
    "section": "파이프 연산자",
    "text": "파이프 연산자\n파이프 연산자란 R의 특수한 연산자로, % 가 붙은 연산자들을 의미합니다. 대표적인 파이프 연산자는 %>% 가 있습니다. 이 연산자를 사용하기 위해선 magrittr 패키지가 필요합니다. 단축키는 ctrl + shift + m 로 사용할 수 있습니다.\n\n\n\n\n\n\nTip\n\n\n\n기존에 존재하던 %>% 는 magrittr 패키지를 불러들여와야 사용이 가능했습니다. 하지만 R 4.1 이후로는 기본적으로 |> 라는 파이프 연산자를 제공하고 있습니다. 실질적으로 기능은 거의 같기 때문에 원하는 파이프 연산자를 사용하시면 됩니다."
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#요약-함수",
    "href": "posts/2023-01-27-Rbase/index.html#요약-함수",
    "title": "R 기초 이해",
    "section": "요약 함수",
    "text": "요약 함수\nR에서는 다양한 숫자 데이터를 특정한 값으로 요약할 수 있습니다. 이 글에서는 다음과 같은 함수들을 요약함수로 지칭하겠습니다. 대표적인 요약 함수로는 mean()평균, sd()표준편차, min()최소값, max()최대값, median()중앙값, sum()합계, quantile() 4분위수 등이 있습니다.\n\nmean(df$Age) # 평균\n\n[1] 36.05\n\nsd(df$Age) # 표준편차\n\n[1] 20.182\n\nmin(df$Age) # 최소\n\n[1] 4\n\nmax(df$Age) # 최대\n\n[1] 66\n\nmedian(df$Age)  # 중앙값\n\n[1] 39.5\n\nquantile(df$Age) # 4분위수\n\n  0%  25%  50%  75% 100% \n 4.0 14.5 39.5 51.0 66.0 \n\n# 중앙값: \nlibrary(DescTools) # or custom function\nMode(df$Age)\n\n[1] 34 45\nattr(,\"freq\")\n[1] 3\n\n\n만약 numeric 데이터에 결측치(NA)가 있다면 요약함수를 실행했을 때, NA가 출력됩니다.\n\nmean(df$BMI) \n\n[1] 25.682\n\n\n따라서 데이터 내에 NA가 있는 경우는 요약함수 안에 na.rm=T를 넣어줘야 합니다. NA를 제외한 나머지 데이터로 요약한 값이 출력됩니다.\n\nmean(df$BMI, na.rm=T) \n\n[1] 25.682\n\n\n한편, 숫자형 데이터 이외에, character, factor 등 범주형 데이터의 경우 각 범주의 응답 분포를 확인할 수 있습니다. table() 함수를 통해 이를 파악할 수 있습니다.\n\ntable(df$Gender)\n\n\nfemale   male \n     7     13 \n\n\n응답 분포를 확률로 표현할 수 있는 함수는 prop.table() 입니다. 이 때, prop.table() 에 넣어줄 인자는 table()에 범주를 확인하고자 하는 변수를 넣은 값입니다.\n\nprop.table(table(df$Gender))\n\n\nfemale   male \n  0.35   0.65 \n\nprop.table(table(df$Gender))*100 # percent 위해 100 곱하기\n\n\nfemale   male \n    35     65"
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#data.frame-관련-함수",
    "href": "posts/2023-01-27-Rbase/index.html#data.frame-관련-함수",
    "title": "R 기초 이해",
    "section": "data.frame 관련 함수",
    "text": "data.frame 관련 함수\n다음으로 데이터프레임과 관련된 함수를 알아보겠습니다. 사실 이 함수들은 data.frame뿐만 아니라 vector나 다른 구조의 데이터들과도 사용되는 함수입니다.\n다만 앞으로 우리가 다룰 데이터 구조의 대부분이 data.frame이고, data.frame을 활용해 데이터를 분석할 때 그 활용도가 높기 때문에 편의상data.frame 관련 함수라고 지칭하겠습니다.\n\n데이터 불러오기/저장하기\nread.csv() 를 통해 외부 csv 파일을 작업환경으로 불러올 수 있습니다.\n\ndf2 <- read.csv('데이터명.csv')\n\n반면 작업환경에서 분석하던 data.frame을 외부 csv 파일로 저장할 수 있습니다. write.csv() 함수를 통해 가능합니다.\n\nwrite.csv(df2,'~/temp.csv') #작업저장경로+파일이름\n\n\n\n데이터 훑어보기\n일반적으로 데이터를 분석하기 전, 데이터의 특징을 파악하는 것이 필요합니다. 데이터의 특징을 파악하는 함수들은 head(),tail(), str(), summary()등이 있습니다.\n\nhead(df) # 데이터의 첫 6행을 확인\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nID\nSurveyYr\nGender\nAge\nAgeDecade\nAgeMonths\nRace1\nRace3\nEducation\nMaritalStatus\nHHIncome\nHHIncomeMid\nPoverty\nHomeRooms\nHomeOwn\nWork\nWeight\nLength\nHeadCirc\nHeight\nBMI\nBMICatUnder20yrs\nBMI_WHO\nPulse\nBPSysAve\nBPDiaAve\nBPSys1\nBPDia1\nBPSys2\nBPDia2\nBPSys3\nBPDia3\nTestosterone\nDirectChol\nTotChol\nUrineVol1\nUrineFlow1\nUrineVol2\nUrineFlow2\nDiabetes\nDiabetesAge\nHealthGen\nDaysPhysHlthBad\nDaysMentHlthBad\nLittleInterest\nDepressed\nnPregnancies\nnBabies\nAge1stBaby\nSleepHrsNight\nSleepTrouble\nPhysActive\nPhysActiveDays\nTVHrsDay\nCompHrsDay\nTVHrsDayChild\nCompHrsDayChild\nAlcohol12PlusYr\nAlcoholDay\nAlcoholYear\nSmokeNow\nSmoke100\nSmoke100n\nSmokeAge\nMarijuana\nAgeFirstMarij\nRegularMarij\nAgeRegMarij\nHardDrugs\nSexEver\nSexAge\nSexNumPartnLife\nSexNumPartYear\nSameSex\nSexOrientation\nPregnantNow\n\n\n\n\n51624\n2009_10\nmale\n34\n30-39\n409\nWhite\nNA\nHigh School\nMarried\n25000-34999\n30000\n1.36\n6\nOwn\nNotWorking\n87.4\nNA\nNA\n164.7\n32.22\nNA\n30.0_plus\n70\n113\n85\n114\n88\n114\n88\n112\n82\nNA\n1.29\n3.49\n352\nNA\nNA\nNA\nNo\nNA\nGood\n0\n15\nMost\nSeveral\nNA\nNA\nNA\n4\nYes\nNo\nNA\nNA\nNA\nNA\nNA\nYes\nNA\n0\nNo\nYes\nSmoker\n18\nYes\n17\nNo\nNA\nYes\nYes\n16\n8\n1\nNo\nHeterosexual\nNA\n\n\n51624\n2009_10\nmale\n34\n30-39\n409\nWhite\nNA\nHigh School\nMarried\n25000-34999\n30000\n1.36\n6\nOwn\nNotWorking\n87.4\nNA\nNA\n164.7\n32.22\nNA\n30.0_plus\n70\n113\n85\n114\n88\n114\n88\n112\n82\nNA\n1.29\n3.49\n352\nNA\nNA\nNA\nNo\nNA\nGood\n0\n15\nMost\nSeveral\nNA\nNA\nNA\n4\nYes\nNo\nNA\nNA\nNA\nNA\nNA\nYes\nNA\n0\nNo\nYes\nSmoker\n18\nYes\n17\nNo\nNA\nYes\nYes\n16\n8\n1\nNo\nHeterosexual\nNA\n\n\n51624\n2009_10\nmale\n34\n30-39\n409\nWhite\nNA\nHigh School\nMarried\n25000-34999\n30000\n1.36\n6\nOwn\nNotWorking\n87.4\nNA\nNA\n164.7\n32.22\nNA\n30.0_plus\n70\n113\n85\n114\n88\n114\n88\n112\n82\nNA\n1.29\n3.49\n352\nNA\nNA\nNA\nNo\nNA\nGood\n0\n15\nMost\nSeveral\nNA\nNA\nNA\n4\nYes\nNo\nNA\nNA\nNA\nNA\nNA\nYes\nNA\n0\nNo\nYes\nSmoker\n18\nYes\n17\nNo\nNA\nYes\nYes\n16\n8\n1\nNo\nHeterosexual\nNA\n\n\n51625\n2009_10\nmale\n4\n0-9\n49\nOther\nNA\nNA\nNA\n20000-24999\n22500\n1.07\n9\nOwn\nNA\n17.0\nNA\nNA\n105.4\n15.30\nNA\n12.0_18.5\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNo\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n4\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n51630\n2009_10\nfemale\n49\n40-49\n596\nWhite\nNA\nSome College\nLivePartner\n35000-44999\n40000\n1.91\n5\nRent\nNotWorking\n86.7\nNA\nNA\n168.4\n30.57\nNA\n30.0_plus\n86\n112\n75\n118\n82\n108\n74\n116\n76\nNA\n1.16\n6.70\n77\n0.094\nNA\nNA\nNo\nNA\nGood\n0\n10\nSeveral\nSeveral\n2\n2\n27\n8\nYes\nNo\nNA\nNA\nNA\nNA\nNA\nYes\n2\n20\nYes\nYes\nSmoker\n38\nYes\n18\nNo\nNA\nYes\nYes\n12\n10\n1\nYes\nHeterosexual\nNA\n\n\n51638\n2009_10\nmale\n9\n0-9\n115\nWhite\nNA\nNA\nNA\n75000-99999\n87500\n1.84\n6\nRent\nNA\n29.8\nNA\nNA\n133.1\n16.82\nNA\n12.0_18.5\n82\n86\n47\n84\n50\n84\n50\n88\n44\nNA\n1.34\n4.86\n123\n1.538\nNA\nNA\nNo\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n5\n0\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\n\n\n\n\ntail(df) # 데이터의 마지막 6행을 확인\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nID\nSurveyYr\nGender\nAge\nAgeDecade\nAgeMonths\nRace1\nRace3\nEducation\nMaritalStatus\nHHIncome\nHHIncomeMid\nPoverty\nHomeRooms\nHomeOwn\nWork\nWeight\nLength\nHeadCirc\nHeight\nBMI\nBMICatUnder20yrs\nBMI_WHO\nPulse\nBPSysAve\nBPDiaAve\nBPSys1\nBPDia1\nBPSys2\nBPDia2\nBPSys3\nBPDia3\nTestosterone\nDirectChol\nTotChol\nUrineVol1\nUrineFlow1\nUrineVol2\nUrineFlow2\nDiabetes\nDiabetesAge\nHealthGen\nDaysPhysHlthBad\nDaysMentHlthBad\nLittleInterest\nDepressed\nnPregnancies\nnBabies\nAge1stBaby\nSleepHrsNight\nSleepTrouble\nPhysActive\nPhysActiveDays\nTVHrsDay\nCompHrsDay\nTVHrsDayChild\nCompHrsDayChild\nAlcohol12PlusYr\nAlcoholDay\nAlcoholYear\nSmokeNow\nSmoke100\nSmoke100n\nSmokeAge\nMarijuana\nAgeFirstMarij\nRegularMarij\nAgeRegMarij\nHardDrugs\nSexEver\nSexAge\nSexNumPartnLife\nSexNumPartYear\nSameSex\nSexOrientation\nPregnantNow\n\n\n\n\n15\n51666\n2009_10\nfemale\n58\n50-59\n700\nMexican\nNA\nHigh School\nMarried\n75000-99999\n87500\n2.03\n10\nRent\nLooking\n57.5\nNA\nNA\n148.1\n26.22\nNA\n25.0_to_29.9\n94\n127\n83\nNA\nNA\n134\n82\n120\n84\nNA\n1.14\n4.78\n29\n0.299\nNA\nNA\nNo\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n5\nNo\nYes\n2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nYes\nYes\nSmoker\n17\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n16\n51667\n2009_10\nmale\n50\n50-59\n603\nWhite\nNA\nSome College\nNeverMarried\n15000-19999\n17500\n1.24\n4\nRent\nLooking\n84.1\nNA\nNA\n177.8\n26.60\nNA\n25.0_to_29.9\n74\n142\n68\n138\n66\n142\n74\n142\n62\nNA\n1.06\n5.22\n64\n0.190\nNA\nNA\nNo\nNA\nGood\n0\n0\nNone\nNone\nNA\nNA\nNA\n7\nNo\nYes\n7\nNA\nNA\nNA\nNA\nNo\nNA\n0\nNA\nNo\nNon-Smoker\nNA\nNo\nNA\nNo\nNA\nNo\nYes\nNA\n9\n1\nNo\nHeterosexual\nNA\n\n\n17\n51671\n2009_10\nfemale\n9\n0-9\n112\nBlack\nNA\nNA\nNA\nNA\nNA\nNA\n3\nRent\nNA\n53.1\nNA\nNA\n139.2\n27.40\nNA\n25.0_to_29.9\n92\n93\n63\n86\n56\n90\n64\n96\n62\nNA\n1.22\n4.86\n156\n0.975\nNA\nNA\nNo\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n0\n1\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n18\n51677\n2009_10\nmale\n33\n30-39\n404\nWhite\nNA\nHigh School\nMarried\n25000-34999\n30000\n1.27\n11\nOwn\nWorking\n93.8\nNA\nNA\n181.3\n28.54\nNA\n25.0_to_29.9\n96\n128\n74\n126\n80\n128\n74\nNA\nNA\nNA\n0.91\n5.59\n155\n0.574\nNA\nNA\nNo\nNA\nFair\n3\n7\nSeveral\nNone\nNA\nNA\nNA\n6\nNo\nNo\nNA\nNA\nNA\nNA\nNA\nYes\n3\n104\nNo\nYes\nSmoker\nNA\nNo\nNA\nNo\nNA\nNo\nYes\n27\n1\n1\nNo\nHeterosexual\nNA\n\n\n19\n51678\n2009_10\nmale\n60\n60-69\n721\nWhite\nNA\nHigh School\nMarried\n15000-19999\n17500\n1.03\n5\nOwn\nWorking\n74.6\nNA\nNA\n169.9\n25.84\nNA\n25.0_to_29.9\n84\n152\n100\n154\n98\n150\n98\n154\n102\nNA\n1.34\n6.39\n238\nNA\nNA\nNA\nNo\nNA\nVgood\n7\n0\nNone\nNone\nNA\nNA\nNA\n6\nYes\nNo\nNA\nNA\nNA\nNA\nNA\nYes\n6\n36\nNo\nYes\nSmoker\n16\nNA\nNA\nNA\nNA\nNo\nYes\n20\n1\nNA\nNo\nNA\nNA\n\n\n20\n51679\n2009_10\nmale\n16\n10-19\n194\nOther\nNA\nNA\nNA\nNA\nNA\nNA\n7\nOwn\nNotWorking\n73.2\nNA\nNA\n172.0\n24.74\nNA\n18.5_to_24.9\n76\n126\n72\n132\n74\n126\n68\n126\n76\nNA\n1.14\n3.00\n345\n1.742\nNA\nNA\nNo\nNA\nFair\n0\n20\nNA\nNA\nNA\nNA\nNA\n6\nNo\nYes\n3\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\n\n\n\n\nstr(df) # 데이터의 구조 확인\n\n'data.frame':   20 obs. of  76 variables:\n $ ID              : int  51624 51624 51624 51625 51630 51638 51646 51647 51647 51647 ...\n $ SurveyYr        : Factor w/ 2 levels \"2009_10\",\"2011_12\": 1 1 1 1 1 1 1 1 1 1 ...\n $ Gender          : Factor w/ 2 levels \"female\",\"male\": 2 2 2 2 1 2 2 1 1 1 ...\n $ Age             : int  34 34 34 4 49 9 8 45 45 45 ...\n $ AgeDecade       : Factor w/ 8 levels \" 0-9\",\" 10-19\",..: 4 4 4 1 5 1 1 5 5 5 ...\n $ AgeMonths       : int  409 409 409 49 596 115 101 541 541 541 ...\n $ Race1           : Factor w/ 5 levels \"Black\",\"Hispanic\",..: 4 4 4 5 4 4 4 4 4 4 ...\n $ Race3           : Factor w/ 6 levels \"Asian\",\"Black\",..: NA NA NA NA NA NA NA NA NA NA ...\n $ Education       : Factor w/ 5 levels \"8th Grade\",\"9 - 11th Grade\",..: 3 3 3 NA 4 NA NA 5 5 5 ...\n $ MaritalStatus   : Factor w/ 6 levels \"Divorced\",\"LivePartner\",..: 3 3 3 NA 2 NA NA 3 3 3 ...\n $ HHIncome        : Factor w/ 12 levels \" 0-4999\",\" 5000-9999\",..: 6 6 6 5 7 11 9 11 11 11 ...\n $ HHIncomeMid     : int  30000 30000 30000 22500 40000 87500 60000 87500 87500 87500 ...\n $ Poverty         : num  1.36 1.36 1.36 1.07 1.91 1.84 2.33 5 5 5 ...\n $ HomeRooms       : int  6 6 6 9 5 6 7 6 6 6 ...\n $ HomeOwn         : Factor w/ 3 levels \"Own\",\"Rent\",\"Other\": 1 1 1 1 2 2 1 1 1 1 ...\n $ Work            : Factor w/ 3 levels \"Looking\",\"NotWorking\",..: 2 2 2 NA 2 NA NA 3 3 3 ...\n $ Weight          : num  87.4 87.4 87.4 17 86.7 29.8 35.2 75.7 75.7 75.7 ...\n $ Length          : num  NA NA NA NA NA NA NA NA NA NA ...\n $ HeadCirc        : num  NA NA NA NA NA NA NA NA NA NA ...\n $ Height          : num  165 165 165 105 168 ...\n $ BMI             : num  32.2 32.2 32.2 15.3 30.6 ...\n $ BMICatUnder20yrs: Factor w/ 4 levels \"UnderWeight\",..: NA NA NA NA NA NA NA NA NA NA ...\n $ BMI_WHO         : Factor w/ 4 levels \"12.0_18.5\",\"18.5_to_24.9\",..: 4 4 4 1 4 1 2 3 3 3 ...\n $ Pulse           : int  70 70 70 NA 86 82 72 62 62 62 ...\n $ BPSysAve        : int  113 113 113 NA 112 86 107 118 118 118 ...\n $ BPDiaAve        : int  85 85 85 NA 75 47 37 64 64 64 ...\n $ BPSys1          : int  114 114 114 NA 118 84 114 106 106 106 ...\n $ BPDia1          : int  88 88 88 NA 82 50 46 62 62 62 ...\n $ BPSys2          : int  114 114 114 NA 108 84 108 118 118 118 ...\n $ BPDia2          : int  88 88 88 NA 74 50 36 68 68 68 ...\n $ BPSys3          : int  112 112 112 NA 116 88 106 118 118 118 ...\n $ BPDia3          : int  82 82 82 NA 76 44 38 60 60 60 ...\n $ Testosterone    : num  NA NA NA NA NA NA NA NA NA NA ...\n $ DirectChol      : num  1.29 1.29 1.29 NA 1.16 1.34 1.55 2.12 2.12 2.12 ...\n $ TotChol         : num  3.49 3.49 3.49 NA 6.7 4.86 4.09 5.82 5.82 5.82 ...\n $ UrineVol1       : int  352 352 352 NA 77 123 238 106 106 106 ...\n $ UrineFlow1      : num  NA NA NA NA 0.094 ...\n $ UrineVol2       : int  NA NA NA NA NA NA NA NA NA NA ...\n $ UrineFlow2      : num  NA NA NA NA NA NA NA NA NA NA ...\n $ Diabetes        : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n $ DiabetesAge     : int  NA NA NA NA NA NA NA NA NA NA ...\n $ HealthGen       : Factor w/ 5 levels \"Excellent\",\"Vgood\",..: 3 3 3 NA 3 NA NA 2 2 2 ...\n $ DaysPhysHlthBad : int  0 0 0 NA 0 NA NA 0 0 0 ...\n $ DaysMentHlthBad : int  15 15 15 NA 10 NA NA 3 3 3 ...\n $ LittleInterest  : Factor w/ 3 levels \"None\",\"Several\",..: 3 3 3 NA 2 NA NA 1 1 1 ...\n $ Depressed       : Factor w/ 3 levels \"None\",\"Several\",..: 2 2 2 NA 2 NA NA 1 1 1 ...\n $ nPregnancies    : int  NA NA NA NA 2 NA NA 1 1 1 ...\n $ nBabies         : int  NA NA NA NA 2 NA NA NA NA NA ...\n $ Age1stBaby      : int  NA NA NA NA 27 NA NA NA NA NA ...\n $ SleepHrsNight   : int  4 4 4 NA 8 NA NA 8 8 8 ...\n $ SleepTrouble    : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 NA 2 NA NA 1 1 1 ...\n $ PhysActive      : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 NA 1 NA NA 2 2 2 ...\n $ PhysActiveDays  : int  NA NA NA NA NA NA NA 5 5 5 ...\n $ TVHrsDay        : Factor w/ 7 levels \"0_hrs\",\"0_to_1_hr\",..: NA NA NA NA NA NA NA NA NA NA ...\n $ CompHrsDay      : Factor w/ 7 levels \"0_hrs\",\"0_to_1_hr\",..: NA NA NA NA NA NA NA NA NA NA ...\n $ TVHrsDayChild   : int  NA NA NA 4 NA 5 1 NA NA NA ...\n $ CompHrsDayChild : int  NA NA NA 1 NA 0 6 NA NA NA ...\n $ Alcohol12PlusYr : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 NA 2 NA NA 2 2 2 ...\n $ AlcoholDay      : int  NA NA NA NA 2 NA NA 3 3 3 ...\n $ AlcoholYear     : int  0 0 0 NA 20 NA NA 52 52 52 ...\n $ SmokeNow        : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 NA 2 NA NA NA NA NA ...\n $ Smoke100        : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 NA 2 NA NA 1 1 1 ...\n $ Smoke100n       : Factor w/ 2 levels \"Non-Smoker\",\"Smoker\": 2 2 2 NA 2 NA NA 1 1 1 ...\n $ SmokeAge        : int  18 18 18 NA 38 NA NA NA NA NA ...\n $ Marijuana       : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 NA 2 NA NA 2 2 2 ...\n $ AgeFirstMarij   : int  17 17 17 NA 18 NA NA 13 13 13 ...\n $ RegularMarij    : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 NA 1 NA NA 1 1 1 ...\n $ AgeRegMarij     : int  NA NA NA NA NA NA NA NA NA NA ...\n $ HardDrugs       : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 NA 2 NA NA 1 1 1 ...\n $ SexEver         : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 NA 2 NA NA 2 2 2 ...\n $ SexAge          : int  16 16 16 NA 12 NA NA 13 13 13 ...\n $ SexNumPartnLife : int  8 8 8 NA 10 NA NA 20 20 20 ...\n $ SexNumPartYear  : int  1 1 1 NA 1 NA NA 0 0 0 ...\n $ SameSex         : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 NA 2 NA NA 2 2 2 ...\n $ SexOrientation  : Factor w/ 3 levels \"Bisexual\",\"Heterosexual\",..: 2 2 2 NA 2 NA NA 1 1 1 ...\n $ PregnantNow     : Factor w/ 3 levels \"Yes\",\"No\",\"Unknown\": NA NA NA NA NA NA NA NA NA NA ...\n\n\n\nsummary(df) # 데이터의 column 요약통계량\n\n       ID           SurveyYr     Gender        Age          AgeDecade\n Min.   :51624   2009_10:20   female: 7   Min.   : 4.00    0-9   :4  \n 1st Qu.:51636   2011_12: 0   male  :13   1st Qu.:14.50    30-39 :4  \n Median :51651                            Median :39.50    40-49 :4  \n Mean   :51651                            Mean   :36.05    50-59 :4  \n 3rd Qu.:51666                            3rd Qu.:51.00    10-19 :2  \n Max.   :51679                            Max.   :66.00    60-69 :2  \n                                                          (Other):0  \n   AgeMonths          Race1         Race3             Education\n Min.   : 49.0   Black   : 1   Asian   : 0   8th Grade     :0  \n 1st Qu.:176.2   Hispanic: 0   Black   : 0   9 - 11th Grade:1  \n Median :475.0   Mexican : 1   Hispanic: 0   High School   :6  \n Mean   :436.2   White   :16   Mexican : 0   Some College  :3  \n 3rd Qu.:615.8   Other   : 2   White   : 0   College Grad  :4  \n Max.   :795.0                 Other   : 0   NA's          :6  \n                               NA's    :20                     \n      MaritalStatus        HHIncome  HHIncomeMid        Poverty     \n Divorced    : 1    25000-34999:5   Min.   : 17500   Min.   :1.030  \n LivePartner : 1    75000-99999:5   1st Qu.: 30000   1st Qu.:1.360  \n Married     :11    15000-19999:2   Median : 40000   Median :1.910  \n NeverMarried: 1    20000-24999:1   Mean   : 53824   Mean   :2.424  \n Separated   : 0    35000-44999:1   3rd Qu.: 87500   3rd Qu.:2.330  \n Widowed     : 0    (Other)    :3   Max.   :100000   Max.   :5.000  \n NA's        : 6    NA's       :3   NA's   :3        NA's   :3      \n   HomeRooms      HomeOwn           Work       Weight          Length   \n Min.   : 3.00   Own  :13   Looking   :2   Min.   :17.00   Min.   : NA  \n 1st Qu.: 5.75   Rent : 7   NotWorking:6   1st Qu.:56.40   1st Qu.: NA  \n Median : 6.00   Other: 0   Working   :7   Median :75.20   Median : NA  \n Mean   : 6.70              NA's      :5   Mean   :67.70   Mean   :NaN  \n 3rd Qu.: 7.50                             3rd Qu.:84.75   3rd Qu.: NA  \n Max.   :11.00                             Max.   :93.80   Max.   : NA  \n                                                           NA's   :20   \n    HeadCirc       Height           BMI           BMICatUnder20yrs\n Min.   : NA   Min.   :105.4   Min.   :15.30   UnderWeight: 0     \n 1st Qu.: NA   1st Qu.:146.5   1st Qu.:23.68   NormWeight : 0     \n Median : NA   Median :166.7   Median :26.41   OverWeight : 0     \n Mean   :NaN   Mean   :159.1   Mean   :25.68   Obese      : 0     \n 3rd Qu.: NA   3rd Qu.:169.6   3rd Qu.:27.68   NA's       :20     \n Max.   : NA   Max.   :181.9   Max.   :32.22                      \n NA's   :20                                                       \n         BMI_WHO      Pulse          BPSysAve        BPDiaAve     \n 12.0_18.5   :2   Min.   :60.00   Min.   : 86.0   Min.   : 37.00  \n 18.5_to_24.9:5   1st Qu.:66.00   1st Qu.:109.0   1st Qu.: 64.00  \n 25.0_to_29.9:9   Median :74.00   Median :113.0   Median : 72.00  \n 30.0_plus   :4   Mean   :75.26   Mean   :116.8   Mean   : 71.37  \n                  3rd Qu.:83.00   3rd Qu.:126.5   3rd Qu.: 84.00  \n                  Max.   :96.00   Max.   :152.0   Max.   :100.00  \n                  NA's   :1       NA's   :1       NA's   :1       \n     BPSys1          BPDia1          BPSys2          BPDia2     \n Min.   : 84.0   Min.   :46.00   Min.   : 84.0   Min.   :36.00  \n 1st Qu.:106.0   1st Qu.:62.00   1st Qu.:108.0   1st Qu.:67.00  \n Median :114.0   Median :70.00   Median :114.0   Median :72.00  \n Mean   :115.7   Mean   :71.89   Mean   :116.4   Mean   :72.42  \n 3rd Qu.:125.5   3rd Qu.:85.00   3rd Qu.:127.0   3rd Qu.:85.00  \n Max.   :154.0   Max.   :98.00   Max.   :150.0   Max.   :98.00  \n NA's   :2       NA's   :2       NA's   :1       NA's   :1      \n     BPSys3          BPDia3        Testosterone   DirectChol       TotChol     \n Min.   : 88.0   Min.   : 38.00   Min.   : NA   Min.   :0.670   Min.   :3.000  \n 1st Qu.:107.5   1st Qu.: 60.50   1st Qu.: NA   1st Qu.:1.140   1st Qu.:4.128  \n Median :115.0   Median : 73.00   Median : NA   Median :1.255   Median :4.925  \n Mean   :116.6   Mean   : 70.11   Mean   :NaN   Mean   :1.327   Mean   :4.948  \n 3rd Qu.:119.5   3rd Qu.: 82.00   3rd Qu.: NA   3rd Qu.:1.340   3rd Qu.:5.820  \n Max.   :154.0   Max.   :102.00   Max.   : NA   Max.   :2.120   Max.   :6.700  \n NA's   :2       NA's   :2        NA's   :20    NA's   :2       NA's   :2      \n   UrineVol1       UrineFlow1       UrineVol2     UrineFlow2  Diabetes\n Min.   :  7.0   Min.   :0.0460   Min.   : NA   Min.   : NA   No :20  \n 1st Qu.:106.0   1st Qu.:0.3465   1st Qu.: NA   1st Qu.: NA   Yes: 0  \n Median :155.0   Median :0.9390   Median : NA   Median : NA           \n Mean   :173.5   Mean   :0.8229   Mean   :NaN   Mean   :NaN           \n 3rd Qu.:238.0   3rd Qu.:1.1160   3rd Qu.: NA   3rd Qu.: NA           \n Max.   :352.0   Max.   :1.7420   Max.   : NA   Max.   : NA           \n NA's   :1       NA's   :6        NA's   :20    NA's   :20            \n  DiabetesAge      HealthGen DaysPhysHlthBad  DaysMentHlthBad LittleInterest\n Min.   : NA   Excellent:0   Min.   : 0.000   Min.   : 0.00   None   :8     \n 1st Qu.: NA   Vgood    :6   1st Qu.: 0.000   1st Qu.: 0.00   Several:2     \n Median : NA   Good     :5   Median : 0.000   Median : 3.00   Most   :3     \n Mean   :NaN   Fair     :3   Mean   : 1.714   Mean   : 6.50   NA's   :7     \n 3rd Qu.: NA   Poor     :0   3rd Qu.: 2.250   3rd Qu.:13.75                 \n Max.   : NA   NA's     :6   Max.   :10.000   Max.   :20.00                 \n NA's   :20                  NA's   :6        NA's   :6                     \n   Depressed  nPregnancies     nBabies     Age1stBaby SleepHrsNight\n None   :9   Min.   :1.00   Min.   :2    Min.   :27   Min.   :4.0  \n Several:4   1st Qu.:1.00   1st Qu.:2    1st Qu.:27   1st Qu.:4.5  \n Most   :0   Median :1.00   Median :2    Median :27   Median :6.0  \n NA's   :7   Mean   :1.25   Mean   :2    Mean   :27   Mean   :6.0  \n             3rd Qu.:1.25   3rd Qu.:2    3rd Qu.:27   3rd Qu.:7.5  \n             Max.   :2.00   Max.   :2    Max.   :27   Max.   :8.0  \n             NA's   :16     NA's   :19   NA's   :19   NA's   :5    \n SleepTrouble PhysActive PhysActiveDays       TVHrsDay      CompHrsDay\n No  :9       No  :6     Min.   :1.000   0_hrs    : 0   0_hrs    : 0  \n Yes :6       Yes :9     1st Qu.:3.000   0_to_1_hr: 0   0_to_1_hr: 0  \n NA's:5       NA's:5     Median :5.000   1_hr     : 0   1_hr     : 0  \n                         Mean   :4.444   2_hr     : 0   2_hr     : 0  \n                         3rd Qu.:5.000   3_hr     : 0   3_hr     : 0  \n                         Max.   :7.000   (Other)  : 0   (Other)  : 0  \n                         NA's   :11      NA's     :20   NA's     :20  \n TVHrsDayChild CompHrsDayChild Alcohol12PlusYr   AlcoholDay     AlcoholYear \n Min.   :0.0   Min.   :0.0     No  : 1         Min.   :1.000   Min.   :  0  \n 1st Qu.:1.0   1st Qu.:1.0     Yes :12         1st Qu.:2.000   1st Qu.:  0  \n Median :4.0   Median :1.0     NA's: 7         Median :3.000   Median : 52  \n Mean   :2.8   Mean   :2.2                     Mean   :3.222   Mean   : 68  \n 3rd Qu.:4.0   3rd Qu.:3.0                     3rd Qu.:3.000   3rd Qu.:100  \n Max.   :5.0   Max.   :6.0                     Max.   :6.000   Max.   :364  \n NA's   :15    NA's   :15                      NA's   :11      NA's   :7    \n SmokeNow  Smoke100      Smoke100n    SmokeAge     Marijuana AgeFirstMarij  \n No  : 6   No  :6   Non-Smoker:6   Min.   :13.00   No  :2    Min.   :13.00  \n Yes : 2   Yes :8   Smoker    :8   1st Qu.:16.50   Yes :9    1st Qu.:13.00  \n NA's:12   NA's:6   NA's      :6   Median :18.00   NA's:9    Median :17.00  \n                                   Mean   :19.71             Mean   :15.78  \n                                   3rd Qu.:18.00             3rd Qu.:17.00  \n                                   Max.   :38.00             Max.   :19.00  \n                                   NA's   :13                NA's   :11     \n RegularMarij  AgeRegMarij    HardDrugs SexEver       SexAge     \n No  :9       Min.   :15.00   No  :7    No  : 0   Min.   :12.00  \n Yes :2       1st Qu.:16.25   Yes :6    Yes :13   1st Qu.:13.00  \n NA's:9       Median :17.50   NA's:7    NA's: 7   Median :16.00  \n              Mean   :17.50                       Mean   :16.42  \n              3rd Qu.:18.75                       3rd Qu.:17.75  \n              Max.   :20.00                       Max.   :27.00  \n              NA's   :18                          NA's   :8      \n SexNumPartnLife  SexNumPartYear   SameSex       SexOrientation  PregnantNow\n Min.   :  1.00   Min.   :0.0000   No  :9   Bisexual    :3      Yes    : 0  \n 1st Qu.:  8.00   1st Qu.:0.5000   Yes :4   Heterosexual:8      No     : 0  \n Median :  9.00   Median :1.0000   NA's:7   Homosexual  :0      Unknown: 0  \n Mean   : 17.46   Mean   :0.7273            NA's        :9      NA's   :20  \n 3rd Qu.: 20.00   3rd Qu.:1.0000                                            \n Max.   :100.00   Max.   :1.0000                                            \n NA's   :7        NA's   :9                                                 \n\n\n\n\n행과 열의 수 확인\n다음으로 데이터의 행과 열의 개수를 확인하는 함수들입니다.\n\nnrow(df) # 행의 개수\n\n[1] 20\n\nncol(df) # 열의 개수\n\n[1] 76\n\ndim(df) # 데이터의 행과 열의 수 확인\n\n[1] 20 76\n\n\n\n\n\n\n\n\nTip\n\n\n\n기존에 선언했던 object 와 동일한 이름으로 새로운 데이터를 저장하게 되면, 기존에 저장되어 있던 값은 사라지게 됩니다.\n\ntemp <- data.frame(id=c(1,2,3),name=c('a','b','c'));\ntemp <- data.frame(id=c(10,20,30),name=c('A','B','C'))\n\n따라서 object의 이름을 설정할 때는 헷갈리지 않게끔 다른 이름으로 지어주는 것이 필요합니다."
  },
  {
    "objectID": "posts/2023-01-27-Rbase/index.html#논리-함수",
    "href": "posts/2023-01-27-Rbase/index.html#논리-함수",
    "title": "R 기초 이해",
    "section": "논리 함수",
    "text": "논리 함수\n논리 함수는 논리 연산자처럼 TRUE 나 FALSE를 반환하는 함수입니다.\n\nis.na() : NA가 있는지 확인하는 함수입니다. NA가 있는 경우 TRUE를, 그렇지 않은 경우를 FALSE로 반환합니다.\nis.na()는 모든 행에 대해 결과를 반환하므로, 보통 table() 함수처럼 응답을 요약하여 해당 변수에 몇 개의 결측치가 있는지 확인하기 위해 사용하는 것이 일반적입니다.\n\ntable(is.na(df$BMI))\n\n\nFALSE \n   20 \n\n\nis.numeric(), is.factor(), is.character(): 특정 column의 데이터 유형을 확인하는 함수입니다. 해당 유형이 맞다면 TRUE, 아니면 FALSE를 반환합니다.\n\nis.numeric(15)\n\n[1] TRUE\n\nis.factor('dd')\n\n[1] FALSE\n\nis.character('dexmedetomidine')\n\n[1] TRUE\n\n\nifelse() 함수는 data.frame에서 가장 많이 쓰이는 함수 중 하나입니다. 그렇기 때문에 매우 중요하고, 반드시 알고 넘어가야 하는 함수입니다.\nifelse()의 구조는 다음과 같습니다.\n\n# ifelse(조건, \n#        '조건이 참일 때 사용할 값', \n#        '조건이 거짓일 때 사용할 값')\n\nifelse()는 주로 새로운 column을 생성할 때, 또는 기존의 column을 변경할 때 많이 사용됩니다.\n\ndf$Obesity <- ifelse(df$BMI>=25,1,0)\ntable(df$Obesity)\n\n\n 0  1 \n 7 13 \n\n\n위의 코드에서 df$BMI>=25가 조건절에 해당됩니다. 1은 BMI가 25보다 클 때 비만이라는 의미로 넣는 값이고, 0은 BMI가 25미만인 경우에 넣어줄 값입니다.\n또한 ifelse()와 is.na()를 함께 사용하여 해당 열에 결측치가 있는 경우, 채워넣기 위한 용도로 자주 활용됩니다.\n\ndf$BMI2 <- ifelse(is.na(df$BMI), \n                 mean(df$BMI, na.rm=T),\n                 df$BMI)\nsummary(df$BMI)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  15.30   23.68   26.41   25.68   27.68   32.22 \n\nsummary(df$BMI2)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  15.30   23.68   26.41   25.68   27.68   32.22 \n\n\nBMI2는 BMI와 다르게 NA를 BMI의 평균으로 채워넣었습니다."
  },
  {
    "objectID": "posts/2023-02-01-boxplot/index.html",
    "href": "posts/2023-02-01-boxplot/index.html",
    "title": "ggplot boxplot 그리기",
    "section": "",
    "text": "library(ggplot2)\n\nggplot으로 boxplot을 그릴 때, outlier 제거하기\n\ndiamonds |> \n  ggplot(aes(x=cut, y=price))+\n  geom_boxplot(outlier.shape=NA #outlier 제거하기\n               ) \n\n\n\n\nboxplot에 errorbar 표시\n\ndiamonds |> \n  ggplot(aes(x=cut, y=price)) + \n  stat_boxplot(geom='errorbar') +\n  geom_boxplot(outlier.shape=NA #outlier 제거하기\n               )"
  },
  {
    "objectID": "posts/2023-02-02-dual-yaxis/index.html",
    "href": "posts/2023-02-02-dual-yaxis/index.html",
    "title": "ggplot에서 두 번째 y축 그리기",
    "section": "",
    "text": "dat <- data.table(\n  day= as.factor(rep(c(1,2,3,7),each=2)),\n  transfusion=rep(c('Yes','No'), 4),\n  num=c(157,845,134,681,68,559, 27,342)\n)\ndat[,transfusion:=factor(transfusion, levels=c('No','Yes'))]\ndat[,y_pos := cumsum(num)-0.5*num,by=.(day)]\n\ndat[,prop :=num/sum(num)*100,by=day]\ndat\n\n   day transfusion num y_pos      prop\n1:   1         Yes 157  78.5 15.668663\n2:   1          No 845 579.5 84.331337\n3:   2         Yes 134  67.0 16.441718\n4:   2          No 681 474.5 83.558282\n5:   3         Yes  68  34.0 10.845295\n6:   3          No 559 347.5 89.154705\n7:   7         Yes  27  13.5  7.317073\n8:   7          No 342 198.0 92.682927\n\nratio <- data.table(\n  day= as.factor(c(1,2,3,7)),\n  prob = c(15.8,32.2,43.0,50.4)\n)\nratio\n\n   day prob\n1:   1 15.8\n2:   2 32.2\n3:   3 43.0\n4:   7 50.4\n\nggplot()+\n  geom_col(data=dat,aes(x=day,y=num, fill=transfusion),\n           color='black', alpha=.5,\n           width=0.5,\n    position = position_stack()) +\n  scale_y_continuous(limits=c(0,1010),expand=c(0,0),\n                     name='Number of patients',\n                     sec.axis = sec_axis(~.*0.1,\n                                         name='Proportion of patients received a transfusion (%)'))+\n  geom_point(data=ratio, aes(x=day, y=prob/0.1, \n                             color='Pateints received transfusion'), \n             size=3)+\n  geom_text(data=dat, aes(x=day, label=num, y=y_pos))+\n  geom_line(data=ratio, aes(x=day, y=prob/0.1, group=1,\n                            color='Pateints received transfusion'))+\n  theme_classic() +\n  scale_color_manual(values=c('Pateints received transfusion'='black'))+\n  scale_fill_discrete(direction=-1,\n                      breaks=c('Yes','No'))+\n  labs(x='Follow-up (days)',\n       fill='RBC transfusion',\n       color='')+\n  theme(legend.position='top',\n        legend.direction = 'vertical',\n        legend.box = 'horizontal',\n        legend.box.spacing = unit(1,units = 'mm'),\n        axis.text.x = element_text(size=12),\n        axis.text.y = element_text(size=12)\n        )"
  },
  {
    "objectID": "posts/2023-02-02-imputation/index.html",
    "href": "posts/2023-02-02-imputation/index.html",
    "title": "Imputation의 종류",
    "section": "",
    "text": "데이터에 결측치(NA)가 있는 경우, 결측치를 다른 값으로 채워넣어주는데, 이것을 imputation이라고 부릅니다. imputation을 할 때 꼭 확인해야 하는 것이 있는데, 바로 imputation 전후에 변수의 분포(distribution)을 확인하는 것입니다.\n해당 변수의 분포를 확인하는 것은 imputation 전후에 변수의 분포를 비교하기 위함입니다. 좋은 imputation은 imputation 이전의 분포와 imputation 이후의 분포가 비슷하게 해주어야 하는데, 이는 imputation을 실시한다 해도 원래 데이터의 분포를 반영하게끔 유지해야 하기 때문입니다.\ntitanic 패키지의 데이터를 활용해 imputation 연습을 진행해보도록 하겠습니다.\n\nsummary(titanic_train$Age)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n   0.42   20.12   28.00   29.70   38.00   80.00     177 \n\n\n\ntitanic_train |> ggplot(aes(x=Age))+ \n  geom_histogram(color='black', fill='dodgerblue') + theme_classic()\n\n\n\n\ntitanic_train 데이터의 나이(Age)를 살펴보니, NA가 177건이 있고, 결측치를 제외한 나머지 데이터는 위와 같은 분포를 띄고 있습니다. 이제 imputation을 통해 결측치를 채워넣어주도록 하겠습니다.\nImputation에는 크게 두 가지가 존재합니다. 하나는 Single imputation이고 다른 하나는 Multiple imputation입니다.\n\n1. Single imputation\nSingle imputation은 특정 패키지를 사용하지 않고, 평균, 중앙값 등 해당 변수의 단순 요약값을 이용하여 결측치를 채워넣는 방법을 의미합니다.\n평균, 중앙값 등 여러 가지 단일한 값을 채워 넣어 imputation 전과 후의 Age 변수의 분포를 비교해보도록 하겠습니다.\n\ntitanic_age_impute <- data.frame(\n  original = titanic_train$Age,  impute_const = ifelse(is.na(titanic_train$Age),0, titanic_train$Age),\n  impute_mean = ifelse(is.na(titanic_train$Age), mean(titanic_train$Age,na.rm=T), titanic_train$Age),\n  impute_median = ifelse(is.na(titanic_train$Age), median(titanic_train$Age,na.rm=T), titanic_train$Age) ) \n\n\np1 <- titanic_age_impute |> ggplot(aes(x=original)) + geom_histogram(color='black', fill='dodgerblue') + labs(title='Original distribution') + theme_classic()\n\np2 <- titanic_age_impute |> ggplot(aes(x=impute_const))+ geom_histogram(color='black', fill='darksalmon') + labs(title='Constant-imputed distribution') + theme_classic()\n\np3 <- titanic_age_impute |> ggplot(aes(x=impute_mean))+ geom_histogram(color='black', fill='darkseagreen') + labs(title='Mean-imputed distribution') + theme_classic()\n\np4 <- titanic_age_impute |> ggplot(aes(x=impute_median))+ geom_histogram(color='black', fill='goldenrod') + labs(title='Median-imputed distribution') + theme_classic()\n\n\nlibrary(patchwork)\n(p1+p2)/(p3+p4)\n\n\n\n\nSingle imputation 이후, 데이터의 분포를 Original과 비교했을 때, 분포가 굉장히 달라져있는 것을 볼 수 있습니다. Single imputation 특성 상, 하나의 값으로 모든 NA를 채워넣기 때문에 기존 데이터의 분포가 왜곡되게 됩니다.\n\n\n\n2. Multiple imputation\nmultiple imputation은 single imputation과 달리, 결측치를 여러가지 변수로 채워넣는 방법입니다. NA가 있는 변수 이외의 다른 변수들까지 함께 고려하여, 채워넣을 변수를 지정하는 방법입니다.\nmultiple imputation을 도와주는 대표적인 패키지는 mice 입니다.\nmice 패키지는 데이터의 어떤 변수에 NA가 있는지 확인할 수 있습니다.\n\nrequire(mice) \nmd.pattern(titanic_train |> select(Survived, Pclass, SibSp, Parch, Age, Sex))\n\n\n\n\n    Survived Pclass SibSp Parch Sex Age    \n714        1      1     1     1   1   1   0\n177        1      1     1     1   1   0   1\n           0      0     0     0   0 177 177\n\n\n위의 그림으로 봤을 때, Age에 NA가 있는 것을 알 수 있습니다.\n하지만 mice 패키지의 가장 큰 활용분야는 NA를 채워넣는 것입니다. mice() 를 이용해 결측치를 채워넣습니다. 이 때 method 인자에 원하는 imputation 방법을 설정할 수 있습니다.\n대표적인 method는 pmm, cart, lasso.norm 등이 있습니다.\n\npmm: Predictive mean matching\ncart: classification and regression trees 이용\nlasso.norm: Lasso linear regression 이용\n\n그 외에도 다양한 imputation 방법이 있으니, 자세한 사항은 ?mice()를 참고하시기 바랍니다.\nmice()로 결측치를 채워넣은 뒤, complete()를 이용해 결측치가 채워진 데이터를 생성합니다.\n\nm_pmm <- mice(titanic_train, method='pmm', printFlag = F)\nm_cart <- mice(titanic_train, method='cart', printFlag = F) \nm_lasso <- mice(titanic_train, method = 'lasso.norm', printFlag = F)\n\ntitanic_age_impute <- data.frame(\n  original = titanic_train$Age,  \n  impute_pmm = complete(m_pmm)$Age,\n  impute_cart = complete(m_cart)$Age,  \n  impute_lasso = complete(m_lasso)$Age)\n\np1 <- titanic_age_impute |> ggplot(aes(x=original)) + geom_histogram(color='black', fill='dodgerblue') + labs(title='Original distribution') + theme_classic()\n\np2 <- titanic_age_impute |> ggplot(aes(x=impute_pmm))+ geom_histogram(color='black', fill='darksalmon') + labs(title='PMM imputed distribution') + theme_classic()\n\np3 <- titanic_age_impute |> ggplot(aes(x=impute_cart))+ geom_histogram(color='black', fill='darkseagreen') + labs(title='CART imputed distribution') + theme_classic()\n\n\np4 <- titanic_age_impute |> ggplot(aes(x=impute_lasso))+ geom_histogram(color='black', fill='goldenrod') + labs(title='Lasso imputed distribution') + theme_classic()\n\n\n(p1+p2)/(p3+p4)\n\n\n\n\nimputation을 살펴봤을 때, CART 를 이용한 imputation이 원래의 Age 분포와 가장 비슷한 것으로 나타났습니다.\nmice의 다양한 imputation method는 채워넣고자 하는 변수의 유형 (continuous or categorical)에따라 다양한 방법이 존재합니다. 적절한 imputation 방법들을 통해 결측치를 채워넣어보시기 바랍니다.\n\n\n레퍼런스\n\nhttps://amices.org/mice/"
  },
  {
    "objectID": "posts/2023-02-09-EDA/index.html",
    "href": "posts/2023-02-09-EDA/index.html",
    "title": "DataExplorer을 활용한 EDA",
    "section": "",
    "text": "1. DataExplorer\n\nrequire(DataExplorer)\nrequire(dataxray)\ncreate_report(titanic_train, \n              config = configure_report(add_plot_qq=F,\n                                        add_plot_prcomp = F,\n                                        global_ggtheme = theme_classic(),\n                                        ))\n\nplot_histogram(titanic_train)\ntitanic_train$Survived <- as.factor(titanic_train$Survived)\nplot_boxplot(titanic_train, by = 'Survived',\n             ggtheme = theme_classic())\nstr(titanic_train)\ndummify(titanic_train)\n\n\nExpReport(titanic_train,\n          Target = 'Survived',\n          op_file = 'temp.html')\n\n\n\n2. dataxary\n\ntitanic_train |> \n  dataxray::make_xray() |> \n  view_xray()"
  },
  {
    "objectID": "posts/2023-02-13-dplyr_pivot/index.html",
    "href": "posts/2023-02-13-dplyr_pivot/index.html",
    "title": "tidyr로 Pivoting하기",
    "section": "",
    "text": "이번 시간에는 데이터의 형태를 변환시키는 pivoting을 배워보도록 하겠습니다.\n오늘 사용할 패키지는 다음과 같습니다.\n\nlibrary(tidyr)\nlibrary(dplyr)\n\n\n\n\n\n\n\nNote\n\n\n\ntidyr의 ‘tidy’는 ’정돈하다’ 라는 뜻입니다. 데이터를 정돈하기 위해 사용하는 패키지라고 이해하시면 되겠습니다.\n\n\n\n1. Longer: 데이터 길게 늘이기\n\n1) 열 이름에 문자 포함된 경우\npivot_longer() 는 데이터 내의 행의 수를 늘리고, 열의 개수를 줄임으로서 데이터를 길게 만듭니다. 즉 여러 개의 열을 줄여 행으로 바꾸는 과정에서 자연스럽게 데이터의 형태가 길어지는 것을 의미합니다.\nrelig_income 은 tidyr 패키지에 포함되어 있는 데이터셋으로, 사람들의 종교와 연소득 데이터가 들어있습니다.\npivot_longer() 간단한 예시를 살펴보겠습니다.\n\nrelig_income |> \n  pivot_longer(!religion,\n               names_to=\"income\",\n               values_to = \"values\")\n\n# A tibble: 180 × 3\n   religion income             values\n   <chr>    <chr>               <dbl>\n 1 Agnostic <$10k                  27\n 2 Agnostic $10-20k                34\n 3 Agnostic $20-30k                60\n 4 Agnostic $30-40k                81\n 5 Agnostic $40-50k                76\n 6 Agnostic $50-75k               137\n 7 Agnostic $75-100k              122\n 8 Agnostic $100-150k             109\n 9 Agnostic >150k                  84\n10 Agnostic Don't know/refused     96\n# … with 170 more rows\n\n\npivot_longer()에서 사용된 인자는 다음과 같습니다.\n\nrelig_income: 형태를 변환시킬 데이터\ncols: 데이터 내에서 길게 변환시킬 열들\nnames_to: 열들이 길게 변환된 뒤, 새로운 열의 이름\nvalues_to: 길게 변환된 열들의 데이터가 갖게되는 새로운 열 이름\n\n정리하자면 cols에서는 기존 데이터셋에서 열들의 이름이 들어가는데, 이 열들은 names_to에서 정해준 income이라고 하는 하나의 열로 변환되고, cols에서 선택된 열들의 값들은 values_to에서 정해준 values라고 하는 하나의 열로 변환되는 것입니다.\n\n\n2) 열 이름에 숫자가 포함된 경우\n다음으로 billboard 데이터로 pivot_longer를 진행해보겠습니다. billboard 데이터에는 2000년도의 빌보드 순위 주(week) 단위로 들어있습니다.\n이 데이터를 길게 바꾸면 다음과 같습니다.\n\nbillboard |> \n  pivot_longer(\n    cols=starts_with('wk'),\n    names_to='week',\n    values_to='rank',\n    values_drop_na = T\n  )\n\n# A tibble: 5,307 × 5\n   artist  track                   date.entered week   rank\n   <chr>   <chr>                   <date>       <chr> <dbl>\n 1 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk1      87\n 2 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk2      82\n 3 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk3      72\n 4 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk4      77\n 5 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk5      87\n 6 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk6      94\n 7 2 Pac   Baby Don't Cry (Keep... 2000-02-26   wk7      99\n 8 2Ge+her The Hardest Part Of ... 2000-09-02   wk1      91\n 9 2Ge+her The Hardest Part Of ... 2000-09-02   wk2      87\n10 2Ge+her The Hardest Part Of ... 2000-09-02   wk3      92\n# … with 5,297 more rows\n\n\ncols에서 열들을 선택할 때, 규칙이 있는 열들은 dplyr의 select()에서 사용하던 starts_with() 등을 사용할 수 있습니다.\n또한 데이터를 길게 변환할 때, values_drop_na를 통해 NA인 데이터들은 제외하였습니다.\n데이터를 변환하니 wk~ 열들이 전부 week라는 하나의 열로 변환되었습니다. 그런데 week 열의 데이터는 전부 wk가 들어가있습니다. 몇 주차인지 표현하기 위해서는 숫자만 있어도 될 것 같아 보입니다.\n이럴 때, names_prefix 인자를 통해 wk 접두사(prefix)를 없애주도록 하겠습니다.\n이 때, names_prefix가 추가되어도, week 의 데이터 유형은 그대로 character입니다. week를 숫자형태로 변환해주려면 names_transform을 이용하면 됩니다.\n\nbillboard |> \n  pivot_longer(\n    cols=starts_with('wk'),\n    names_to='week',\n    names_prefix = 'wk',\n    names_transform = as.integer,\n    values_to='rank',\n    values_drop_na = T\n  )\n\n# A tibble: 5,307 × 5\n   artist  track                   date.entered  week  rank\n   <chr>   <chr>                   <date>       <int> <dbl>\n 1 2 Pac   Baby Don't Cry (Keep... 2000-02-26       1    87\n 2 2 Pac   Baby Don't Cry (Keep... 2000-02-26       2    82\n 3 2 Pac   Baby Don't Cry (Keep... 2000-02-26       3    72\n 4 2 Pac   Baby Don't Cry (Keep... 2000-02-26       4    77\n 5 2 Pac   Baby Don't Cry (Keep... 2000-02-26       5    87\n 6 2 Pac   Baby Don't Cry (Keep... 2000-02-26       6    94\n 7 2 Pac   Baby Don't Cry (Keep... 2000-02-26       7    99\n 8 2Ge+her The Hardest Part Of ... 2000-09-02       1    91\n 9 2Ge+her The Hardest Part Of ... 2000-09-02       2    87\n10 2Ge+her The Hardest Part Of ... 2000-09-02       3    92\n# … with 5,297 more rows\n\n\n\n\n3) 열들을 세부적으로 나누기\n다음으로는 좀더 까다로운 데이터를 길게 변환해보도록 하겠습니다. tidyr 의 who 데이터에는 new_sp_m014 부터 newrel_f65 까지, 네 종류의 값들이 열의 이름으로 들어가 있습니다.\n\nnew_ / new: 새로운 경우들을 값들을 나타냅니다.\nsp / rel / ep : 진단명\nm / f: 성별\n014 / 1524 / 1524 / 3544 / 4554 / 65 : 나이 범위\n\n이 값들은 규칙을 띈 채로 열 이름으로 되어있기 때문에, name_pattern을 이용해 열 이름에서 추출할 수 있습니다.\n\nwho |> \n  pivot_longer(\n    cols=new_sp_m014:newrel_f65,\n    names_to= c('diagnosis','gender','age'),\n    names_pattern = \"new_?(.*)_(.)(.*)\", # 정규표현식\n    values_to=\"count\"\n  )\n\n# A tibble: 405,440 × 8\n   country     iso2  iso3   year diagnosis gender age   count\n   <chr>       <chr> <chr> <int> <chr>     <chr>  <chr> <int>\n 1 Afghanistan AF    AFG    1980 sp        m      014      NA\n 2 Afghanistan AF    AFG    1980 sp        m      1524     NA\n 3 Afghanistan AF    AFG    1980 sp        m      2534     NA\n 4 Afghanistan AF    AFG    1980 sp        m      3544     NA\n 5 Afghanistan AF    AFG    1980 sp        m      4554     NA\n 6 Afghanistan AF    AFG    1980 sp        m      5564     NA\n 7 Afghanistan AF    AFG    1980 sp        m      65       NA\n 8 Afghanistan AF    AFG    1980 sp        f      014      NA\n 9 Afghanistan AF    AFG    1980 sp        f      1524     NA\n10 Afghanistan AF    AFG    1980 sp        f      2534     NA\n# … with 405,430 more rows\n\n\n\nhousehold <- tibble(\n  family = 1:5,\n  dob_child1 = c('1998-11-26','1996-06-22','2002-07-11','2004-10-10','2000-12-05'),\n  dob_child2 = c('2000-01-29',NA,'2004-04-05','2009-08-27','2005-02-28'),\n  name_child1 = c('Susan','Mark','Sam','Craig','Parker'),\n  name_child2 = c('Jose',NA,'Seth','Khai','Gracie')\n)\n\nhousehold |> \n  pivot_longer(\n    cols = !family,\n    names_to=c('.value',\"child\"),\n    names_sep=\"_\",\n    values_drop_na = T,\n  )\n\n# A tibble: 9 × 4\n  family child  dob        name  \n   <int> <chr>  <chr>      <chr> \n1      1 child1 1998-11-26 Susan \n2      1 child2 2000-01-29 Jose  \n3      2 child1 1996-06-22 Mark  \n4      3 child1 2002-07-11 Sam   \n5      3 child2 2004-04-05 Seth  \n6      4 child1 2004-10-10 Craig \n7      4 child2 2009-08-27 Khai  \n8      5 child1 2000-12-05 Parker\n9      5 child2 2005-02-28 Gracie\n\n\n\n\n\n2. Wider: 데이터 넓게 펼치기\n\n1) Capture-recapture\n\nfish_encounters |> \n  pivot_wider(\n    names_from = station,\n    values_from = seen\n  )\n\n# A tibble: 19 × 12\n   fish  Release I80_1 Lisbon  Rstr Base_TD   BCE   BCW  BCE2  BCW2   MAE   MAW\n   <fct>   <int> <int>  <int> <int>   <int> <int> <int> <int> <int> <int> <int>\n 1 4842        1     1      1     1       1     1     1     1     1     1     1\n 2 4843        1     1      1     1       1     1     1     1     1     1     1\n 3 4844        1     1      1     1       1     1     1     1     1     1     1\n 4 4845        1     1      1     1       1    NA    NA    NA    NA    NA    NA\n 5 4847        1     1      1    NA      NA    NA    NA    NA    NA    NA    NA\n 6 4848        1     1      1     1      NA    NA    NA    NA    NA    NA    NA\n 7 4849        1     1     NA    NA      NA    NA    NA    NA    NA    NA    NA\n 8 4850        1     1     NA     1       1     1     1    NA    NA    NA    NA\n 9 4851        1     1     NA    NA      NA    NA    NA    NA    NA    NA    NA\n10 4854        1     1     NA    NA      NA    NA    NA    NA    NA    NA    NA\n11 4855        1     1      1     1       1    NA    NA    NA    NA    NA    NA\n12 4857        1     1      1     1       1     1     1     1     1    NA    NA\n13 4858        1     1      1     1       1     1     1     1     1     1     1\n14 4859        1     1      1     1       1    NA    NA    NA    NA    NA    NA\n15 4861        1     1      1     1       1     1     1     1     1     1     1\n16 4862        1     1      1     1       1     1     1     1     1    NA    NA\n17 4863        1     1     NA    NA      NA    NA    NA    NA    NA    NA    NA\n18 4864        1     1     NA    NA      NA    NA    NA    NA    NA    NA    NA\n19 4865        1     1      1    NA      NA    NA    NA    NA    NA    NA    NA\n\n\n이 데이터에서 결측 값 NA 는 0과 같습니다. 다시 말해, 물고기가 발견된 적이 없다는 것이죠. 그렇기 때문에 NA를 0으로 채워넣을 수 있습니다.\n\nfish_encounters |> \n  pivot_wider(\n    names_from = station,\n    values_from = seen,\n    values_fill = 0\n  )\n\n# A tibble: 19 × 12\n   fish  Release I80_1 Lisbon  Rstr Base_TD   BCE   BCW  BCE2  BCW2   MAE   MAW\n   <fct>   <int> <int>  <int> <int>   <int> <int> <int> <int> <int> <int> <int>\n 1 4842        1     1      1     1       1     1     1     1     1     1     1\n 2 4843        1     1      1     1       1     1     1     1     1     1     1\n 3 4844        1     1      1     1       1     1     1     1     1     1     1\n 4 4845        1     1      1     1       1     0     0     0     0     0     0\n 5 4847        1     1      1     0       0     0     0     0     0     0     0\n 6 4848        1     1      1     1       0     0     0     0     0     0     0\n 7 4849        1     1      0     0       0     0     0     0     0     0     0\n 8 4850        1     1      0     1       1     1     1     0     0     0     0\n 9 4851        1     1      0     0       0     0     0     0     0     0     0\n10 4854        1     1      0     0       0     0     0     0     0     0     0\n11 4855        1     1      1     1       1     0     0     0     0     0     0\n12 4857        1     1      1     1       1     1     1     1     1     0     0\n13 4858        1     1      1     1       1     1     1     1     1     1     1\n14 4859        1     1      1     1       1     0     0     0     0     0     0\n15 4861        1     1      1     1       1     1     1     1     1     1     1\n16 4862        1     1      1     1       1     1     1     1     1     0     0\n17 4863        1     1      0     0       0     0     0     0     0     0     0\n18 4864        1     1      0     0       0     0     0     0     0     0     0\n19 4865        1     1      1     0       0     0     0     0     0     0     0\n\n\n\n\n2) Aggregation\n\nwarpbreaks |> \n  pivot_wider(\n    names_from = c(wool),\n    values_from = breaks,\n    values_fn = mean\n  )\n\n# A tibble: 3 × 3\n  tension     A     B\n  <fct>   <dbl> <dbl>\n1 L        44.6  28.2\n2 M        24    28.8\n3 H        24.6  18.8"
  },
  {
    "objectID": "posts/data.table_1.14.9_update/index.html",
    "href": "posts/data.table_1.14.9_update/index.html",
    "title": "data.table 1.14.9 업데이트",
    "section": "",
    "text": "data.table은 R에서 데이터를 빠르고 메모리 효율적으로 분석하도록 도와주는 패키지입니다. 현재 CRAN에 공개되어 있는 data.table 의 버전은 1.14.8 버전입니다 (2023-02-21 기준).\ngithub에서 개발 중인 (거의 개발이 마무리되어가고 있습니다) data.table 1.14.9 버전은 꽤 많은 내용들이 업데이트되었는데요. 업데이트 사항들을 살펴보니 꽤 흥미로운 요소들이 많았습니다.\n이번 글에서는 data.table 1.14.9 버전에서 유용하게 사용할 수 있는 추가 기능들을 소개해드리고자 합니다."
  },
  {
    "objectID": "posts/data.table_1.14.9_update/index.html#패키지-업데이트",
    "href": "posts/data.table_1.14.9_update/index.html#패키지-업데이트",
    "title": "data.table 1.14.9 업데이트",
    "section": "패키지 업데이트",
    "text": "패키지 업데이트\n현재 개발 중인 1.14.9 버전을 사용하기 위해선 CRAN이 아니라, github에서 개발 중인 패키지를 다운로드 받아야 합니다.\n\nremotes::install_github('Rdatatable/data.table')\n\n── R CMD build ─────────────────────────────────────────────────────────────────\n* checking for file 'C:\\Users\\user\\AppData\\Local\\Temp\\RtmpUjn2xT\\remotesd8b01f592542\\Rdatatable-data.table-8803918/DESCRIPTION' ... OK\n* preparing 'data.table':\n* checking DESCRIPTION meta-information ... OK\n* cleaning src\n* checking for LF line-endings in source and make files and shell scripts\n* checking for empty or unneeded directories\n* building 'data.table_1.14.9.tar.gz'\nWarning: file 'data.table/cleanup' did not have execute permissions: corrected\nWarning: file 'data.table/configure' did not have execute permissions: corrected\n\n\nlibrary(data.table)\n\n아래와 같은 메시지가 뜨면 정상적으로 설치된 것 입니다.\ndata.table 1.14.9 IN DEVELOPMENT built 2023-02-21 01:19:16 UTC; user using 12 threads (see ?getDTthreads).  Latest news: r-datatable.com"
  },
  {
    "objectID": "posts/data.table_1.14.9_update/index.html#주요-업데이트-내용",
    "href": "posts/data.table_1.14.9_update/index.html#주요-업데이트-내용",
    "title": "data.table 1.14.9 업데이트",
    "section": "주요 업데이트 내용",
    "text": "주요 업데이트 내용\n새로운 버전에서 추가됐거나 변경된 점들 중, (주관적인) 유용한 부분에 대해 살펴보겠습니다!\n\n데이터 유형 출력\n이전까지 data.table 유형의 데이터를 출력했을 때, 각 열의 데이터 유형을 알 수 없었습니다. 그래서 str() 등을 통해 확인해야만 했었죠.\n이제 data.table도 tibble처럼 열별로 데이터 유형을 쉽게 확인할 수 있습니다.\n\n\n\n\niris |> as.data.table() |> head()\n\n# 이전\n#    Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n# 1:          5.1         3.5          1.4         0.2  setosa\n# 2:          4.9         3.0          1.4         0.2  setosa\n# 3:          4.7         3.2          1.3         0.2  setosa\n# 4:          4.6         3.1          1.5         0.2  setosa\n# 5:          5.0         3.6          1.4         0.2  setosa\n# 6:          5.4         3.9          1.7         0.4  setosa\n\n# 1.14.9\n#    Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n#           <num>       <num>        <num>       <num>  <fctr>\n# 1:          5.1         3.5          1.4         0.2  setosa\n# 2:          4.9         3.0          1.4         0.2  setosa\n# 3:          4.7         3.2          1.3         0.2  setosa\n# 4:          4.6         3.1          1.5         0.2  setosa\n# 5:          5.0         3.6          1.4         0.2  setosa\n# 6:          5.4         3.9          1.7         0.4  setosa\n\n\n\n\n\n\n\nTip\n\n\n\n이전 버전에서도 data.table 의 열 유형을 확인하는 것이 가능합니다. options()를 통해 아래와 같이 설정해주시면 됩니다.\n\noptions(datatable.print.class=TRUE)\n\n\n\n\n\nDT()\nDT(i, j, by, …) 라는 형태의 함수가 추가되었습니다. data.table의 함수적 형태라고 볼 수 있겠습니다.\n기존에는 [i, j, by,...] 처럼 [] 을 이용했는데, 이를 위해서는 데이터가 항상 data.table 이어야 했습니다. 하지만 DT() 를 이용한다면 data.table이 아니어도 data.table 문법을 활용할 수 있게 되었습니다.\n\nmtcars |> DT(hp>100, .(mean_mpg = mean(mpg)), by=.(cyl))\n\n\n\n\n\ncyl\nmean_mpg\n\n\n\n\n6\n19.74286\n\n\n8\n15.10000\n\n\n4\n25.90000\n\n\n\n\n\n\n\n\nenv\n프로그래밍 인터페이스가 새롭게 추가되었습니다. 파라미터들을 통해 계산에 사용할 column, 새롭게 정의할 column의 이름은 물론 함수의 이름까지 활용할 수 있게 되었습니다. 이 기능은 env 인자를 통해 활용 가능합니다.\n\ndt <- data.table(x = 1:5, y = 11:15, z = c('A','A','B','C','B'))\n\ndt[,.(out_colname = fun(in_colname, fun_arg1 = fun_arg1_val)), by=group,\n   env = list(\n     out_colname = \"mean_x\",\n     fun = \"mean\",\n     in_colname = \"x\",\n     fun_arg1 = \"na.rm\",\n     fun_arg1_val = T,\n     group = \"z\"\n   )]\n\n\n\n\n\nz\nmean_x\n\n\n\n\nA\n1.5\n\n\nB\n4.0\n\n\nC\n4.0\n\n\n\n\n\n\nenv 를 활용한 프로그래밍 인터페이스는 주로 사용자 정의 함수를 활용할 때 사용할 것 같습니다. 사용자 정의 함수에서 파라미터들을 문자열로 넣어주기 때문에, env는 굉장히 편리하게 사용할 수 있을 것으로 보입니다.\n\n\n%notin%\ndata.table의 infix 연산자 (%%가 들어간 연산자) 중 새로운 녀석이 추가되었습니다. 바로 %notin%입니다. 기존에 있던 %in% 연산자는 A %in% B 형태로 쓰여, 해당 변수(열)에 특정 값이 있는지 확인할 수 있었습니다. %in% 의 부정형을 사용하기 위해서는 변수 앞에 !을 붙여줘야 했었죠. 이제는 %notin%을 통해 더 직관적으로 그 의미를 이해할 수 있게 되었습니다.\n\n# 기존 방식\nas.data.table(iris)[!Species %in% 'setosa',.N, by=.(Species)]\n\n\n\n\n\nSpecies\nN\n\n\n\n\nversicolor\n50\n\n\nvirginica\n50\n\n\n\n\n\n# 1.14.9 버전\nas.data.table(iris)[Species %notin% 'setosa',.N, by=.(Species)]\n\n\n\n\n\nSpecies\nN\n\n\n\n\nversicolor\n50\n\n\nvirginica\n50\n\n\n\n\n\n\n\n\nlet()\ncolumn을 reference에서 변경하기 위해 사용하던 := 의 별명함수(alias)가 생겼습니다. 바로 let() 입니다.\n\nDT = data.table(A = 1:5)\n\n# 기존 방식\nDT[, B := 6:10]\n\n# 새로운 방식\nDT[, let(C = LETTERS[1:5],\n         D = letters[1:5])]\nDT\n\n\n\n\n\nA\nB\nC\nD\n\n\n\n\n1\n6\nA\na\n\n\n2\n7\nB\nb\n\n\n3\n8\nC\nc\n\n\n4\n9\nD\nd\n\n\n5\n10\nE\ne\n\n\n\n\n\n\nlet()의 등장으로 =와 := 을 헷갈려 하시는 분들의 어려움을 해소하는 데 도움이 될 것 같습니다.\n\n\nfifelse()\nfifelse()를 사용할 때 NA와 다른 유형의 데이터가 생성될 수 있게끔 변경되었습니다. 기존에는 fifelse()에서 true, false 인자에 들어가는 값에 NA가 들어가면 에러 메시지가 떴습니다. 하지만 1.14.9 버전부터는 해당 에러메시지가 뜨지 않고, 정상적으로 잘 출력됩니다.\n\nas.data.table(airquality)[,fifelse(Solar.R < 300, NA, Solar.R)]\n\n# 이전 버전\n# Error in fifelse(Solar.R < 300, NA, Solar.R) : \n#   'yes' is of type logical but 'no' is of type integer. Please make sure that both arguments have the same type.\n\n# 1.14.9 버전\n# [1]  NA  NA  NA 313  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA 334 307  NA 322  NA\n#  [21]  NA 320  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA\n#  [41] 323  NA  NA  NA 332 322  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA\n#  [61]  NA  NA  NA  NA  NA  NA 314  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA\n#  [81]  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA\n# [101]  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA\n# [121]  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA\n# [141]  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA  NA\n\n\n\n.I의 사용\n.I를 by에 사용함으로써, 행 단위(rowwise) 계산이 가능해졌습니다.\n예전에 여러 열들을 행별로 계산하기 위해서는 rowSums()나 rowMeans() 등을 활용했었는데 이제 더 간단하게 계산할 수 있게 되었습니다.\n\nlibrary(ggplot2)\n\n# 이전 활용\na=as.data.table(diamonds)[,.(sum = rowSums(.SD)),.SDcols=depth:z]\n\n# 1.14.9 버전\nb=as.data.table(diamonds)[,.(sum = sum(.SD)),.SDcols=depth:z, by=.I]\n\nmicrobenchmark()를 이용해 두 코드의 성능을 확인해보니, rowSums()를 활용하는 게 더 빠른 것으로 나타났습니다.\n\nmicrobenchmark::microbenchmark(\n  list =  list(\n    previous = a,\n    post = b\n  ),\n  times = 10\n)\n\n\n\n\n\nexpr\ntime\n\n\n\n\nprevious\n0\n\n\nprevious\n0\n\n\nprevious\n0\n\n\nprevious\n0\n\n\npost\n300\n\n\npost\n0\n\n\npost\n0\n\n\npost\n0\n\n\npost\n0\n\n\nprevious\n0\n\n\npost\n0\n\n\npost\n0\n\n\npost\n0\n\n\nprevious\n0\n\n\nprevious\n0\n\n\nprevious\n0\n\n\nprevious\n0\n\n\npost\n0\n\n\nprevious\n0\n\n\npost\n0\n\n\n\n\n\n\n\n지금까지 data.table 1.14.9 버전의 주요한 내용들에 대해 살펴보았습니다. 더 많은 내용은 아래 레퍼런스를 통해 살펴보시기 바랍니다!"
  },
  {
    "objectID": "posts/data.table_1.14.9_update/index.html#레퍼런스",
    "href": "posts/data.table_1.14.9_update/index.html#레퍼런스",
    "title": "data.table 1.14.9 업데이트",
    "section": "레퍼런스",
    "text": "레퍼런스\n\nr-datatable.com1\ndata.table changelog2"
  },
  {
    "objectID": "posts/data.table_advanced/index.html",
    "href": "posts/data.table_advanced/index.html",
    "title": "data.table 심화",
    "section": "",
    "text": "data.table 기초 포스트 에서는 대용량의 데이터를 빠르게 처리할 수 있는 data.table 패키지에 대해 배워봤습니다.\n이번 시간에는 data.table 패키지를 조금 더 효율적으로 사용할 수 있는 방법, 그리고 data.table을 이용하여 데이터를 원하는대로 붙이고 변형하는 방법에 대해 알아보겠습니다."
  },
  {
    "objectID": "posts/data.table_advanced/index.html#특수-기호",
    "href": "posts/data.table_advanced/index.html#특수-기호",
    "title": "data.table 심화",
    "section": "1. 특수 기호",
    "text": "1. 특수 기호\ndata.table 패키지에는 유용하게 사용할 수 있는 특수 기호들이 있습니다. 이 특수한 기호들은 다른 패키지에서는 사용할 수 없는 것들로, data.table 형태의 데이터를 다룰 때만 사용이 가능합니다.\n이번에 배울 data.table의 특수 기호는 크게 3가지입니다. 바로 .SD, .N, .I 입니다. 이 특수기호들은 모두 data.table의 j(column 부분)에서 쓰입니다.\n\n1) lapply + .SD\n.SD는 Subset Data의 약자입니다. 말그대로 데이터의 일부분을 선택하기 위한 특수기호(special symbols)입니다.\n.SD와 함께 사용되는 것이 있습니다. 바로 .SDcols 입니다. .SDcols를 통해 데이터 중 원하는 column을 선택할 수 있습니다.\n만약 .SDcols 없이 .SD만 사용한다면 데이터의 모든 column을 선택한다는 뜻입니다.\n\nrequire(data.table)\nrequire(NHANES)\ndt <- as.data.table(NHANES)\ndt[,head(.SD)]\n\n      ID SurveyYr Gender   Age AgeDecade AgeMonths  Race1  Race3    Education\n   <int>   <fctr> <fctr> <int>    <fctr>     <int> <fctr> <fctr>       <fctr>\n1: 51624  2009_10   male    34     30-39       409  White   <NA>  High School\n2: 51624  2009_10   male    34     30-39       409  White   <NA>  High School\n3: 51624  2009_10   male    34     30-39       409  White   <NA>  High School\n4: 51625  2009_10   male     4       0-9        49  Other   <NA>         <NA>\n5: 51630  2009_10 female    49     40-49       596  White   <NA> Some College\n6: 51638  2009_10   male     9       0-9       115  White   <NA>         <NA>\n   MaritalStatus    HHIncome HHIncomeMid Poverty HomeRooms HomeOwn       Work\n          <fctr>      <fctr>       <int>   <num>     <int>  <fctr>     <fctr>\n1:       Married 25000-34999       30000    1.36         6     Own NotWorking\n2:       Married 25000-34999       30000    1.36         6     Own NotWorking\n3:       Married 25000-34999       30000    1.36         6     Own NotWorking\n4:          <NA> 20000-24999       22500    1.07         9     Own       <NA>\n5:   LivePartner 35000-44999       40000    1.91         5    Rent NotWorking\n6:          <NA> 75000-99999       87500    1.84         6    Rent       <NA>\n   Weight Length HeadCirc Height   BMI BMICatUnder20yrs   BMI_WHO Pulse\n    <num>  <num>    <num>  <num> <num>           <fctr>    <fctr> <int>\n1:   87.4     NA       NA  164.7 32.22             <NA> 30.0_plus    70\n2:   87.4     NA       NA  164.7 32.22             <NA> 30.0_plus    70\n3:   87.4     NA       NA  164.7 32.22             <NA> 30.0_plus    70\n4:   17.0     NA       NA  105.4 15.30             <NA> 12.0_18.5    NA\n5:   86.7     NA       NA  168.4 30.57             <NA> 30.0_plus    86\n6:   29.8     NA       NA  133.1 16.82             <NA> 12.0_18.5    82\n   BPSysAve BPDiaAve BPSys1 BPDia1 BPSys2 BPDia2 BPSys3 BPDia3 Testosterone\n      <int>    <int>  <int>  <int>  <int>  <int>  <int>  <int>        <num>\n1:      113       85    114     88    114     88    112     82           NA\n2:      113       85    114     88    114     88    112     82           NA\n3:      113       85    114     88    114     88    112     82           NA\n4:       NA       NA     NA     NA     NA     NA     NA     NA           NA\n5:      112       75    118     82    108     74    116     76           NA\n6:       86       47     84     50     84     50     88     44           NA\n   DirectChol TotChol UrineVol1 UrineFlow1 UrineVol2 UrineFlow2 Diabetes\n        <num>   <num>     <int>      <num>     <int>      <num>   <fctr>\n1:       1.29    3.49       352         NA        NA         NA       No\n2:       1.29    3.49       352         NA        NA         NA       No\n3:       1.29    3.49       352         NA        NA         NA       No\n4:         NA      NA        NA         NA        NA         NA       No\n5:       1.16    6.70        77      0.094        NA         NA       No\n6:       1.34    4.86       123      1.538        NA         NA       No\n   DiabetesAge HealthGen DaysPhysHlthBad DaysMentHlthBad LittleInterest\n         <int>    <fctr>           <int>           <int>         <fctr>\n1:          NA      Good               0              15           Most\n2:          NA      Good               0              15           Most\n3:          NA      Good               0              15           Most\n4:          NA      <NA>              NA              NA           <NA>\n5:          NA      Good               0              10        Several\n6:          NA      <NA>              NA              NA           <NA>\n   Depressed nPregnancies nBabies Age1stBaby SleepHrsNight SleepTrouble\n      <fctr>        <int>   <int>      <int>         <int>       <fctr>\n1:   Several           NA      NA         NA             4          Yes\n2:   Several           NA      NA         NA             4          Yes\n3:   Several           NA      NA         NA             4          Yes\n4:      <NA>           NA      NA         NA            NA         <NA>\n5:   Several            2       2         27             8          Yes\n6:      <NA>           NA      NA         NA            NA         <NA>\n   PhysActive PhysActiveDays TVHrsDay CompHrsDay TVHrsDayChild CompHrsDayChild\n       <fctr>          <int>   <fctr>     <fctr>         <int>           <int>\n1:         No             NA     <NA>       <NA>            NA              NA\n2:         No             NA     <NA>       <NA>            NA              NA\n3:         No             NA     <NA>       <NA>            NA              NA\n4:       <NA>             NA     <NA>       <NA>             4               1\n5:         No             NA     <NA>       <NA>            NA              NA\n6:       <NA>             NA     <NA>       <NA>             5               0\n   Alcohol12PlusYr AlcoholDay AlcoholYear SmokeNow Smoke100 Smoke100n SmokeAge\n            <fctr>      <int>       <int>   <fctr>   <fctr>    <fctr>    <int>\n1:             Yes         NA           0       No      Yes    Smoker       18\n2:             Yes         NA           0       No      Yes    Smoker       18\n3:             Yes         NA           0       No      Yes    Smoker       18\n4:            <NA>         NA          NA     <NA>     <NA>      <NA>       NA\n5:             Yes          2          20      Yes      Yes    Smoker       38\n6:            <NA>         NA          NA     <NA>     <NA>      <NA>       NA\n   Marijuana AgeFirstMarij RegularMarij AgeRegMarij HardDrugs SexEver SexAge\n      <fctr>         <int>       <fctr>       <int>    <fctr>  <fctr>  <int>\n1:       Yes            17           No          NA       Yes     Yes     16\n2:       Yes            17           No          NA       Yes     Yes     16\n3:       Yes            17           No          NA       Yes     Yes     16\n4:      <NA>            NA         <NA>          NA      <NA>    <NA>     NA\n5:       Yes            18           No          NA       Yes     Yes     12\n6:      <NA>            NA         <NA>          NA      <NA>    <NA>     NA\n   SexNumPartnLife SexNumPartYear SameSex SexOrientation PregnantNow\n             <int>          <int>  <fctr>         <fctr>      <fctr>\n1:               8              1      No   Heterosexual        <NA>\n2:               8              1      No   Heterosexual        <NA>\n3:               8              1      No   Heterosexual        <NA>\n4:              NA             NA    <NA>           <NA>        <NA>\n5:              10              1     Yes   Heterosexual        <NA>\n6:              NA             NA    <NA>           <NA>        <NA>\n\ndt[,str(.SD)]\n\nClasses 'data.table' and 'data.frame':  10000 obs. of  76 variables:\n $ ID              : int  51624 51624 51624 51625 51630 51638 51646 51647 51647 51647 ...\n $ SurveyYr        : Factor w/ 2 levels \"2009_10\",\"2011_12\": 1 1 1 1 1 1 1 1 1 1 ...\n $ Gender          : Factor w/ 2 levels \"female\",\"male\": 2 2 2 2 1 2 2 1 1 1 ...\n $ Age             : int  34 34 34 4 49 9 8 45 45 45 ...\n $ AgeDecade       : Factor w/ 8 levels \" 0-9\",\" 10-19\",..: 4 4 4 1 5 1 1 5 5 5 ...\n $ AgeMonths       : int  409 409 409 49 596 115 101 541 541 541 ...\n $ Race1           : Factor w/ 5 levels \"Black\",\"Hispanic\",..: 4 4 4 5 4 4 4 4 4 4 ...\n $ Race3           : Factor w/ 6 levels \"Asian\",\"Black\",..: NA NA NA NA NA NA NA NA NA NA ...\n $ Education       : Factor w/ 5 levels \"8th Grade\",\"9 - 11th Grade\",..: 3 3 3 NA 4 NA NA 5 5 5 ...\n $ MaritalStatus   : Factor w/ 6 levels \"Divorced\",\"LivePartner\",..: 3 3 3 NA 2 NA NA 3 3 3 ...\n $ HHIncome        : Factor w/ 12 levels \" 0-4999\",\" 5000-9999\",..: 6 6 6 5 7 11 9 11 11 11 ...\n $ HHIncomeMid     : int  30000 30000 30000 22500 40000 87500 60000 87500 87500 87500 ...\n $ Poverty         : num  1.36 1.36 1.36 1.07 1.91 1.84 2.33 5 5 5 ...\n $ HomeRooms       : int  6 6 6 9 5 6 7 6 6 6 ...\n $ HomeOwn         : Factor w/ 3 levels \"Own\",\"Rent\",\"Other\": 1 1 1 1 2 2 1 1 1 1 ...\n $ Work            : Factor w/ 3 levels \"Looking\",\"NotWorking\",..: 2 2 2 NA 2 NA NA 3 3 3 ...\n $ Weight          : num  87.4 87.4 87.4 17 86.7 29.8 35.2 75.7 75.7 75.7 ...\n $ Length          : num  NA NA NA NA NA NA NA NA NA NA ...\n $ HeadCirc        : num  NA NA NA NA NA NA NA NA NA NA ...\n $ Height          : num  165 165 165 105 168 ...\n $ BMI             : num  32.2 32.2 32.2 15.3 30.6 ...\n $ BMICatUnder20yrs: Factor w/ 4 levels \"UnderWeight\",..: NA NA NA NA NA NA NA NA NA NA ...\n $ BMI_WHO         : Factor w/ 4 levels \"12.0_18.5\",\"18.5_to_24.9\",..: 4 4 4 1 4 1 2 3 3 3 ...\n $ Pulse           : int  70 70 70 NA 86 82 72 62 62 62 ...\n $ BPSysAve        : int  113 113 113 NA 112 86 107 118 118 118 ...\n $ BPDiaAve        : int  85 85 85 NA 75 47 37 64 64 64 ...\n $ BPSys1          : int  114 114 114 NA 118 84 114 106 106 106 ...\n $ BPDia1          : int  88 88 88 NA 82 50 46 62 62 62 ...\n $ BPSys2          : int  114 114 114 NA 108 84 108 118 118 118 ...\n $ BPDia2          : int  88 88 88 NA 74 50 36 68 68 68 ...\n $ BPSys3          : int  112 112 112 NA 116 88 106 118 118 118 ...\n $ BPDia3          : int  82 82 82 NA 76 44 38 60 60 60 ...\n $ Testosterone    : num  NA NA NA NA NA NA NA NA NA NA ...\n $ DirectChol      : num  1.29 1.29 1.29 NA 1.16 1.34 1.55 2.12 2.12 2.12 ...\n $ TotChol         : num  3.49 3.49 3.49 NA 6.7 4.86 4.09 5.82 5.82 5.82 ...\n $ UrineVol1       : int  352 352 352 NA 77 123 238 106 106 106 ...\n $ UrineFlow1      : num  NA NA NA NA 0.094 ...\n $ UrineVol2       : int  NA NA NA NA NA NA NA NA NA NA ...\n $ UrineFlow2      : num  NA NA NA NA NA NA NA NA NA NA ...\n $ Diabetes        : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ...\n $ DiabetesAge     : int  NA NA NA NA NA NA NA NA NA NA ...\n $ HealthGen       : Factor w/ 5 levels \"Excellent\",\"Vgood\",..: 3 3 3 NA 3 NA NA 2 2 2 ...\n $ DaysPhysHlthBad : int  0 0 0 NA 0 NA NA 0 0 0 ...\n $ DaysMentHlthBad : int  15 15 15 NA 10 NA NA 3 3 3 ...\n $ LittleInterest  : Factor w/ 3 levels \"None\",\"Several\",..: 3 3 3 NA 2 NA NA 1 1 1 ...\n $ Depressed       : Factor w/ 3 levels \"None\",\"Several\",..: 2 2 2 NA 2 NA NA 1 1 1 ...\n $ nPregnancies    : int  NA NA NA NA 2 NA NA 1 1 1 ...\n $ nBabies         : int  NA NA NA NA 2 NA NA NA NA NA ...\n $ Age1stBaby      : int  NA NA NA NA 27 NA NA NA NA NA ...\n $ SleepHrsNight   : int  4 4 4 NA 8 NA NA 8 8 8 ...\n $ SleepTrouble    : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 NA 2 NA NA 1 1 1 ...\n $ PhysActive      : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 NA 1 NA NA 2 2 2 ...\n $ PhysActiveDays  : int  NA NA NA NA NA NA NA 5 5 5 ...\n $ TVHrsDay        : Factor w/ 7 levels \"0_hrs\",\"0_to_1_hr\",..: NA NA NA NA NA NA NA NA NA NA ...\n $ CompHrsDay      : Factor w/ 7 levels \"0_hrs\",\"0_to_1_hr\",..: NA NA NA NA NA NA NA NA NA NA ...\n $ TVHrsDayChild   : int  NA NA NA 4 NA 5 1 NA NA NA ...\n $ CompHrsDayChild : int  NA NA NA 1 NA 0 6 NA NA NA ...\n $ Alcohol12PlusYr : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 NA 2 NA NA 2 2 2 ...\n $ AlcoholDay      : int  NA NA NA NA 2 NA NA 3 3 3 ...\n $ AlcoholYear     : int  0 0 0 NA 20 NA NA 52 52 52 ...\n $ SmokeNow        : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 NA 2 NA NA NA NA NA ...\n $ Smoke100        : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 NA 2 NA NA 1 1 1 ...\n $ Smoke100n       : Factor w/ 2 levels \"Non-Smoker\",\"Smoker\": 2 2 2 NA 2 NA NA 1 1 1 ...\n $ SmokeAge        : int  18 18 18 NA 38 NA NA NA NA NA ...\n $ Marijuana       : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 NA 2 NA NA 2 2 2 ...\n $ AgeFirstMarij   : int  17 17 17 NA 18 NA NA 13 13 13 ...\n $ RegularMarij    : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 NA 1 NA NA 1 1 1 ...\n $ AgeRegMarij     : int  NA NA NA NA NA NA NA NA NA NA ...\n $ HardDrugs       : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 NA 2 NA NA 1 1 1 ...\n $ SexEver         : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 NA 2 NA NA 2 2 2 ...\n $ SexAge          : int  16 16 16 NA 12 NA NA 13 13 13 ...\n $ SexNumPartnLife : int  8 8 8 NA 10 NA NA 20 20 20 ...\n $ SexNumPartYear  : int  1 1 1 NA 1 NA NA 0 0 0 ...\n $ SameSex         : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 NA 2 NA NA 2 2 2 ...\n $ SexOrientation  : Factor w/ 3 levels \"Bisexual\",\"Heterosexual\",..: 2 2 2 NA 2 NA NA 1 1 1 ...\n $ PregnantNow     : Factor w/ 3 levels \"Yes\",\"No\",\"Unknown\": NA NA NA NA NA NA NA NA NA NA ...\n - attr(*, \".internal.selfref\")=<externalptr> \n - attr(*, \".data.table.locked\")= logi TRUE\n\n\nNULL\n\n\n반면 .SDcols와 함께 .SD를 사용한다면 .SDcols에 입력한 column만 선택합니다.\n\ndt[,str(.SD),.SDcols=c('Gender','Age')]\n\nClasses 'data.table' and 'data.frame':  10000 obs. of  2 variables:\n $ Gender: Factor w/ 2 levels \"female\",\"male\": 2 2 2 2 1 2 2 1 1 1 ...\n $ Age   : int  34 34 34 4 49 9 8 45 45 45 ...\n - attr(*, \".internal.selfref\")=<externalptr> \n - attr(*, \".data.table.locked\")= logi TRUE\n\n\nNULL\n\n\n.SDcols에 column을 선택하는 방법은 크게 세 가지가 있습니다.\n\ncolumn 이름을 갖는 vector 만들어서 사용\n아래의 예시처럼 찾고자 하는 column 이름 c()로 묶은 vector 형태로 넣어줄 수 있습니다.\n\ndt[,.SD,.SDcols=c('Gender','Age','Race1','Education')]\n\n       Gender   Age   Race1      Education\n       <fctr> <int>  <fctr>         <fctr>\n    1:   male    34   White    High School\n    2:   male    34   White    High School\n    3:   male    34   White    High School\n    4:   male     4   Other           <NA>\n    5: female    49   White   Some College\n   ---                                    \n 9996:   male    28 Mexican 9 - 11th Grade\n 9997: female     0   White           <NA>\n 9998:   male    27 Mexican   College Grad\n 9999:   male    60   White   College Grad\n10000:   male    60   White   College Grad\n\n# OR\ntarget <- c('Gender','Age','Race1','Education')\ndt[,.SD,.SDcols=target]\n\n       Gender   Age   Race1      Education\n       <fctr> <int>  <fctr>         <fctr>\n    1:   male    34   White    High School\n    2:   male    34   White    High School\n    3:   male    34   White    High School\n    4:   male     4   Other           <NA>\n    5: female    49   White   Some College\n   ---                                    \n 9996:   male    28 Mexican 9 - 11th Grade\n 9997: female     0   White           <NA>\n 9998:   male    27 Mexican   College Grad\n 9999:   male    60   White   College Grad\n10000:   male    60   White   College Grad\n\n\npatterns()를 통한 column 규칙 찾기\npatterns() 함수를 이용해 해당 문자열을 갖는 모든 column을 찾을 수 있습니다.\n\ndt[,.SD,.SDcols=patterns('Alcohol')]\n\n       Alcohol12PlusYr AlcoholDay AlcoholYear\n                <fctr>      <int>       <int>\n    1:             Yes         NA           0\n    2:             Yes         NA           0\n    3:             Yes         NA           0\n    4:            <NA>         NA          NA\n    5:             Yes          2          20\n   ---                                       \n 9996:            <NA>         NA          NA\n 9997:            <NA>         NA          NA\n 9998:             Yes          5           4\n 9999:             Yes         NA           0\n10000:             Yes         NA           0\n\n\n:을 이용해 연속적인 column을 찾기\n.SDcols에 적용할 column이 연이어 붙어있는 경우, :을 이용하여 찾을 수 있습니다.\n\ndt[,.SD,.SDcols=Gender:Age]\n\n       Gender   Age\n       <fctr> <int>\n    1:   male    34\n    2:   male    34\n    3:   male    34\n    4:   male     4\n    5: female    49\n   ---             \n 9996:   male    28\n 9997: female     0\n 9998:   male    27\n 9999:   male    60\n10000:   male    60\n\n\n\n한편 .SD (.SDcols)와 자주 사용되는 함수는 lapply()입니다.\nlapply()는 list + apply의 약자로, list에 동일한 함수를 적용할 때 사용되는 함수입니다.\nlapply()는 크게 아래의 구조로 이루어져 있습니다.\n\nlapply(\n  X, # 함수를 적용할 부분\n  FUN, # 선택된 X에 적용할 함수\n  ... # 추가 인자, e.g., na.rm=T\n)\n\nX 에는 함수를 적용할 column이름 또는 벡터가 오게 됩니다. 이 챕터에서는 주로 data.table에 lapply()를 적용하기 때문에 column이름이 오게 됩니다.\nFUN 에는 X에서 선택된 column들에 동일하게 적용할 함수를 작성합니다. FUN 부분은 각 column이 호출되어야 하는 횟수에 따라 사용하는 방법이 달라집니다.\n보통 function(x) 또는 \\(x) 를 이용해 적용시킬 함수를 입력해줍니다.\n\nlapply(1:5, function(x) ifelse(is.na(x),mean(x,na.rm=T),x))\n\n[[1]]\n[1] 1\n\n[[2]]\n[1] 2\n\n[[3]]\n[1] 3\n\n[[4]]\n[1] 4\n\n[[5]]\n[1] 5\n\nlapply(1:5, \\(x) mean(x,na.rm=T))\n\n[[1]]\n[1] 1\n\n[[2]]\n[1] 2\n\n[[3]]\n[1] 3\n\n[[4]]\n[1] 4\n\n[[5]]\n[1] 5\n\n\n만약 평균을 구하늖 ㅏㅁ수처럼 mean() 처럼 각 column이 한번만 와도 되는 상황이라면 function()을 생략하고 함수의 이름만 사용할 수 있습니다. 결측치가 있는 경우 … 부분에 추가적으로 na.rm=T 를 사용할 수 있습니다.\n\nlapply(1:5, mean, na.rm=T)\n\n[[1]]\n[1] 1\n\n[[2]]\n[1] 2\n\n[[3]]\n[1] 3\n\n[[4]]\n[1] 4\n\n[[5]]\n[1] 5\n\n\nlapply()와 .SD를 사용할 때는 .SD와 .SDcols를 통해 선택되는 column에 동일한 함수를 적용하게 됩니다. 일일이 column마다 함수를 적용할 필요가 없으니, 입력해야 하는 코드도 줄어들 뿐만 아니라 계산에 필요한 시간도 훨씬 단축됩니다.\n\ndt[,lapply(.SD, # 함수를 적용할 column \n           mean, # functcion 부분\n           na.rm=T # 추가 인자 부분\n           ),\n   .SDcols=c('Age','BMI') # .SD 중 선택되는 column이름\n   ]\n\n       Age      BMI\n     <num>    <num>\n1: 36.7421 26.66014\n\n\n또한 lapply()와 .SD는 여러 column들의 평균, 표준편차 등의 요약통계량을 계산하는 경우, 동시에 column들의 유형을 numeric에서 character로 변환하는 경우 등에 자주 사용됩니다.\n\ndt[,lapply(.SD, mean, na.rm=T), .SDcols=target]\n\n   Gender     Age Race1 Education\n    <num>   <num> <num>     <num>\n1:     NA 36.7421    NA        NA\n\ndt[,lapply(.SD, as.factor), .SDcols=target]\n\n       Gender    Age   Race1      Education\n       <fctr> <fctr>  <fctr>         <fctr>\n    1:   male     34   White    High School\n    2:   male     34   White    High School\n    3:   male     34   White    High School\n    4:   male      4   Other           <NA>\n    5: female     49   White   Some College\n   ---                                     \n 9996:   male     28 Mexican 9 - 11th Grade\n 9997: female      0   White           <NA>\n 9998:   male     27 Mexican   College Grad\n 9999:   male     60   White   College Grad\n10000:   male     60   White   College Grad\n\n\nlapply()와 .SD를 활용하여 여러 column들을 변경한 후, 데이터에 저장하는 것은 chapter 3에서 배웠던 := 를 이용합니다.\n여러 column을 동시에 변경하여 저장할 때는 := 왼쪽 부분에 column 이름이 있는 vector를 ()로 감싸주면 됩니다.\n예를 들어 나이와 BMI의 NA를 각 column의 중앙값으로 채워넣고자 하는 경우,\n\ntarget <- c('Age','BMI')\n\ndt[,(target):=lapply(.SD, \\(x) ifelse(is.na(x), median(x,na.rm=T),x)),.SDcols=target]\n\n\n\n2) .N\n.N은 데이터의 수, 다시 말해 row의 개수를 확인하는 특수기호입니다. .N은 주로 by와 함께 됩니다. by를 통해 특정 집단의 분포별로 몇 명이 있는지, 또는 몇 건의 데이터가 있는지 확인합니다.\n예를 들면 인종(race)에 따른 데이터의 수를 확인하고 싶을 때는 아래와 같이 사용합니다.\n\ndt[,.N, by=Race1]\n\n      Race1     N\n     <fctr> <int>\n1:    White  6372\n2:    Other   806\n3:  Mexican  1015\n4:    Black  1197\n5: Hispanic   610\n\n\n\n\n\n\n\n\nNote\n\n\n\n사실 그룹별 응답 수는 table() 함수를 이용해도 구할 수 있습니다. 그러나 .N을 이용하게 되면 각 범주별 빈도수를 data.table 문법 내에서 구할 수 있기 때문에 활용성에 있어 table()보다 더 뛰어나다고 할 수 있습니다.\n\ndt[,c(.N, lapply(.SD,mean)),by=.(Race1),.SDcols='Age']\n\n      Race1     N      Age\n     <fctr> <int>    <num>\n1:    White  6372 39.80273\n2:    Other   806 32.29032\n3:  Mexican  1015 27.37635\n4:    Black  1197 33.94486\n5: Hispanic   610 31.72623\n\n\n\n\n\n\n3) .I\n.I는 j 부분에서 행을 다루기 특수기호입니다.\n보통 .I는 특정 조건을 만족하는 row의 위치를 찾을 때 사용합니다. 특히 by가 있는 경우, 다시 말해 범주별로 row의 위치를 찾을 때 많이 사용합니다.\n집단별 row가 필요하지 않다면, j가 아닌 i 부분에서 행을 선택할 수 있습니다. 그러나 i 부분만 입력하게 될 경우, 집단 별 조건을 확인할 수 없습니다. 왜냐하면 by를 사용하기 위해서는 j가 선행되어야 하기 때문입니다.\n따라서 i 부분에서 바로 row를 filtering 하는 것이 아니라, j 부분에서 집단별로 조건을 만족시키는 행의 번호를 찾아서 사용합니다.\n또한 .I를 사용하는 경우 행의 번호를 확인할 수 있기 때문에, 그 행의 번호에 해당하는 모든 column을 사용할 수 있습니다.\n예를 들어, 인종별 첫 번째 행을 선택하는 경우는 다음과 같이 실행할 수 있습니다.\n\ndt[dt[,.I[1L],by=Race1]$V1]\n\n      ID SurveyYr Gender   Age AgeDecade AgeMonths    Race1  Race3    Education\n   <int>   <fctr> <fctr> <int>    <fctr>     <int>   <fctr> <fctr>       <fctr>\n1: 51624  2009_10   male    34     30-39       409    White   <NA>  High School\n2: 51625  2009_10   male     4       0-9        49    Other   <NA>         <NA>\n3: 51666  2009_10 female    58     50-59       700  Mexican   <NA>  High School\n4: 51671  2009_10 female     9       0-9       112    Black   <NA>         <NA>\n5: 51692  2009_10   male    54     50-59       655 Hispanic   <NA> College Grad\n   MaritalStatus    HHIncome HHIncomeMid Poverty HomeRooms HomeOwn       Work\n          <fctr>      <fctr>       <int>   <num>     <int>  <fctr>     <fctr>\n1:       Married 25000-34999       30000    1.36         6     Own NotWorking\n2:          <NA> 20000-24999       22500    1.07         9     Own       <NA>\n3:       Married 75000-99999       87500    2.03        10    Rent    Looking\n4:          <NA>        <NA>          NA      NA         3    Rent       <NA>\n5:      Divorced 55000-64999       60000    3.28         3    Rent NotWorking\n   Weight Length HeadCirc Height   BMI BMICatUnder20yrs      BMI_WHO Pulse\n    <num>  <num>    <num>  <num> <num>           <fctr>       <fctr> <int>\n1:   87.4     NA       NA  164.7 32.22             <NA>    30.0_plus    70\n2:   17.0     NA       NA  105.4 15.30             <NA>    12.0_18.5    NA\n3:   57.5     NA       NA  148.1 26.22             <NA> 25.0_to_29.9    94\n4:   53.1     NA       NA  139.2 27.40             <NA> 25.0_to_29.9    92\n5:  113.9     NA       NA  177.1 36.32             <NA>    30.0_plus    64\n   BPSysAve BPDiaAve BPSys1 BPDia1 BPSys2 BPDia2 BPSys3 BPDia3 Testosterone\n      <int>    <int>  <int>  <int>  <int>  <int>  <int>  <int>        <num>\n1:      113       85    114     88    114     88    112     82           NA\n2:       NA       NA     NA     NA     NA     NA     NA     NA           NA\n3:      127       83     NA     NA    134     82    120     84           NA\n4:       93       63     86     56     90     64     96     62           NA\n5:       90       41     94     48     90     42     90     40           NA\n   DirectChol TotChol UrineVol1 UrineFlow1 UrineVol2 UrineFlow2 Diabetes\n        <num>   <num>     <int>      <num>     <int>      <num>   <fctr>\n1:       1.29    3.49       352         NA        NA         NA       No\n2:         NA      NA        NA         NA        NA         NA       No\n3:       1.14    4.78        29      0.299        NA         NA       No\n4:       1.22    4.86       156      0.975        NA         NA       No\n5:       1.60    4.81       168      0.866        NA         NA       No\n   DiabetesAge HealthGen DaysPhysHlthBad DaysMentHlthBad LittleInterest\n         <int>    <fctr>           <int>           <int>         <fctr>\n1:          NA      Good               0              15           Most\n2:          NA      <NA>              NA              NA           <NA>\n3:          NA      <NA>              NA              NA           <NA>\n4:          NA      <NA>              NA              NA           <NA>\n5:          NA      Good               0               0        Several\n   Depressed nPregnancies nBabies Age1stBaby SleepHrsNight SleepTrouble\n      <fctr>        <int>   <int>      <int>         <int>       <fctr>\n1:   Several           NA      NA         NA             4          Yes\n2:      <NA>           NA      NA         NA            NA         <NA>\n3:      <NA>           NA      NA         NA             5           No\n4:      <NA>           NA      NA         NA            NA         <NA>\n5:      None           NA      NA         NA             6          Yes\n   PhysActive PhysActiveDays TVHrsDay CompHrsDay TVHrsDayChild CompHrsDayChild\n       <fctr>          <int>   <fctr>     <fctr>         <int>           <int>\n1:         No             NA     <NA>       <NA>            NA              NA\n2:       <NA>             NA     <NA>       <NA>             4               1\n3:        Yes              2     <NA>       <NA>            NA              NA\n4:       <NA>             NA     <NA>       <NA>             0               1\n5:        Yes              3     <NA>       <NA>            NA              NA\n   Alcohol12PlusYr AlcoholDay AlcoholYear SmokeNow Smoke100  Smoke100n SmokeAge\n            <fctr>      <int>       <int>   <fctr>   <fctr>     <fctr>    <int>\n1:             Yes         NA           0       No      Yes     Smoker       18\n2:            <NA>         NA          NA     <NA>     <NA>       <NA>       NA\n3:            <NA>         NA          NA      Yes      Yes     Smoker       17\n4:            <NA>         NA          NA     <NA>     <NA>       <NA>       NA\n5:             Yes          2         156     <NA>       No Non-Smoker       NA\n   Marijuana AgeFirstMarij RegularMarij AgeRegMarij HardDrugs SexEver SexAge\n      <fctr>         <int>       <fctr>       <int>    <fctr>  <fctr>  <int>\n1:       Yes            17           No          NA       Yes     Yes     16\n2:      <NA>            NA         <NA>          NA      <NA>    <NA>     NA\n3:      <NA>            NA         <NA>          NA      <NA>    <NA>     NA\n4:      <NA>            NA         <NA>          NA      <NA>    <NA>     NA\n5:        No            NA           No          NA        No     Yes     14\n   SexNumPartnLife SexNumPartYear SameSex SexOrientation PregnantNow\n             <int>          <int>  <fctr>         <fctr>      <fctr>\n1:               8              1      No   Heterosexual        <NA>\n2:              NA             NA    <NA>           <NA>        <NA>\n3:              NA             NA    <NA>           <NA>        <NA>\n4:              NA             NA    <NA>           <NA>        <NA>\n5:              20              2      No   Heterosexual        <NA>\n\n\n이번에는 인종 별로 첫 번째 행이 아니라 Height가 최대인 (키가 가장 큰) 데이터를 추출해보겠습니다.\n\ndt[dt[,.I[max(Height,na.rm=T)],by=.(Race1)]$V1]\n\n      ID SurveyYr Gender   Age AgeDecade AgeMonths    Race1  Race3    Education\n   <int>   <fctr> <fctr> <int>    <fctr>     <int>   <fctr> <fctr>       <fctr>\n1: 52255  2009_10 female    80      <NA>        NA    White   <NA>    8th Grade\n2: 57054  2009_10 female    49     40-49       594    Other   <NA>  High School\n3: 55236  2009_10 female    39     30-39       474  Mexican   <NA> Some College\n4: 55115  2009_10 female    36     30-39       433    Black   <NA> Some College\n5: 59809  2009_10   male    57     50-59       688 Hispanic   <NA>    8th Grade\n   MaritalStatus    HHIncome HHIncomeMid Poverty HomeRooms HomeOwn       Work\n          <fctr>      <fctr>       <int>   <num>     <int>  <fctr>     <fctr>\n1:       Widowed 20000-24999       22500    1.20         5     Own NotWorking\n2:       Married  more 99999      100000    5.00        10     Own NotWorking\n3:  NeverMarried        <NA>          NA    2.77         4    Rent    Working\n4:  NeverMarried        <NA>          NA      NA         8    Rent    Looking\n5:       Married 20000-24999       22500    0.60         7    Rent    Working\n   Weight Length HeadCirc Height   BMI BMICatUnder20yrs      BMI_WHO Pulse\n    <num>  <num>    <num>  <num> <num>           <fctr>       <fctr> <int>\n1:   65.6     NA       NA  162.8 24.75             <NA> 18.5_to_24.9    82\n2:   61.1     NA       NA  165.5 22.31             <NA> 18.5_to_24.9    56\n3:   56.3     NA       NA  160.3 21.91             <NA> 18.5_to_24.9    84\n4:   94.4     NA       NA  162.2 35.88             <NA>    30.0_plus    76\n5:   68.1     NA       NA  167.2 24.36             <NA> 18.5_to_24.9    86\n   BPSysAve BPDiaAve BPSys1 BPDia1 BPSys2 BPDia2 BPSys3 BPDia3 Testosterone\n      <int>    <int>  <int>  <int>  <int>  <int>  <int>  <int>        <num>\n1:      138       35    134     48    140     36    136     34           NA\n2:      108       71    112     74    106     68    110     74           NA\n3:      107       58    102     62    108     56    106     60           NA\n4:      135       84    130     82    136     84    134     84           NA\n5:      137       85    142     88    138     86    136     84           NA\n   DirectChol TotChol UrineVol1 UrineFlow1 UrineVol2 UrineFlow2 Diabetes\n        <num>   <num>     <int>      <num>     <int>      <num>   <fctr>\n1:       2.15    5.30        58      0.331        NA         NA       No\n2:       1.94    5.43       200      1.449        NA         NA       No\n3:       1.89    6.05       248      1.355        NA         NA       No\n4:       1.01    5.77        76      0.691        NA         NA       No\n5:       1.16    6.54       141      0.876        NA         NA       No\n   DiabetesAge HealthGen DaysPhysHlthBad DaysMentHlthBad LittleInterest\n         <int>    <fctr>           <int>           <int>         <fctr>\n1:          NA      Good               0               0           <NA>\n2:          NA Excellent               0               0           None\n3:          NA      Good               5              15        Several\n4:          NA      Good               1               2           None\n5:          NA      Good               0               1           None\n   Depressed nPregnancies nBabies Age1stBaby SleepHrsNight SleepTrouble\n      <fctr>        <int>   <int>      <int>         <int>       <fctr>\n1:      <NA>            3       3         19             8           No\n2:      None            2       2         33             7           No\n3:   Several            2      NA         NA             8           No\n4:   Several            4       1         NA             9           No\n5:      None           NA      NA         NA             5           No\n   PhysActive PhysActiveDays TVHrsDay CompHrsDay TVHrsDayChild CompHrsDayChild\n       <fctr>          <int>   <fctr>     <fctr>         <int>           <int>\n1:         No             NA     <NA>       <NA>            NA              NA\n2:        Yes              5     <NA>       <NA>            NA              NA\n3:        Yes              5     <NA>       <NA>            NA              NA\n4:        Yes              2     <NA>       <NA>            NA              NA\n5:         No             NA     <NA>       <NA>            NA              NA\n   Alcohol12PlusYr AlcoholDay AlcoholYear SmokeNow Smoke100  Smoke100n SmokeAge\n            <fctr>      <int>       <int>   <fctr>   <fctr>     <fctr>    <int>\n1:              No         NA          NA     <NA>       No Non-Smoker       NA\n2:             Yes          2         208       No      Yes     Smoker       20\n3:             Yes         NA           0       No      Yes     Smoker       15\n4:             Yes          1           3     <NA>       No Non-Smoker       NA\n5:              No         NA           0       No      Yes     Smoker       14\n   Marijuana AgeFirstMarij RegularMarij AgeRegMarij HardDrugs SexEver SexAge\n      <fctr>         <int>       <fctr>       <int>    <fctr>  <fctr>  <int>\n1:      <NA>            NA         <NA>          NA      <NA>    <NA>     NA\n2:        No            NA           No          NA        No     Yes     20\n3:       Yes            19          Yes          19       Yes     Yes     13\n4:       Yes            22           No          NA        No     Yes     18\n5:        No            NA           No          NA        No    <NA>     NA\n   SexNumPartnLife SexNumPartYear SameSex SexOrientation PregnantNow\n             <int>          <int>  <fctr>         <fctr>      <fctr>\n1:              NA             NA    <NA>           <NA>        <NA>\n2:               2              1      No   Heterosexual        <NA>\n3:              55              1     Yes   Heterosexual          No\n4:               5              2      No   Heterosexual          No\n5:              NA             NA      No   Heterosexual        <NA>\n\ndt[dt[,.I[which.max(Height)],by=.(Race1)]$V1]\n\n      ID SurveyYr Gender   Age AgeDecade AgeMonths    Race1    Race3\n   <int>   <fctr> <fctr> <int>    <fctr>     <int>   <fctr>   <fctr>\n1: 71315  2011_12   male    44     40-49        NA    White    White\n2: 61489  2009_10   male    18     10-19       219    Other     <NA>\n3: 60251  2009_10   male    28     20-29       336  Mexican     <NA>\n4: 53010  2009_10   male    51     50-59       620    Black     <NA>\n5: 64728  2011_12   male    23     20-29        NA Hispanic Hispanic\n        Education MaritalStatus    HHIncome HHIncomeMid Poverty HomeRooms\n           <fctr>        <fctr>      <fctr>       <int>   <num>     <int>\n1:      8th Grade       Married 25000-34999       30000    1.11         7\n2:           <NA>          <NA>      0-4999        2500    0.28         8\n3:    High School  NeverMarried 35000-44999       40000    2.03         4\n4: 9 - 11th Grade     Separated 10000-14999       12500    0.28         5\n5:    High School  NeverMarried 35000-44999       40000    1.79         1\n   HomeOwn    Work Weight Length HeadCirc Height   BMI BMICatUnder20yrs\n    <fctr>  <fctr>  <num>  <num>    <num>  <num> <num>           <fctr>\n1:    Rent Working  162.2     NA       NA  200.4 40.40             <NA>\n2:   Other Working   90.3     NA       NA  190.6 24.86             <NA>\n3:    Rent Working  124.4     NA       NA  195.0 32.72             <NA>\n4:   Other Looking   80.7     NA       NA  194.9 21.24             <NA>\n5:    Rent Working   77.1     NA       NA  197.2 19.80             <NA>\n        BMI_WHO Pulse BPSysAve BPDiaAve BPSys1 BPDia1 BPSys2 BPDia2 BPSys3\n         <fctr> <int>    <int>    <int>  <int>  <int>  <int>  <int>  <int>\n1:    30.0_plus    68      132       84    136     88     NA     NA    132\n2: 18.5_to_24.9    58      108       58    114     52    110     60    106\n3:    30.0_plus    86      124       71    124     80    126     72    122\n4: 18.5_to_24.9    70       98       72    106     70     98     72     NA\n5: 18.5_to_24.9    70      122       66    126     70    120     64    124\n   BPDia3 Testosterone DirectChol TotChol UrineVol1 UrineFlow1 UrineVol2\n    <int>        <num>      <num>   <num>     <int>      <num>     <int>\n1:     84       213.27       1.03    5.40       263      1.169        NA\n2:     56           NA       1.53    2.77       324      0.878        NA\n3:     70           NA       1.09    6.57        51      0.298        NA\n4:     NA           NA       1.97    5.56       149      1.211        NA\n5:     68       747.68       1.03    3.49       120      0.545        NA\n   UrineFlow2 Diabetes DiabetesAge HealthGen DaysPhysHlthBad DaysMentHlthBad\n        <num>   <fctr>       <int>    <fctr>           <int>           <int>\n1:         NA       No          NA      Good               0               0\n2:         NA       No          NA      Good               0               0\n3:         NA       No          NA      Fair               0               0\n4:         NA       No          NA      Good               0               0\n5:         NA       No          NA      Good               0               0\n   LittleInterest Depressed nPregnancies nBabies Age1stBaby SleepHrsNight\n           <fctr>    <fctr>        <int>   <int>      <int>         <int>\n1:           None      None           NA      NA         NA             5\n2:           None      None           NA      NA         NA             2\n3:           None      None           NA      NA         NA             6\n4:           None      None           NA      NA         NA             8\n5:           None      None           NA      NA         NA             7\n   SleepTrouble PhysActive PhysActiveDays  TVHrsDay CompHrsDay TVHrsDayChild\n         <fctr>     <fctr>          <int>    <fctr>     <fctr>         <int>\n1:           No         No             NA      1_hr  0_to_1_hr            NA\n2:           No        Yes              5      <NA>       <NA>            NA\n3:           No        Yes              7      <NA>       <NA>            NA\n4:           No        Yes              3      <NA>       <NA>            NA\n5:           No        Yes             NA More_4_hr  0_to_1_hr            NA\n   CompHrsDayChild Alcohol12PlusYr AlcoholDay AlcoholYear SmokeNow Smoke100\n             <int>          <fctr>      <int>       <int>   <fctr>   <fctr>\n1:              NA             Yes         NA           0       No      Yes\n2:              NA            <NA>         NA          NA     <NA>     <NA>\n3:              NA             Yes         12           1     <NA>       No\n4:              NA             Yes         12         364      Yes      Yes\n5:              NA              No         NA          NA     <NA>       No\n    Smoke100n SmokeAge Marijuana AgeFirstMarij RegularMarij AgeRegMarij\n       <fctr>    <int>    <fctr>         <int>       <fctr>       <int>\n1:     Smoker       17       Yes            15          Yes          16\n2:       <NA>       NA       Yes            15          Yes          17\n3: Non-Smoker       NA        No            NA           No          NA\n4:     Smoker       17       Yes            18           No          NA\n5: Non-Smoker       NA        No            NA           No          NA\n   HardDrugs SexEver SexAge SexNumPartnLife SexNumPartYear SameSex\n      <fctr>  <fctr>  <int>           <int>          <int>  <fctr>\n1:        No     Yes     19              13              1      No\n2:        No     Yes     10               6              3      No\n3:        No     Yes     16               7              0      No\n4:       Yes     Yes     18              10              1      No\n5:        No      No     NA               0              0      No\n   SexOrientation PregnantNow\n           <fctr>      <fctr>\n1:   Heterosexual        <NA>\n2:   Heterosexual        <NA>\n3:   Heterosexual        <NA>\n4:   Heterosexual        <NA>\n5:   Heterosexual        <NA>"
  },
  {
    "objectID": "posts/data.table_advanced/index.html#데이터-병합",
    "href": "posts/data.table_advanced/index.html#데이터-병합",
    "title": "data.table 심화",
    "section": "2. 데이터 병합",
    "text": "2. 데이터 병합\nR에서 데이터를 묶는 방법은 크게 두 종류가 있습니다. 하나는 bind() 이고, 다른 하나는 merge() 또는 join() 입니다.\n\n1) bind\nbind 계열의 함수는 두 개 이상의 데이터를 합치는 함수입니다. merge는 뒤에서 언급하겠지만, bind는 merge와 달리 특정한 기준이 되는 column이 필요하지 않습니다.\nbind에는 rbind(), cbind()가 있습니다.\n\na. rbind()\nrbind()는 row-bind의 약자로, 두 가지 이상의 데이터의 행을 묶는 함수입니다. 행을 묶는 것이기 때문에 데이터가 아래로 추가됩니다.\n\nrbind(1:3,c('a','b','c'))\n\n     [,1] [,2] [,3]\n[1,] \"1\"  \"2\"  \"3\" \n[2,] \"a\"  \"b\"  \"c\" \n\n\nrbind()를 통해 합치고자 하는 데이터의 길이가 맞지 않는 경우, 자동으로 부족한 부분을 채웁니다.\n\nrbind(c(1:3),c(1:4))\n\n     [,1] [,2] [,3] [,4]\n[1,]    1    2    3    1\n[2,]    1    2    3    4\n\n\n만약 column 이름을 갖는 matrix나 data.table 형태를 rbind()하고자 하는 경우는 합치고자 하는 데이터의 column이름이 같아야 합니다.\n\nrequire(data.table)\na <- data.table(num=1:5,\n                str = letters[1:5])\nb <- data.table(num=6:10,\n                str = LETTERS[1:5])\nrbind(a,b)\n\n      num    str\n    <int> <char>\n 1:     1      a\n 2:     2      b\n 3:     3      c\n 4:     4      d\n 5:     5      e\n 6:     6      A\n 7:     7      B\n 8:     8      C\n 9:     9      D\n10:    10      E\n\n\n만약 두 데이터의 column 이름이 같지 않은 경우, 에러 메시지가 뜨게 됩니다.\n\na <- data.table(num=1:5,\n                str=letters[1:5])\nb <- data.table(num=6:10,\n                str2=LETTERS[1:5])\nrbind(a,b)\n\n# 에러메시지\n# Column 2 ['str2'] of item 2 is missing in item 1. Use fill=TRUE to fill with NA (NULL for list columns), or use.names=FALSE to ignore column names.\n\n이럴 때는 column 이름을 무시하거나, 이름이 같지 않은 column을 NA로 채워줄 수 있습니다.\n\nrbind(a,b, use.names=F)\n\n      num    str\n    <int> <char>\n 1:     1      a\n 2:     2      b\n 3:     3      c\n 4:     4      d\n 5:     5      e\n 6:     6      A\n 7:     7      B\n 8:     8      C\n 9:     9      D\n10:    10      E\n\n\n\nrbind(a,b, fill=T)\n\n      num    str\n    <int> <char>\n 1:     1      a\n 2:     2      b\n 3:     3      c\n 4:     4      d\n 5:     5      e\n 6:     6      A\n 7:     7      B\n 8:     8      C\n 9:     9      D\n10:    10      E\n\n\n\n\nb. cbind()\ncbind()는 column-bind의 약자로, 두 가지 이상의 데이터의 열을 묶는 함수입니다. 열을 묶기 때문에 데이터가 옆으로 추가됩니다.\n\na <- data.table(num=1:5,\n                str = letters[1:5])\nb <- data.table(num=6:10,\n                str2 = LETTERS[1:5])\ncbind(a,b)\n\n     num    str   num   str2\n   <int> <char> <int> <char>\n1:     1      a     6      A\n2:     2      b     7      B\n3:     3      c     8      C\n4:     4      d     9      D\n5:     5      e    10      E\n\n\n\n\n\n2) merge\nmerge()는 두가지의 데이터를 특정 column을 기준으로 합치는 함수입니다. bind 계열의 함수와 다르게 기준이 되는 column이 반드시 필요합니다.\nmerge()는 두 가지 데이터 중 어떤 방식으로 합치느냐에 따라 크게 3가지로 분류할 수 있습니다.\n\na. inner join\ninner join은 두 가지 데이터의 기준이 되는 column 에서 공통된 값들만 갖는 데이터를 합치는 방법입니다.\ndata.table에서 inner join 하는 방법은 아래와 같습니다.\n\nmerge(dt1, dt2, by=)\n\n\n\nb. left / right join\nleft/right join은 두 가지 데이터에서 왼(오른)쪽 데이터의 column을 기준으로 데이터를 합치는 방법입니다.\ndata.table에서 left join과 right join을 하는 방법은 아래와 같습니다.\n\nmerge(dt1, dt2, by, all.x=T) # left join\nmerge(dt1, dt2, by, all.y=T) # right join\n\nall.x 인자에 TRUE를 주면 left join을, all.y는 right join을 의미합니다.\n\n\nc. outer join\nouter join은 두 가지 데이터의 모든 column을 기준으로 데이터를 합치는 방법입니다.\n공통되지 않은 값을 갖는 경우는 NA로 채워넣어집니다.\ndata.table에서 outer join을 하는 방법은 아래와 같습니다.\n\nmerge(dt1, dt2, all.x)\n\nmerge의 경우 공통된 이름의 column을 기준으로 두 데이터를 합치는 방법이라고 했습니다. 그런데 만약 기준이 되는 column의 이름이 다르다면 어떻게 해야 할까요? 이때는 by.x와 by.y 인자를 사용합니다.\n\nmerge(by.x, by.y)\n\n기존에는 by인자에 공통된 column명을 넣으면 됐지만, 두 가지 데이터의 column이 다르기 때문에 각각 by.x와 by.y에 기준이 되는 column 이름을 넣어주는 것입니다."
  },
  {
    "objectID": "posts/data.table_advanced/index.html#section",
    "href": "posts/data.table_advanced/index.html#section",
    "title": "data.table 심화",
    "section": "",
    "text": "Tip\n\n\n\n두 가지 column을 기준으로 합치고자 할 때, 이름이 다른 경우 아래와 같이 사용합니다.\n\nmerge(dt1, dt2, by.x=c('a','b'), by.y=c('A','B'))\n\n\n\n.EACHI: X와 Y를 합칠 때, 요소별 합쳐진 개수 확인\n\nX = data.table(x = c(1,1,1,2,2,5,6), y = 1:7, key = \"x\")\nY = data.table(x = c(2,6), z = letters[2:1], key = \"x\")\nX[Y,.N, by=x]; #X[Y,.N, by=y];\n\nKey: <x>\n       x     N\n   <num> <int>\n1:     2     2\n2:     6     1\n\nX[Y, .N, by=.EACHI]\n\nKey: <x>\n       x     N\n   <num> <int>\n1:     2     2\n2:     6     1"
  },
  {
    "objectID": "posts/data.table_advanced/index.html#pivoting",
    "href": "posts/data.table_advanced/index.html#pivoting",
    "title": "data.table 심화",
    "section": "3. Pivoting",
    "text": "3. Pivoting\npivoting이란 column이 여러 개 좌우로 붙어있던 것을 위아래로 길게 늘이거나, 데이터를 좌우로 넓게 펼치는 것을 의미합니다.\npivot: 축을 기준으로 데이터를 회전시키는 것을 의미합니다. 데이터 측면에서 축은 기준이 되는 column을 의미합니다. 예를 들면 환자의 식별자, 일자 등이 있습니다.\npivoting 개념에서 사용되는 데이터 유형 두 가지에 대해 살펴보겠습니다.\n\nWide data\n넓은(wide) 데이터는 이름 그대로 양 옆으로 넓은 데이터를 의미합니다. 양 옆으로 넓다는 것은 column의 개수가 많다는 것을 의미합니다. 지금까지 교재에서 다루었던 거의 대부분의 데이터가 column들이 옆으로 붙어있는 형태는 wide 데이터입니다.\nLong data\n긴 (long) 데이터는 넓은 데이터와 다르게, 반복되는 column을 기준으로 여러 변수(variable)와 값(value)으로 구성된 데이터입니다.\n이 때 반복되는 column이란 반복되어 기록된 값들입니다. 예를 들면 환자가 입원해있는 동안의 기록이나 일자별 날씨 같이 반복적으로 기록되어 있는 데이터 등이 있습니다.\nairquality는 Month와 Day 별 오존량, 풍량, 기온 등이 기록된 데이터입니다. 여기서 Month와 Day가 바로 반복되는 column입니다.\n\nairquality |> head()\n\n  Ozone Solar.R Wind Temp Month Day\n1    41     190  7.4   67     5   1\n2    36     118  8.0   72     5   2\n3    12     149 12.6   74     5   3\n4    18     313 11.5   62     5   4\n5    NA      NA 14.3   56     5   5\n6    28      NA 14.9   66     5   6\n\n\nlong 데이터는 이렇게 반복되는 column들을 기준으로 데이터를 variable과 value로 길게 확장시켜 놓은 것입니다.\n\n데이터 분석을 수행하는 우리 입장에서는 wide한 데이터가 보기에 더 편리합니다. column마다 어떤 데이터가 있는지 확인할 수 있고, 각 column 별로 계산을 수행할 수 있기 때문입니다.\n그러나 컴퓨터 입장에서는, 즉 계산하는 측면에서는 long data가 더 효율적입니다. 그렇기 때문에 동일한 column에 대해 연산을 할 때, long data가 훨씬 빠르게 계산됩니다.\n\n1) melt\nmelt는 column들이 옆으로 나열되어 있는 옆으로 넓은(wide)한 데이터를 위아래로 길게(long) 바꾸는 것을 의미합니다.\n\n\n\n\n\n\nTip\n\n\n\nmelt는 어떤 것을 녹이는 의미를 갖고 있습니다. 넓게 퍼진 데이터를 녹여 길게 만든다고 이해하시면 됩니다.\n\n\n이렇게 옆으로 나열된 column들을 특정한 축을 기준으로 데이터를 variable과 value라는 column으로 녹입니다. 이렇게 되면 long data의 축에 오는 데이터들은 계속 반복되고, variable과 value만 변경되는 데이터로 변환됩니다.\nmelt 함수에서는 기준이 되는 column의 이름과 길게 변환할 column을 지정해줄 수 있습니다.\n\nair_dt <- as.data.table(airquality)\nmelt(air_dt,\n     id.vars=c('Month','Day'),\n     measure.vars=c('Ozone','Temp'),\n     na.rm = T # TRUE일 경우 NA인 값은 제외\n     )\n\n     Month   Day variable value\n     <int> <int>   <fctr> <int>\n  1:     5     1    Ozone    41\n  2:     5     2    Ozone    36\n  3:     5     3    Ozone    12\n  4:     5     4    Ozone    18\n  5:     5     6    Ozone    28\n ---                           \n265:     9    26     Temp    70\n266:     9    27     Temp    77\n267:     9    28     Temp    75\n268:     9    29     Temp    76\n269:     9    30     Temp    68\n\n\n만약 measure.vars에 아무런 인자를 주지 않는다면, melt를 수행했을 때, 기준 column을 제외한 모든 column들이 long 형태로 변경됩니다.\n\nair_melt <- melt(air_dt,\n     id.vars=c('Month','Day'),\n     na.rm = T # TRUE일 경우 NA인 값은 제외\n     )\nair_melt\n\n     Month   Day variable value\n     <int> <int>   <fctr> <num>\n  1:     5     1    Ozone    41\n  2:     5     2    Ozone    36\n  3:     5     3    Ozone    12\n  4:     5     4    Ozone    18\n  5:     5     6    Ozone    28\n ---                           \n564:     9    26     Temp    70\n565:     9    27     Temp    77\n566:     9    28     Temp    75\n567:     9    29     Temp    76\n568:     9    30     Temp    68\n\n\nmelt의 measure.vars에는 앞서 배웠던 patterns을 통해 비슷한 패턴을 갖는 column명을 선택할 수도 있습니다.\n\nmelt(dt,\n     id.vars = c('Gender','Age','Race1'),\n     measure.vars = patterns('HH') # HH가 들어가는 column 선택\n     )\n\n       Gender   Age   Race1    variable       value\n       <fctr> <int>  <fctr>      <fctr>      <char>\n    1:   male    34   White    HHIncome 25000-34999\n    2:   male    34   White    HHIncome 25000-34999\n    3:   male    34   White    HHIncome 25000-34999\n    4:   male     4   Other    HHIncome 20000-24999\n    5: female    49   White    HHIncome 35000-44999\n   ---                                             \n19996:   male    28 Mexican HHIncomeMid        7500\n19997: female     0   White HHIncomeMid       87500\n19998:   male    27 Mexican HHIncomeMid       87500\n19999:   male    60   White HHIncomeMid       70000\n20000:   male    60   White HHIncomeMid       70000\n\n\n여러 개의 패턴을 지정해 두 가지 이상으로 정리할 수도 있습니다.\n\nhouse_dt <- data.table(\n  family = 1:5,\n  dob_child1 = c('1998-11-26','1996-06-22','2002-07-11','2004-10-10','2000-12-05'),\n  dob_child2 = c('2000-01-29',NA,'2004-04-05','2009-08-27','2005-02-28'),\n  name_child1 = c('Susan','Mark','Sam','Craig','Parker'),\n  name_child2 = c('Jose',NA,'Seth','Khai','Gracie')\n)\n\nhouse_dt |> \n    melt(\n        id.vars = 'family',\n        measure.vars = patterns(\"^dob\",\"^name\"),\n        value.name = c(\"dob\",'name'))\n\n    family variable        dob   name\n     <int>   <fctr>     <char> <char>\n 1:      1        1 1998-11-26  Susan\n 2:      2        1 1996-06-22   Mark\n 3:      3        1 2002-07-11    Sam\n 4:      4        1 2004-10-10  Craig\n 5:      5        1 2000-12-05 Parker\n 6:      1        2 2000-01-29   Jose\n 7:      2        2       <NA>   <NA>\n 8:      3        2 2004-04-05   Seth\n 9:      4        2 2009-08-27   Khai\n10:      5        2 2005-02-28 Gracie\n\n\n\n\n2) dcast\n이렇게 옆으로 나열된 column들을 특정한 축을 기준으로 데이터를 variable과 value라는 column으로 녹입니다.\n\n\n\n\n\n\nTip\n\n\n\ncast는 어떤 형태로 데이터를 굳히는 것을 의미합니다. 기존에 melt로 녹아있던 데이터를 casting 하는 data+casting (dcast)라고 이해하시면 됩니다.\n\n\ndcast는 long data에서 축 column에서 특정 값들을 기준으로 넓게 펼칠 수 있습니다. dcast에서는 formula 형태로 기준이 되는 축과 wide하게 변경해줄 column을 선택해주면 됩니다. 이 때 formula 형태라는 것은 ~ 을 기준으로 기준 축과 column\n\ndcast(data=air_melt,\n      formula = Month + Day ~ variable, # 기준 column ~ column 이름으로 들어갈 column\n      fill = 0, # NA인 경우 채워 넣어줄 값을 선택할 수 있습니다.\n      value.var = 'value' # 데이터로 들어갈 값들.\n        )\n\nKey: <Month, Day>\n     Month   Day Ozone Solar.R  Wind  Temp\n     <int> <int> <num>   <num> <num> <num>\n  1:     5     1    41     190   7.4    67\n  2:     5     2    36     118   8.0    72\n  3:     5     3    12     149  12.6    74\n  4:     5     4    18     313  11.5    62\n  5:     5     5     0       0  14.3    56\n ---                                      \n149:     9    26    30     193   6.9    70\n150:     9    27     0     145  13.2    77\n151:     9    28    14     191  14.3    75\n152:     9    29    18     131   8.0    76\n153:     9    30    20     223  11.5    68\n\n\ndcast에는 fun.aggregate라는 인자가 존재합니다. 이 인자의 경우 만약 기준이 되는 column의 하나의 값에 여러 데이터(row)가 존재하는 경우에 사용합니다.\nairquality 데이터를 예로 들어보겠습니다. 앞서 보여드린 air_melt의 경우 Month와 Day의 두 column을 기준으로 melt했기 때문에 기준 column에 공통되는 값들이 없었습니다 (5/1~ 9/27 까지 일일 데이터이므로).\n이번에는 Day만 기준 column으로 놓고 melt를 한 데이터를 다시 dcast 해보겠습니다.\n\nair_melt2 <- melt(air_dt, id.vars = 'Day',measure.vars = c('Ozone','Solar.R','Wind','Temp'))\n\nair_melt2\n\n       Day variable value\n     <int>   <fctr> <num>\n  1:     1    Ozone    41\n  2:     2    Ozone    36\n  3:     3    Ozone    12\n  4:     4    Ozone    18\n  5:     5    Ozone    NA\n ---                     \n608:    26     Temp    70\n609:    27     Temp    77\n610:    28     Temp    75\n611:    29     Temp    76\n612:    30     Temp    68\n\n\nair_melt와 달리 air_melt2에서는 Day별로 여러 개의 데이터가 존재하게 됩니다 (Day가 1인 경우, 5월 1일, 6월 1일 ~9월 1일 등의 데이터가 있기 때문입니다).\n이 데이터를 dcast하게 된다면 Aggregate function missing, defaulting to 'length' 아래와 같은 메시지가 뜹니다.\n\ndcast(air_melt2, Day ~ variable, value.var='value')\n\nKey: <Day>\n      Day Ozone Solar.R  Wind  Temp\n    <int> <int>   <int> <int> <int>\n 1:     1     5       5     5     5\n 2:     2     5       5     5     5\n 3:     3     5       5     5     5\n 4:     4     5       5     5     5\n 5:     5     5       5     5     5\n 6:     6     5       5     5     5\n 7:     7     5       5     5     5\n 8:     8     5       5     5     5\n 9:     9     5       5     5     5\n10:    10     5       5     5     5\n11:    11     5       5     5     5\n12:    12     5       5     5     5\n13:    13     5       5     5     5\n14:    14     5       5     5     5\n15:    15     5       5     5     5\n16:    16     5       5     5     5\n17:    17     5       5     5     5\n18:    18     5       5     5     5\n19:    19     5       5     5     5\n20:    20     5       5     5     5\n21:    21     5       5     5     5\n22:    22     5       5     5     5\n23:    23     5       5     5     5\n24:    24     5       5     5     5\n25:    25     5       5     5     5\n26:    26     5       5     5     5\n27:    27     5       5     5     5\n28:    28     5       5     5     5\n29:    29     5       5     5     5\n30:    30     5       5     5     5\n31:    31     3       3     3     3\n      Day Ozone Solar.R  Wind  Temp\n\n\n이 메시지가 뜬 이유는 다음과 같습니다. Day라는 고유한 값은 1~31까지 밖에 없는데, air_melt2에서는 Day별로 여러 건의 데이터가 있었습니다. 그렇기 때문에 dcast에서는 Day별 요약 또는 집계를 수행합니다. 이 때 fun.aggregate라는 인자에 어떻게 요약할 것인지 지정해주지 않았기 때문에 초기값인 length()가 적용된 것입니다.\n따라서 평균이나 중앙값, 최소, 최대 등 요약함수를 넣어주면 Day별로 여러 건의 데이터를 요약한 값으로 데이터가 펼쳐지게 됩니다.\n\ndcast(air_melt2, Day ~ variable, \n      value.var='value',\n      fun.aggregate = mean)\n\nKey: <Day>\n      Day    Ozone  Solar.R      Wind     Temp\n    <int>    <num>    <num>     <num>    <num>\n 1:     1       NA 199.0000  6.780000 80.20000\n 2:     2       NA 174.8000  9.160000 80.80000\n 3:     3       NA 177.4000  9.620000 79.40000\n 4:     4       NA       NA  8.620000 81.80000\n 5:     5       NA       NA  8.460000 79.20000\n 6:     6       NA       NA 12.040000 79.80000\n 7:     7 54.20000 241.8000  7.660000 80.80000\n 8:     8       NA 217.6000  9.520000 81.20000\n 9:     9 61.40000 203.8000 11.700000 81.60000\n10:    10       NA 234.6000  9.160000 82.00000\n11:    11       NA       NA 10.560000 83.20000\n12:    12       NA 244.2000 12.040000 79.20000\n13:    13 23.40000 224.8000  9.980000 77.60000\n14:    14       NA 215.6000 12.040000 78.00000\n15:    15       NA 122.2000 12.400000 73.40000\n16:    16 30.20000 218.6000 10.100000 75.40000\n17:    17 36.60000 228.0000 12.620000 73.20000\n18:    18 24.60000 108.4000 10.320000 71.60000\n19:    19 35.20000 222.2000  9.860000 74.80000\n20:    20 29.40000 158.4000  9.960000 76.60000\n21:    21       NA 132.4000 10.200000 70.20000\n22:    22       NA 137.4000 10.300000 74.60000\n23:    23       NA 161.0000  9.740000 75.00000\n24:    24       NA 179.4000  9.380000 74.20000\n25:    25       NA 136.4000 10.520000 72.20000\n26:    26       NA 176.4000  9.280000 74.80000\n27:    27       NA       NA  9.840000 76.20000\n28:    28       NA 143.6000 10.980000 81.40000\n29:    29       NA 182.8000  9.500000 82.80000\n30:    30       NA 214.8000  7.780000 81.80000\n31:    31 60.33333 240.3333  7.633333 83.66667\n      Day    Ozone  Solar.R      Wind     Temp\n\n\n만약 여러 건의 데이터 중 첫 번째를 사용하고 싶은 경우에는 아래와 같이 사용할 수 있습니다.\n\ndcast(air_melt2, Day ~ variable, \n      value.var='value',\n      fun.aggregate = function(x)x[1])\n\nKey: <Day>\n      Day Ozone Solar.R  Wind  Temp\n    <int> <num>   <num> <num> <num>\n 1:     1    41     190   7.4    67\n 2:     2    36     118   8.0    72\n 3:     3    12     149  12.6    74\n 4:     4    18     313  11.5    62\n 5:     5    NA      NA  14.3    56\n 6:     6    28      NA  14.9    66\n 7:     7    23     299   8.6    65\n 8:     8    19      99  13.8    59\n 9:     9     8      19  20.1    61\n10:    10    NA     194   8.6    69\n11:    11     7      NA   6.9    74\n12:    12    16     256   9.7    69\n13:    13    11     290   9.2    66\n14:    14    14     274  10.9    68\n15:    15    18      65  13.2    58\n16:    16    14     334  11.5    64\n17:    17    34     307  12.0    66\n18:    18     6      78  18.4    57\n19:    19    30     322  11.5    68\n20:    20    11      44   9.7    62\n21:    21     1       8   9.7    59\n22:    22    11     320  16.6    73\n23:    23     4      25   9.7    61\n24:    24    32      92  12.0    61\n25:    25    NA      66  16.6    57\n26:    26    NA     266  14.9    58\n27:    27    NA      NA   8.0    57\n28:    28    23      13  12.0    67\n29:    29    45     252  14.9    81\n30:    30   115     223   5.7    79\n31:    31    37     279   7.4    76\n      Day Ozone Solar.R  Wind  Temp\n\n\n\n\n\n\n\n\nNote\n\n\n\n가장 일반적으로 사용하는 데이터는 wide 형태의 데이터입니다.\n그러나 분석하고자 하는 유형, 필요한 데이터의 모양에 따라 데이터의 형태를 변환해줘야 할 때가 있습니다.\n\n\n\n함께 보면 좋은 자료\n\ndata.table 기초"
  },
  {
    "objectID": "posts/data.table_basic/index.html",
    "href": "posts/data.table_basic/index.html",
    "title": "data.table 기초 문법",
    "section": "",
    "text": "data.table은 R의 data.frame을 상속하여 만들어진 패키지입니다. 그렇기 때문에 대괄호([])를 쓰는 등의 문법은 대체로 data.frame과 비슷합니다. 그러나 data.table은 기존의 data.frame과 다른 장점을 갖고 있습니다.\ndata.table의 장점은 다음과 같습니다.\n\n매우 빠른 속도\ndata.table은 기본 data.frame 구조보다 훨씬 빠르게 데이터를 연산합니다.\n\nrequire(data.table)\nrequire(dplyr)\nrequire(microbenchmark)\ndata('storms')\ndf_test <- function(){\n  aggregate(x=storms[,c('wind','pressure')],\n            by = list(storms$name,storms$year, storms$month,storms$day),\n            FUN = mean)\n}\n\ndplyr_test <- function(){\n  storms %>% \n    group_by(name, year, month, day) %>% \n    summarise(wind=mean(wind), pressure=mean(pressure),\n              )\n}\nstorm_dt <- as.data.table(storms)\ndt_test <- function(){\n  storm_dt[,.(wind=mean(wind), pressure=mean(pressure)), by=.(name, year,month,day)]\n}\n\nmicrobenchmark(df_test(), dplyr_test(), dt_test(), times=10)\n\nUnit: milliseconds\n         expr      min       lq      mean    median       uq      max neval\n    df_test() 108.6801 110.1764 112.12669 111.47935 113.3332 118.8255    10\n dplyr_test()  87.9301  89.1327  94.58635  89.96220  97.3966 122.8362    10\n    dt_test()  12.1890  12.2218  13.61144  12.54885  13.6521  19.5435    10\n\n\n위는 각각 data.frame, dplyr, data.table로 동일한 결과를 불러오도록 실행했을 때 걸린 시간입니다. data.table의 결과가 최소 10배는 더욱 빠른 것을 알 수 있습니다.\n효율적인 메모리 처리\ndata.table은 다른 데이터 패키지보다 효율적으로 데이터연산을 처리합니다. 그렇기 때문에 메모리 사용에 있어서도 더 적은 양으로 더 빠르게 계산을 진행합니다.\n낮은 패키지 의존성\n패키지 의존성이라는 것은 특정 패키지를 불러오기 위해 또다른 패키지를 불러오는 것입니다. 우리가 배울 data.table은 R 사용자들에게 자주 활용되는 tidyverse 계열의 dplyr패키지보다 의존성이 훨씬 낮습니다. 그렇기 때문에 번거롭게 하나의 패키지를 사용하기 위해 다른 패키지들을 설치해줄 필요가 없습니다.\n\n\n\ndplyr vs data.table 패키지 의존성 비교"
  },
  {
    "objectID": "posts/data.table_basic/index.html#data.table-함수",
    "href": "posts/data.table_basic/index.html#data.table-함수",
    "title": "data.table 기초 문법",
    "section": "2. data.table 함수",
    "text": "2. data.table 함수\ndata.table 패키지에는 data.table에서 사용할 수 있는 고유의 함수들이 존재합니다. 여기서는 우선 앞으로 사용할 데이터를 불러오고 설정하기 위한 함수들을 우선 배워봅시다.\n\nfread(): f(ast) + read의 의미입니다. 말그대로 빠르게 데이터를 불러오는 것(read)을 의미합니다. .csv, .txt 등의 확장자 이름을 가진 파일들을 불러올 수 있습니다.\n\n\nrequire(NHANES)\ndt <- as.data.table(NHANES)\n\nfread()를 통해 불러온 파일의 class는 data.table입니다.\n\nclass(dt)\n\n[1] \"data.table\" \"data.frame\"\n\n\ndata.table을 출력했을 때, data.frame과 다른 점은 크게 두 가지가 있습니다.\ndata.table은 우선 모든 column에 대해 첫 5개, 마지막 5개의 행을 출력합니다.\n또한 행의 번호에 :가 붙어 출력됩니다.\n\nfwrite(): f(ast) + write 입니다. 말그대로 빠르게 데이터를 저장(write)합니다. .csv, .txt 등의 확장자 파일로 저장할 수 있습니다.\n\n\nnames(dt)\n\n [1] \"ID\"               \"SurveyYr\"         \"Gender\"           \"Age\"             \n [5] \"AgeDecade\"        \"AgeMonths\"        \"Race1\"            \"Race3\"           \n [9] \"Education\"        \"MaritalStatus\"    \"HHIncome\"         \"HHIncomeMid\"     \n[13] \"Poverty\"          \"HomeRooms\"        \"HomeOwn\"          \"Work\"            \n[17] \"Weight\"           \"Length\"           \"HeadCirc\"         \"Height\"          \n[21] \"BMI\"              \"BMICatUnder20yrs\" \"BMI_WHO\"          \"Pulse\"           \n[25] \"BPSysAve\"         \"BPDiaAve\"         \"BPSys1\"           \"BPDia1\"          \n[29] \"BPSys2\"           \"BPDia2\"           \"BPSys3\"           \"BPDia3\"          \n[33] \"Testosterone\"     \"DirectChol\"       \"TotChol\"          \"UrineVol1\"       \n[37] \"UrineFlow1\"       \"UrineVol2\"        \"UrineFlow2\"       \"Diabetes\"        \n[41] \"DiabetesAge\"      \"HealthGen\"        \"DaysPhysHlthBad\"  \"DaysMentHlthBad\" \n[45] \"LittleInterest\"   \"Depressed\"        \"nPregnancies\"     \"nBabies\"         \n[49] \"Age1stBaby\"       \"SleepHrsNight\"    \"SleepTrouble\"     \"PhysActive\"      \n[53] \"PhysActiveDays\"   \"TVHrsDay\"         \"CompHrsDay\"       \"TVHrsDayChild\"   \n[57] \"CompHrsDayChild\"  \"Alcohol12PlusYr\"  \"AlcoholDay\"       \"AlcoholYear\"     \n[61] \"SmokeNow\"         \"Smoke100\"         \"Smoke100n\"        \"SmokeAge\"        \n[65] \"Marijuana\"        \"AgeFirstMarij\"    \"RegularMarij\"     \"AgeRegMarij\"     \n[69] \"HardDrugs\"        \"SexEver\"          \"SexAge\"           \"SexNumPartnLife\" \n[73] \"SexNumPartYear\"   \"SameSex\"          \"SexOrientation\"   \"PregnantNow\"     \n\n\n\nsetnames(): column 이름을 사용자가 알아보기 쉽게끔 변경해야 할 때가 있습니다. setnames()는 column의 이름을 변경하는 함수입니다. column의 이름을 하나만 바꾸고 싶은 경우에는 문자열 하나만 넣어주면 되고, 여러 개의 column 이름을 동시에 변경할 때는 문자 벡터를 넣어주면 됩니다.\n\n\n# 하나의 column 이름을 변경할 때\nsetnames(dt, old='Gender', new='gender')\n\n# 여러 개의 column 이름을 동시에 변경할 때\nsetnames(dt,\n         old = c('Age','Race1','Education'),# 바꿔줄 기존의 column 이름\n         new = c('age','race','education') # 새로운 column 이름\n         )\n\n\ndata.frame 등을 data.table로 변경하기\n새롭게 파일을 불러오는 것 뿐만 아니라 기존의 data.frame을 data.table 형태로 변경해줄 수 있습니다.\n\nsetDT() : 영구적으로 data.table 형태로 저장합니다. 저장된 값을 따로 출력하지는 않습니다.\n\n# setDT()\n\nas.data.table() : 일시적으로 data.table 형태로 출력합니다. 출력된 데이터가 저장되지는 않습니다.\n\nrequire(data.table)\nas.data.table(iris)\n\n     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n            <num>       <num>        <num>       <num>    <fctr>\n  1:          5.1         3.5          1.4         0.2    setosa\n  2:          4.9         3.0          1.4         0.2    setosa\n  3:          4.7         3.2          1.3         0.2    setosa\n  4:          4.6         3.1          1.5         0.2    setosa\n  5:          5.0         3.6          1.4         0.2    setosa\n ---                                                            \n146:          6.7         3.0          5.2         2.3 virginica\n147:          6.3         2.5          5.0         1.9 virginica\n148:          6.5         3.0          5.2         2.0 virginica\n149:          6.2         3.4          5.4         2.3 virginica\n150:          5.9         3.0          5.1         1.8 virginica"
  },
  {
    "objectID": "posts/data.table_basic/index.html#i-data.table-행",
    "href": "posts/data.table_basic/index.html#i-data.table-행",
    "title": "data.table 기초 문법",
    "section": "3. i: data.table 행",
    "text": "3. i: data.table 행\ndata.table에서 행(row)을 다루는 부분을 i 라고 부릅니다 (왜 i가 된건지는 모르겠습니다).\ndata.table에서 행을 다룬다는 것은 특정한 조건을 만족하는 행들을 추출 또는 선택(filtering)한다는 것과 같습니다.\n자, 이제 data.table에서 행을 다루는 방법을 살펴보겠습니다.\n\n1) 논리 연산자를 이용한 row filtering\ndata.frame 의 행을 다루는 부분에서도 배웠지만, 기본적으로 i에서는 논리 연산자를 이용해 행을 선택합니다. 논리 연산자의 조건을 만족하는 행들, 즉 논리 연산자의 실행 결과가 TRUE 인 행들만 추출하는 것입니다.\n\ndt[age>=30]\n\n         ID SurveyYr gender   age AgeDecade AgeMonths   race  Race3\n      <int>   <fctr> <fctr> <int>    <fctr>     <int> <fctr> <fctr>\n   1: 51624  2009_10   male    34     30-39       409  White   <NA>\n   2: 51624  2009_10   male    34     30-39       409  White   <NA>\n   3: 51624  2009_10   male    34     30-39       409  White   <NA>\n   4: 51630  2009_10 female    49     40-49       596  White   <NA>\n   5: 51647  2009_10 female    45     40-49       541  White   <NA>\n  ---                                                              \n5875: 71907  2011_12   male    80      <NA>        NA  White  White\n5876: 71908  2011_12 female    66     60-69        NA  White  White\n5877: 71908  2011_12 female    66     60-69        NA  White  White\n5878: 71915  2011_12   male    60     60-69        NA  White  White\n5879: 71915  2011_12   male    60     60-69        NA  White  White\n         education MaritalStatus    HHIncome HHIncomeMid Poverty HomeRooms\n            <fctr>        <fctr>      <fctr>       <int>   <num>     <int>\n   1:  High School       Married 25000-34999       30000    1.36         6\n   2:  High School       Married 25000-34999       30000    1.36         6\n   3:  High School       Married 25000-34999       30000    1.36         6\n   4: Some College   LivePartner 35000-44999       40000    1.91         5\n   5: College Grad       Married 75000-99999       87500    5.00         6\n  ---                                                                     \n5875:  High School       Married 55000-64999       60000    4.08         6\n5876: College Grad       Widowed 65000-74999       70000    4.55         8\n5877: College Grad       Widowed 65000-74999       70000    4.55         8\n5878: College Grad  NeverMarried 65000-74999       70000    5.00         4\n5879: College Grad  NeverMarried 65000-74999       70000    5.00         4\n      HomeOwn       Work Weight Length HeadCirc Height   BMI BMICatUnder20yrs\n       <fctr>     <fctr>  <num>  <num>    <num>  <num> <num>           <fctr>\n   1:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   2:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   3:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   4:    Rent NotWorking   86.7     NA       NA  168.4 30.57             <NA>\n   5:     Own    Working   75.7     NA       NA  166.7 27.24             <NA>\n  ---                                                                        \n5875:     Own NotWorking   71.5     NA       NA  175.4 23.20             <NA>\n5876:     Own    Working   88.7     NA       NA  159.0 35.10             <NA>\n5877:     Own    Working   88.7     NA       NA  159.0 35.10             <NA>\n5878:     Own    Working   78.4     NA       NA  168.8 27.50             <NA>\n5879:     Own    Working   78.4     NA       NA  168.8 27.50             <NA>\n           BMI_WHO Pulse BPSysAve BPDiaAve BPSys1 BPDia1 BPSys2 BPDia2 BPSys3\n            <fctr> <int>    <int>    <int>  <int>  <int>  <int>  <int>  <int>\n   1:    30.0_plus    70      113       85    114     88    114     88    112\n   2:    30.0_plus    70      113       85    114     88    114     88    112\n   3:    30.0_plus    70      113       85    114     88    114     88    112\n   4:    30.0_plus    86      112       75    118     82    108     74    116\n   5: 25.0_to_29.9    62      118       64    106     62    118     68    118\n  ---                                                                        \n5875: 18.5_to_24.9    54      148       70    150     72    150     70    146\n5876:    30.0_plus    76      114       70    110     74    114     68    114\n5877:    30.0_plus    76      114       70    110     74    114     68    114\n5878: 25.0_to_29.9    76      147       73    150     72    148     74    146\n5879: 25.0_to_29.9    76      147       73    150     72    148     74    146\n      BPDia3 Testosterone DirectChol TotChol UrineVol1 UrineFlow1 UrineVol2\n       <int>        <num>      <num>   <num>     <int>      <num>     <int>\n   1:     82           NA       1.29    3.49       352         NA        NA\n   2:     82           NA       1.29    3.49       352         NA        NA\n   3:     82           NA       1.29    3.49       352         NA        NA\n   4:     76           NA       1.16    6.70        77      0.094        NA\n   5:     60           NA       2.12    5.82       106      1.116        NA\n  ---                                                                      \n5875:     70       402.90       1.27    4.37        61      1.052        NA\n5876:     72        26.00       1.86    6.47        29      0.659        94\n5877:     72        26.00       1.86    6.47        29      0.659        94\n5878:     72       505.13       0.93    4.94       218      1.253        NA\n5879:     72       505.13       0.93    4.94       218      1.253        NA\n      UrineFlow2 Diabetes DiabetesAge HealthGen DaysPhysHlthBad DaysMentHlthBad\n           <num>   <fctr>       <int>    <fctr>           <int>           <int>\n   1:         NA       No          NA      Good               0              15\n   2:         NA       No          NA      Good               0              15\n   3:         NA       No          NA      Good               0              15\n   4:         NA       No          NA      Good               0              10\n   5:         NA       No          NA     Vgood               0               3\n  ---                                                                          \n5875:         NA       No          NA      Good               0               0\n5876:      0.627       No          NA Excellent               0               0\n5877:      0.627       No          NA Excellent               0               0\n5878:         NA      Yes          56      Good               0               2\n5879:         NA      Yes          56      Good               0               2\n      LittleInterest Depressed nPregnancies nBabies Age1stBaby SleepHrsNight\n              <fctr>    <fctr>        <int>   <int>      <int>         <int>\n   1:           Most   Several           NA      NA         NA             4\n   2:           Most   Several           NA      NA         NA             4\n   3:           Most   Several           NA      NA         NA             4\n   4:        Several   Several            2       2         27             8\n   5:           None      None            1      NA         NA             8\n  ---                                                                       \n5875:           None      None           NA      NA         NA             5\n5876:           None      None            2       2         22             6\n5877:           None      None            2       2         22             6\n5878:           None      None           NA      NA         NA             6\n5879:           None      None           NA      NA         NA             6\n      SleepTrouble PhysActive PhysActiveDays TVHrsDay CompHrsDay TVHrsDayChild\n            <fctr>     <fctr>          <int>   <fctr>     <fctr>         <int>\n   1:          Yes         No             NA     <NA>       <NA>            NA\n   2:          Yes         No             NA     <NA>       <NA>            NA\n   3:          Yes         No             NA     <NA>       <NA>            NA\n   4:          Yes         No             NA     <NA>       <NA>            NA\n   5:           No        Yes              5     <NA>       <NA>            NA\n  ---                                                                         \n5875:           No        Yes              7     3_hr      0_hrs            NA\n5876:           No         No              5     2_hr  0_to_1_hr            NA\n5877:           No         No             NA     2_hr  0_to_1_hr            NA\n5878:           No         No              1     2_hr       1_hr            NA\n5879:           No         No             NA     2_hr       1_hr            NA\n      CompHrsDayChild Alcohol12PlusYr AlcoholDay AlcoholYear SmokeNow Smoke100\n                <int>          <fctr>      <int>       <int>   <fctr>   <fctr>\n   1:              NA             Yes         NA           0       No      Yes\n   2:              NA             Yes         NA           0       No      Yes\n   3:              NA             Yes         NA           0       No      Yes\n   4:              NA             Yes          2          20      Yes      Yes\n   5:              NA             Yes          3          52     <NA>       No\n  ---                                                                         \n5875:              NA             Yes         NA           0     <NA>       No\n5876:              NA              No          1           5     <NA>       No\n5877:              NA              No          1           5     <NA>       No\n5878:              NA             Yes         NA           0     <NA>       No\n5879:              NA             Yes         NA           0     <NA>       No\n       Smoke100n SmokeAge Marijuana AgeFirstMarij RegularMarij AgeRegMarij\n          <fctr>    <int>    <fctr>         <int>       <fctr>       <int>\n   1:     Smoker       18       Yes            17           No          NA\n   2:     Smoker       18       Yes            17           No          NA\n   3:     Smoker       18       Yes            17           No          NA\n   4:     Smoker       38       Yes            18           No          NA\n   5: Non-Smoker       NA       Yes            13           No          NA\n  ---                                                                     \n5875: Non-Smoker       NA      <NA>            NA         <NA>          NA\n5876: Non-Smoker       NA      <NA>            NA         <NA>          NA\n5877: Non-Smoker       NA      <NA>            NA         <NA>          NA\n5878: Non-Smoker       NA      <NA>            NA         <NA>          NA\n5879: Non-Smoker       NA      <NA>            NA         <NA>          NA\n      HardDrugs SexEver SexAge SexNumPartnLife SexNumPartYear SameSex\n         <fctr>  <fctr>  <int>           <int>          <int>  <fctr>\n   1:       Yes     Yes     16               8              1      No\n   2:       Yes     Yes     16               8              1      No\n   3:       Yes     Yes     16               8              1      No\n   4:       Yes     Yes     12              10              1     Yes\n   5:        No     Yes     13              20              0     Yes\n  ---                                                                \n5875:      <NA>    <NA>     NA              NA             NA    <NA>\n5876:        No     Yes     18               1             NA      No\n5877:        No     Yes     18               1             NA      No\n5878:        No     Yes     19               2             NA      No\n5879:        No     Yes     19               2             NA      No\n      SexOrientation PregnantNow\n              <fctr>      <fctr>\n   1:   Heterosexual        <NA>\n   2:   Heterosexual        <NA>\n   3:   Heterosexual        <NA>\n   4:   Heterosexual        <NA>\n   5:       Bisexual        <NA>\n  ---                           \n5875:           <NA>        <NA>\n5876:           <NA>        <NA>\n5877:           <NA>        <NA>\n5878:           <NA>        <NA>\n5879:           <NA>        <NA>\n\n\n\ndt[gender=='male' & age>=45] # 남성이고 45세 이상\n\n         ID SurveyYr gender   age AgeDecade AgeMonths   race  Race3\n      <int>   <fctr> <fctr> <int>    <fctr>     <int> <fctr> <fctr>\n   1: 51654  2009_10   male    66     60-69       795  White   <NA>\n   2: 51656  2009_10   male    58     50-59       707  White   <NA>\n   3: 51657  2009_10   male    54     50-59       654  White   <NA>\n   4: 51667  2009_10   male    50     50-59       603  White   <NA>\n   5: 51678  2009_10   male    60     60-69       721  White   <NA>\n  ---                                                              \n1839: 71907  2011_12   male    80      <NA>        NA  White  White\n1840: 71907  2011_12   male    80      <NA>        NA  White  White\n1841: 71907  2011_12   male    80      <NA>        NA  White  White\n1842: 71915  2011_12   male    60     60-69        NA  White  White\n1843: 71915  2011_12   male    60     60-69        NA  White  White\n           education MaritalStatus    HHIncome HHIncomeMid Poverty HomeRooms\n              <fctr>        <fctr>      <fctr>       <int>   <num>     <int>\n   1:   Some College       Married 25000-34999       30000    2.20         5\n   2:   College Grad      Divorced  more 99999      100000    5.00        10\n   3: 9 - 11th Grade       Married 65000-74999       70000    2.20         6\n   4:   Some College  NeverMarried 15000-19999       17500    1.24         4\n   5:    High School       Married 15000-19999       17500    1.03         5\n  ---                                                                       \n1839:    High School       Married 55000-64999       60000    4.08         6\n1840:    High School       Married 55000-64999       60000    4.08         6\n1841:    High School       Married 55000-64999       60000    4.08         6\n1842:   College Grad  NeverMarried 65000-74999       70000    5.00         4\n1843:   College Grad  NeverMarried 65000-74999       70000    5.00         4\n      HomeOwn       Work Weight Length HeadCirc Height   BMI BMICatUnder20yrs\n       <fctr>     <fctr>  <num>  <num>    <num>  <num> <num>           <fctr>\n   1:     Own NotWorking   68.0     NA       NA  169.5 23.67             <NA>\n   2:    Rent    Working   78.4     NA       NA  181.9 23.69             <NA>\n   3:    Rent    Working   74.7     NA       NA  169.4 26.03             <NA>\n   4:    Rent    Looking   84.1     NA       NA  177.8 26.60             <NA>\n   5:     Own    Working   74.6     NA       NA  169.9 25.84             <NA>\n  ---                                                                        \n1839:     Own NotWorking   71.5     NA       NA  175.4 23.20             <NA>\n1840:     Own NotWorking   71.5     NA       NA  175.4 23.20             <NA>\n1841:     Own NotWorking   71.5     NA       NA  175.4 23.20             <NA>\n1842:     Own    Working   78.4     NA       NA  168.8 27.50             <NA>\n1843:     Own    Working   78.4     NA       NA  168.8 27.50             <NA>\n           BMI_WHO Pulse BPSysAve BPDiaAve BPSys1 BPDia1 BPSys2 BPDia2 BPSys3\n            <fctr> <int>    <int>    <int>  <int>  <int>  <int>  <int>  <int>\n   1: 18.5_to_24.9    60      111       63    124     64    108     62    114\n   2: 18.5_to_24.9    62      104       74    108     76    104     72    104\n   3: 25.0_to_29.9    76      134       85    136     86    132     88    136\n   4: 25.0_to_29.9    74      142       68    138     66    142     74    142\n   5: 25.0_to_29.9    84      152      100    154     98    150     98    154\n  ---                                                                        \n1839: 18.5_to_24.9    54      148       70    150     72    150     70    146\n1840: 18.5_to_24.9    54      148       70    150     72    150     70    146\n1841: 18.5_to_24.9    54      148       70    150     72    150     70    146\n1842: 25.0_to_29.9    76      147       73    150     72    148     74    146\n1843: 25.0_to_29.9    76      147       73    150     72    148     74    146\n      BPDia3 Testosterone DirectChol TotChol UrineVol1 UrineFlow1 UrineVol2\n       <int>        <num>      <num>   <num>     <int>      <num>     <int>\n   1:     64           NA       0.67    4.99       113      0.489        NA\n   2:     76           NA       0.96    4.24       163         NA        NA\n   3:     82           NA       1.16    6.41       215      0.903        NA\n   4:     62           NA       1.06    5.22        64      0.190        NA\n   5:    102           NA       1.34    6.39       238         NA        NA\n  ---                                                                      \n1839:     70       402.90       1.27    4.37        61      1.052        NA\n1840:     70       402.90       1.27    4.37        61      1.052        NA\n1841:     70       402.90       1.27    4.37        61      1.052        NA\n1842:     72       505.13       0.93    4.94       218      1.253        NA\n1843:     72       505.13       0.93    4.94       218      1.253        NA\n      UrineFlow2 Diabetes DiabetesAge HealthGen DaysPhysHlthBad DaysMentHlthBad\n           <num>   <fctr>       <int>    <fctr>           <int>           <int>\n   1:         NA       No          NA     Vgood              10               0\n   2:         NA       No          NA     Vgood               0               0\n   3:         NA       No          NA      Fair               4               0\n   4:         NA       No          NA      Good               0               0\n   5:         NA       No          NA     Vgood               7               0\n  ---                                                                          \n1839:         NA       No          NA      Good               0               0\n1840:         NA       No          NA      Good               0               0\n1841:         NA       No          NA      Good               0               0\n1842:         NA      Yes          56      Good               0               2\n1843:         NA      Yes          56      Good               0               2\n      LittleInterest Depressed nPregnancies nBabies Age1stBaby SleepHrsNight\n              <fctr>    <fctr>        <int>   <int>      <int>         <int>\n   1:           None      None           NA      NA         NA             7\n   2:           None      None           NA      NA         NA             5\n   3:           None      None           NA      NA         NA             4\n   4:           None      None           NA      NA         NA             7\n   5:           None      None           NA      NA         NA             6\n  ---                                                                       \n1839:           None      None           NA      NA         NA             5\n1840:           None      None           NA      NA         NA             5\n1841:           None      None           NA      NA         NA             5\n1842:           None      None           NA      NA         NA             6\n1843:           None      None           NA      NA         NA             6\n      SleepTrouble PhysActive PhysActiveDays TVHrsDay CompHrsDay TVHrsDayChild\n            <fctr>     <fctr>          <int>   <fctr>     <fctr>         <int>\n   1:           No        Yes              7     <NA>       <NA>            NA\n   2:           No        Yes              5     <NA>       <NA>            NA\n   3:          Yes        Yes              1     <NA>       <NA>            NA\n   4:           No        Yes              7     <NA>       <NA>            NA\n   5:          Yes         No             NA     <NA>       <NA>            NA\n  ---                                                                         \n1839:           No        Yes             NA     3_hr      0_hrs            NA\n1840:           No        Yes              4     3_hr      0_hrs            NA\n1841:           No        Yes              7     3_hr      0_hrs            NA\n1842:           No         No              1     2_hr       1_hr            NA\n1843:           No         No             NA     2_hr       1_hr            NA\n      CompHrsDayChild Alcohol12PlusYr AlcoholDay AlcoholYear SmokeNow Smoke100\n                <int>          <fctr>      <int>       <int>   <fctr>   <fctr>\n   1:              NA             Yes          1         100       No      Yes\n   2:              NA             Yes          2         104     <NA>       No\n   3:              NA             Yes          6         364     <NA>       No\n   4:              NA              No         NA           0     <NA>       No\n   5:              NA             Yes          6          36       No      Yes\n  ---                                                                         \n1839:              NA             Yes         NA           0     <NA>       No\n1840:              NA             Yes         NA           0     <NA>       No\n1841:              NA             Yes         NA           0     <NA>       No\n1842:              NA             Yes         NA           0     <NA>       No\n1843:              NA             Yes         NA           0     <NA>       No\n       Smoke100n SmokeAge Marijuana AgeFirstMarij RegularMarij AgeRegMarij\n          <fctr>    <int>    <fctr>         <int>       <fctr>       <int>\n   1:     Smoker       13      <NA>            NA         <NA>          NA\n   2: Non-Smoker       NA       Yes            19          Yes          20\n   3: Non-Smoker       NA       Yes            15          Yes          15\n   4: Non-Smoker       NA        No            NA           No          NA\n   5:     Smoker       16      <NA>            NA         <NA>          NA\n  ---                                                                     \n1839: Non-Smoker       NA      <NA>            NA         <NA>          NA\n1840: Non-Smoker       NA      <NA>            NA         <NA>          NA\n1841: Non-Smoker       NA      <NA>            NA         <NA>          NA\n1842: Non-Smoker       NA      <NA>            NA         <NA>          NA\n1843: Non-Smoker       NA      <NA>            NA         <NA>          NA\n      HardDrugs SexEver SexAge SexNumPartnLife SexNumPartYear SameSex\n         <fctr>  <fctr>  <int>           <int>          <int>  <fctr>\n   1:        No     Yes     17              15             NA      No\n   2:       Yes     Yes     22               7              1      No\n   3:       Yes     Yes     12             100              1      No\n   4:        No     Yes     NA               9              1      No\n   5:        No     Yes     20               1             NA      No\n  ---                                                                \n1839:      <NA>    <NA>     NA              NA             NA    <NA>\n1840:      <NA>    <NA>     NA              NA             NA    <NA>\n1841:      <NA>    <NA>     NA              NA             NA    <NA>\n1842:        No     Yes     19               2             NA      No\n1843:        No     Yes     19               2             NA      No\n      SexOrientation PregnantNow\n              <fctr>      <fctr>\n   1:           <NA>        <NA>\n   2:   Heterosexual        <NA>\n   3:   Heterosexual        <NA>\n   4:   Heterosexual        <NA>\n   5:           <NA>        <NA>\n  ---                           \n1839:           <NA>        <NA>\n1840:           <NA>        <NA>\n1841:           <NA>        <NA>\n1842:           <NA>        <NA>\n1843:           <NA>        <NA>\n\n\n\ndt[gender=='female' | age>=50] #여성 또는 50세 이상\n\n         ID SurveyYr gender   age AgeDecade AgeMonths   race  Race3\n      <int>   <fctr> <fctr> <int>    <fctr>     <int> <fctr> <fctr>\n   1: 51630  2009_10 female    49     40-49       596  White   <NA>\n   2: 51647  2009_10 female    45     40-49       541  White   <NA>\n   3: 51647  2009_10 female    45     40-49       541  White   <NA>\n   4: 51647  2009_10 female    45     40-49       541  White   <NA>\n   5: 51654  2009_10   male    66     60-69       795  White   <NA>\n  ---                                                              \n6515: 71908  2011_12 female    66     60-69        NA  White  White\n6516: 71908  2011_12 female    66     60-69        NA  White  White\n6517: 71910  2011_12 female     0       0-9         5  White  White\n6518: 71915  2011_12   male    60     60-69        NA  White  White\n6519: 71915  2011_12   male    60     60-69        NA  White  White\n         education MaritalStatus    HHIncome HHIncomeMid Poverty HomeRooms\n            <fctr>        <fctr>      <fctr>       <int>   <num>     <int>\n   1: Some College   LivePartner 35000-44999       40000    1.91         5\n   2: College Grad       Married 75000-99999       87500    5.00         6\n   3: College Grad       Married 75000-99999       87500    5.00         6\n   4: College Grad       Married 75000-99999       87500    5.00         6\n   5: Some College       Married 25000-34999       30000    2.20         5\n  ---                                                                     \n6515: College Grad       Widowed 65000-74999       70000    4.55         8\n6516: College Grad       Widowed 65000-74999       70000    4.55         8\n6517:         <NA>          <NA> 75000-99999       87500    3.37        10\n6518: College Grad  NeverMarried 65000-74999       70000    5.00         4\n6519: College Grad  NeverMarried 65000-74999       70000    5.00         4\n      HomeOwn       Work Weight Length HeadCirc Height   BMI BMICatUnder20yrs\n       <fctr>     <fctr>  <num>  <num>    <num>  <num> <num>           <fctr>\n   1:    Rent NotWorking   86.7     NA       NA  168.4 30.57             <NA>\n   2:     Own    Working   75.7     NA       NA  166.7 27.24             <NA>\n   3:     Own    Working   75.7     NA       NA  166.7 27.24             <NA>\n   4:     Own    Working   75.7     NA       NA  166.7 27.24             <NA>\n   5:     Own NotWorking   68.0     NA       NA  169.5 23.67             <NA>\n  ---                                                                        \n6515:     Own    Working   88.7     NA       NA  159.0 35.10             <NA>\n6516:     Own    Working   88.7     NA       NA  159.0 35.10             <NA>\n6517:     Own       <NA>    6.7   67.6     42.2     NA    NA             <NA>\n6518:     Own    Working   78.4     NA       NA  168.8 27.50             <NA>\n6519:     Own    Working   78.4     NA       NA  168.8 27.50             <NA>\n           BMI_WHO Pulse BPSysAve BPDiaAve BPSys1 BPDia1 BPSys2 BPDia2 BPSys3\n            <fctr> <int>    <int>    <int>  <int>  <int>  <int>  <int>  <int>\n   1:    30.0_plus    86      112       75    118     82    108     74    116\n   2: 25.0_to_29.9    62      118       64    106     62    118     68    118\n   3: 25.0_to_29.9    62      118       64    106     62    118     68    118\n   4: 25.0_to_29.9    62      118       64    106     62    118     68    118\n   5: 18.5_to_24.9    60      111       63    124     64    108     62    114\n  ---                                                                        \n6515:    30.0_plus    76      114       70    110     74    114     68    114\n6516:    30.0_plus    76      114       70    110     74    114     68    114\n6517:         <NA>    NA       NA       NA     NA     NA     NA     NA     NA\n6518: 25.0_to_29.9    76      147       73    150     72    148     74    146\n6519: 25.0_to_29.9    76      147       73    150     72    148     74    146\n      BPDia3 Testosterone DirectChol TotChol UrineVol1 UrineFlow1 UrineVol2\n       <int>        <num>      <num>   <num>     <int>      <num>     <int>\n   1:     76           NA       1.16    6.70        77      0.094        NA\n   2:     60           NA       2.12    5.82       106      1.116        NA\n   3:     60           NA       2.12    5.82       106      1.116        NA\n   4:     60           NA       2.12    5.82       106      1.116        NA\n   5:     64           NA       0.67    4.99       113      0.489        NA\n  ---                                                                      \n6515:     72        26.00       1.86    6.47        29      0.659        94\n6516:     72        26.00       1.86    6.47        29      0.659        94\n6517:     NA           NA         NA      NA        NA         NA        NA\n6518:     72       505.13       0.93    4.94       218      1.253        NA\n6519:     72       505.13       0.93    4.94       218      1.253        NA\n      UrineFlow2 Diabetes DiabetesAge HealthGen DaysPhysHlthBad DaysMentHlthBad\n           <num>   <fctr>       <int>    <fctr>           <int>           <int>\n   1:         NA       No          NA      Good               0              10\n   2:         NA       No          NA     Vgood               0               3\n   3:         NA       No          NA     Vgood               0               3\n   4:         NA       No          NA     Vgood               0               3\n   5:         NA       No          NA     Vgood              10               0\n  ---                                                                          \n6515:      0.627       No          NA Excellent               0               0\n6516:      0.627       No          NA Excellent               0               0\n6517:         NA     <NA>          NA      <NA>              NA              NA\n6518:         NA      Yes          56      Good               0               2\n6519:         NA      Yes          56      Good               0               2\n      LittleInterest Depressed nPregnancies nBabies Age1stBaby SleepHrsNight\n              <fctr>    <fctr>        <int>   <int>      <int>         <int>\n   1:        Several   Several            2       2         27             8\n   2:           None      None            1      NA         NA             8\n   3:           None      None            1      NA         NA             8\n   4:           None      None            1      NA         NA             8\n   5:           None      None           NA      NA         NA             7\n  ---                                                                       \n6515:           None      None            2       2         22             6\n6516:           None      None            2       2         22             6\n6517:           <NA>      <NA>           NA      NA         NA            NA\n6518:           None      None           NA      NA         NA             6\n6519:           None      None           NA      NA         NA             6\n      SleepTrouble PhysActive PhysActiveDays TVHrsDay CompHrsDay TVHrsDayChild\n            <fctr>     <fctr>          <int>   <fctr>     <fctr>         <int>\n   1:          Yes         No             NA     <NA>       <NA>            NA\n   2:           No        Yes              5     <NA>       <NA>            NA\n   3:           No        Yes              5     <NA>       <NA>            NA\n   4:           No        Yes              5     <NA>       <NA>            NA\n   5:           No        Yes              7     <NA>       <NA>            NA\n  ---                                                                         \n6515:           No         No              5     2_hr  0_to_1_hr            NA\n6516:           No         No             NA     2_hr  0_to_1_hr            NA\n6517:         <NA>       <NA>             NA     <NA>       <NA>            NA\n6518:           No         No              1     2_hr       1_hr            NA\n6519:           No         No             NA     2_hr       1_hr            NA\n      CompHrsDayChild Alcohol12PlusYr AlcoholDay AlcoholYear SmokeNow Smoke100\n                <int>          <fctr>      <int>       <int>   <fctr>   <fctr>\n   1:              NA             Yes          2          20      Yes      Yes\n   2:              NA             Yes          3          52     <NA>       No\n   3:              NA             Yes          3          52     <NA>       No\n   4:              NA             Yes          3          52     <NA>       No\n   5:              NA             Yes          1         100       No      Yes\n  ---                                                                         \n6515:              NA              No          1           5     <NA>       No\n6516:              NA              No          1           5     <NA>       No\n6517:              NA            <NA>         NA          NA     <NA>     <NA>\n6518:              NA             Yes         NA           0     <NA>       No\n6519:              NA             Yes         NA           0     <NA>       No\n       Smoke100n SmokeAge Marijuana AgeFirstMarij RegularMarij AgeRegMarij\n          <fctr>    <int>    <fctr>         <int>       <fctr>       <int>\n   1:     Smoker       38       Yes            18           No          NA\n   2: Non-Smoker       NA       Yes            13           No          NA\n   3: Non-Smoker       NA       Yes            13           No          NA\n   4: Non-Smoker       NA       Yes            13           No          NA\n   5:     Smoker       13      <NA>            NA         <NA>          NA\n  ---                                                                     \n6515: Non-Smoker       NA      <NA>            NA         <NA>          NA\n6516: Non-Smoker       NA      <NA>            NA         <NA>          NA\n6517:       <NA>       NA      <NA>            NA         <NA>          NA\n6518: Non-Smoker       NA      <NA>            NA         <NA>          NA\n6519: Non-Smoker       NA      <NA>            NA         <NA>          NA\n      HardDrugs SexEver SexAge SexNumPartnLife SexNumPartYear SameSex\n         <fctr>  <fctr>  <int>           <int>          <int>  <fctr>\n   1:       Yes     Yes     12              10              1     Yes\n   2:        No     Yes     13              20              0     Yes\n   3:        No     Yes     13              20              0     Yes\n   4:        No     Yes     13              20              0     Yes\n   5:        No     Yes     17              15             NA      No\n  ---                                                                \n6515:        No     Yes     18               1             NA      No\n6516:        No     Yes     18               1             NA      No\n6517:      <NA>    <NA>     NA              NA             NA    <NA>\n6518:        No     Yes     19               2             NA      No\n6519:        No     Yes     19               2             NA      No\n      SexOrientation PregnantNow\n              <fctr>      <fctr>\n   1:   Heterosexual        <NA>\n   2:       Bisexual        <NA>\n   3:       Bisexual        <NA>\n   4:       Bisexual        <NA>\n   5:           <NA>        <NA>\n  ---                           \n6515:           <NA>        <NA>\n6516:           <NA>        <NA>\n6517:           <NA>        <NA>\n6518:           <NA>        <NA>\n6519:           <NA>        <NA>\n\n\n이처럼 &나 |를 붙여주면, 여러 조건을 사용하여 원하는 행들을 추출할 수 있습니다.\n\n\n\n\n\n\n행을 다룰 때 data.table과 data.frame의 차이점\n\n\n\ndata.frame과 달리 data.table 문법에서는, 대괄호 안에서 column을 df$var 양식으로 사용하지 않아도 됩니다. 그냥 column의 이름만 사용하면 됩니다.\n또한 data.frame에서는 행 부분을 입력할 때, 꼭 , 를 붙여줘야 했습니다. 그러나 data.table의 경우 행만 filtering 할 때, 굳이 ,을 붙여줄 필요가 없습니다.\n어떤가요? data.table이 훨씬 더 간단하죠? 😃\n\n\n\n\n2) Infix 연산자를 이용한 row filtering\ndata.table에서는 논리 연산자 뿐만 아니라 infix 연산자를 이용하여, 조건을 충족시키는 행을 선택할 수 있습니다. 파이프 연산자 역시 조건을 만족하는 경우인 TRUE 에 해당하는 값들만 선택합니다.\n\n\n\n\n\n\nInfix 연산자란?\n\n\n\ninfix 연산자는 함수 피연산자의 양쪽에 있는 인수에 계산을 적용하는 기능을 제공합니다.\n\n\n\nA %in% B: A가 B 안에 있는지 확인합니다. 이 때 B는 vector가 옵니다. 문자를 확인하는 경우에는 %chin% 을 이용해 더욱 빠르게 계산할 수 있습니다.\n\ndt[race %in% c('Black','White')]\n\n         ID SurveyYr gender   age AgeDecade AgeMonths   race  Race3\n      <int>   <fctr> <fctr> <int>    <fctr>     <int> <fctr> <fctr>\n   1: 51624  2009_10   male    34     30-39       409  White   <NA>\n   2: 51624  2009_10   male    34     30-39       409  White   <NA>\n   3: 51624  2009_10   male    34     30-39       409  White   <NA>\n   4: 51630  2009_10 female    49     40-49       596  White   <NA>\n   5: 51638  2009_10   male     9       0-9       115  White   <NA>\n  ---                                                              \n7565: 71908  2011_12 female    66     60-69        NA  White  White\n7566: 71908  2011_12 female    66     60-69        NA  White  White\n7567: 71910  2011_12 female     0       0-9         5  White  White\n7568: 71915  2011_12   male    60     60-69        NA  White  White\n7569: 71915  2011_12   male    60     60-69        NA  White  White\n         education MaritalStatus    HHIncome HHIncomeMid Poverty HomeRooms\n            <fctr>        <fctr>      <fctr>       <int>   <num>     <int>\n   1:  High School       Married 25000-34999       30000    1.36         6\n   2:  High School       Married 25000-34999       30000    1.36         6\n   3:  High School       Married 25000-34999       30000    1.36         6\n   4: Some College   LivePartner 35000-44999       40000    1.91         5\n   5:         <NA>          <NA> 75000-99999       87500    1.84         6\n  ---                                                                     \n7565: College Grad       Widowed 65000-74999       70000    4.55         8\n7566: College Grad       Widowed 65000-74999       70000    4.55         8\n7567:         <NA>          <NA> 75000-99999       87500    3.37        10\n7568: College Grad  NeverMarried 65000-74999       70000    5.00         4\n7569: College Grad  NeverMarried 65000-74999       70000    5.00         4\n      HomeOwn       Work Weight Length HeadCirc Height   BMI BMICatUnder20yrs\n       <fctr>     <fctr>  <num>  <num>    <num>  <num> <num>           <fctr>\n   1:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   2:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   3:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   4:    Rent NotWorking   86.7     NA       NA  168.4 30.57             <NA>\n   5:    Rent       <NA>   29.8     NA       NA  133.1 16.82             <NA>\n  ---                                                                        \n7565:     Own    Working   88.7     NA       NA  159.0 35.10             <NA>\n7566:     Own    Working   88.7     NA       NA  159.0 35.10             <NA>\n7567:     Own       <NA>    6.7   67.6     42.2     NA    NA             <NA>\n7568:     Own    Working   78.4     NA       NA  168.8 27.50             <NA>\n7569:     Own    Working   78.4     NA       NA  168.8 27.50             <NA>\n           BMI_WHO Pulse BPSysAve BPDiaAve BPSys1 BPDia1 BPSys2 BPDia2 BPSys3\n            <fctr> <int>    <int>    <int>  <int>  <int>  <int>  <int>  <int>\n   1:    30.0_plus    70      113       85    114     88    114     88    112\n   2:    30.0_plus    70      113       85    114     88    114     88    112\n   3:    30.0_plus    70      113       85    114     88    114     88    112\n   4:    30.0_plus    86      112       75    118     82    108     74    116\n   5:    12.0_18.5    82       86       47     84     50     84     50     88\n  ---                                                                        \n7565:    30.0_plus    76      114       70    110     74    114     68    114\n7566:    30.0_plus    76      114       70    110     74    114     68    114\n7567:         <NA>    NA       NA       NA     NA     NA     NA     NA     NA\n7568: 25.0_to_29.9    76      147       73    150     72    148     74    146\n7569: 25.0_to_29.9    76      147       73    150     72    148     74    146\n      BPDia3 Testosterone DirectChol TotChol UrineVol1 UrineFlow1 UrineVol2\n       <int>        <num>      <num>   <num>     <int>      <num>     <int>\n   1:     82           NA       1.29    3.49       352         NA        NA\n   2:     82           NA       1.29    3.49       352         NA        NA\n   3:     82           NA       1.29    3.49       352         NA        NA\n   4:     76           NA       1.16    6.70        77      0.094        NA\n   5:     44           NA       1.34    4.86       123      1.538        NA\n  ---                                                                      \n7565:     72        26.00       1.86    6.47        29      0.659        94\n7566:     72        26.00       1.86    6.47        29      0.659        94\n7567:     NA           NA         NA      NA        NA         NA        NA\n7568:     72       505.13       0.93    4.94       218      1.253        NA\n7569:     72       505.13       0.93    4.94       218      1.253        NA\n      UrineFlow2 Diabetes DiabetesAge HealthGen DaysPhysHlthBad DaysMentHlthBad\n           <num>   <fctr>       <int>    <fctr>           <int>           <int>\n   1:         NA       No          NA      Good               0              15\n   2:         NA       No          NA      Good               0              15\n   3:         NA       No          NA      Good               0              15\n   4:         NA       No          NA      Good               0              10\n   5:         NA       No          NA      <NA>              NA              NA\n  ---                                                                          \n7565:      0.627       No          NA Excellent               0               0\n7566:      0.627       No          NA Excellent               0               0\n7567:         NA     <NA>          NA      <NA>              NA              NA\n7568:         NA      Yes          56      Good               0               2\n7569:         NA      Yes          56      Good               0               2\n      LittleInterest Depressed nPregnancies nBabies Age1stBaby SleepHrsNight\n              <fctr>    <fctr>        <int>   <int>      <int>         <int>\n   1:           Most   Several           NA      NA         NA             4\n   2:           Most   Several           NA      NA         NA             4\n   3:           Most   Several           NA      NA         NA             4\n   4:        Several   Several            2       2         27             8\n   5:           <NA>      <NA>           NA      NA         NA            NA\n  ---                                                                       \n7565:           None      None            2       2         22             6\n7566:           None      None            2       2         22             6\n7567:           <NA>      <NA>           NA      NA         NA            NA\n7568:           None      None           NA      NA         NA             6\n7569:           None      None           NA      NA         NA             6\n      SleepTrouble PhysActive PhysActiveDays TVHrsDay CompHrsDay TVHrsDayChild\n            <fctr>     <fctr>          <int>   <fctr>     <fctr>         <int>\n   1:          Yes         No             NA     <NA>       <NA>            NA\n   2:          Yes         No             NA     <NA>       <NA>            NA\n   3:          Yes         No             NA     <NA>       <NA>            NA\n   4:          Yes         No             NA     <NA>       <NA>            NA\n   5:         <NA>       <NA>             NA     <NA>       <NA>             5\n  ---                                                                         \n7565:           No         No              5     2_hr  0_to_1_hr            NA\n7566:           No         No             NA     2_hr  0_to_1_hr            NA\n7567:         <NA>       <NA>             NA     <NA>       <NA>            NA\n7568:           No         No              1     2_hr       1_hr            NA\n7569:           No         No             NA     2_hr       1_hr            NA\n      CompHrsDayChild Alcohol12PlusYr AlcoholDay AlcoholYear SmokeNow Smoke100\n                <int>          <fctr>      <int>       <int>   <fctr>   <fctr>\n   1:              NA             Yes         NA           0       No      Yes\n   2:              NA             Yes         NA           0       No      Yes\n   3:              NA             Yes         NA           0       No      Yes\n   4:              NA             Yes          2          20      Yes      Yes\n   5:               0            <NA>         NA          NA     <NA>     <NA>\n  ---                                                                         \n7565:              NA              No          1           5     <NA>       No\n7566:              NA              No          1           5     <NA>       No\n7567:              NA            <NA>         NA          NA     <NA>     <NA>\n7568:              NA             Yes         NA           0     <NA>       No\n7569:              NA             Yes         NA           0     <NA>       No\n       Smoke100n SmokeAge Marijuana AgeFirstMarij RegularMarij AgeRegMarij\n          <fctr>    <int>    <fctr>         <int>       <fctr>       <int>\n   1:     Smoker       18       Yes            17           No          NA\n   2:     Smoker       18       Yes            17           No          NA\n   3:     Smoker       18       Yes            17           No          NA\n   4:     Smoker       38       Yes            18           No          NA\n   5:       <NA>       NA      <NA>            NA         <NA>          NA\n  ---                                                                     \n7565: Non-Smoker       NA      <NA>            NA         <NA>          NA\n7566: Non-Smoker       NA      <NA>            NA         <NA>          NA\n7567:       <NA>       NA      <NA>            NA         <NA>          NA\n7568: Non-Smoker       NA      <NA>            NA         <NA>          NA\n7569: Non-Smoker       NA      <NA>            NA         <NA>          NA\n      HardDrugs SexEver SexAge SexNumPartnLife SexNumPartYear SameSex\n         <fctr>  <fctr>  <int>           <int>          <int>  <fctr>\n   1:       Yes     Yes     16               8              1      No\n   2:       Yes     Yes     16               8              1      No\n   3:       Yes     Yes     16               8              1      No\n   4:       Yes     Yes     12              10              1     Yes\n   5:      <NA>    <NA>     NA              NA             NA    <NA>\n  ---                                                                \n7565:        No     Yes     18               1             NA      No\n7566:        No     Yes     18               1             NA      No\n7567:      <NA>    <NA>     NA              NA             NA    <NA>\n7568:        No     Yes     19               2             NA      No\n7569:        No     Yes     19               2             NA      No\n      SexOrientation PregnantNow\n              <fctr>      <fctr>\n   1:   Heterosexual        <NA>\n   2:   Heterosexual        <NA>\n   3:   Heterosexual        <NA>\n   4:   Heterosexual        <NA>\n   5:           <NA>        <NA>\n  ---                           \n7565:           <NA>        <NA>\n7566:           <NA>        <NA>\n7567:           <NA>        <NA>\n7568:           <NA>        <NA>\n7569:           <NA>        <NA>\n\n\nA %like% B: A가 B와 비슷한지 확인합니다. 이 때 B에는 보통 문자열(character)이 옵니다.\n\ndt[MaritalStatus %like% 'Married']\n\n         ID SurveyYr gender   age AgeDecade AgeMonths    race   Race3\n      <int>   <fctr> <fctr> <int>    <fctr>     <int>  <fctr>  <fctr>\n   1: 51624  2009_10   male    34     30-39       409   White    <NA>\n   2: 51624  2009_10   male    34     30-39       409   White    <NA>\n   3: 51624  2009_10   male    34     30-39       409   White    <NA>\n   4: 51647  2009_10 female    45     40-49       541   White    <NA>\n   5: 51647  2009_10 female    45     40-49       541   White    <NA>\n  ---                                                                \n5321: 71909  2011_12   male    28     20-29        NA Mexican Mexican\n5322: 71909  2011_12   male    28     20-29        NA Mexican Mexican\n5323: 71911  2011_12   male    27     20-29        NA Mexican Mexican\n5324: 71915  2011_12   male    60     60-69        NA   White   White\n5325: 71915  2011_12   male    60     60-69        NA   White   White\n           education MaritalStatus    HHIncome HHIncomeMid Poverty HomeRooms\n              <fctr>        <fctr>      <fctr>       <int>   <num>     <int>\n   1:    High School       Married 25000-34999       30000    1.36         6\n   2:    High School       Married 25000-34999       30000    1.36         6\n   3:    High School       Married 25000-34999       30000    1.36         6\n   4:   College Grad       Married 75000-99999       87500    5.00         6\n   5:   College Grad       Married 75000-99999       87500    5.00         6\n  ---                                                                       \n5321: 9 - 11th Grade  NeverMarried   5000-9999        7500    0.46         3\n5322: 9 - 11th Grade  NeverMarried   5000-9999        7500    0.46         3\n5323:   College Grad       Married 75000-99999       87500    3.25        10\n5324:   College Grad  NeverMarried 65000-74999       70000    5.00         4\n5325:   College Grad  NeverMarried 65000-74999       70000    5.00         4\n      HomeOwn       Work Weight Length HeadCirc Height   BMI BMICatUnder20yrs\n       <fctr>     <fctr>  <num>  <num>    <num>  <num> <num>           <fctr>\n   1:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   2:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   3:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   4:     Own    Working   75.7     NA       NA  166.7 27.24             <NA>\n   5:     Own    Working   75.7     NA       NA  166.7 27.24             <NA>\n  ---                                                                        \n5321:    Rent    Working   92.3     NA       NA  177.3 29.40             <NA>\n5322:    Rent    Working   92.3     NA       NA  177.3 29.40             <NA>\n5323:     Own    Working   96.7     NA       NA  175.8 31.30             <NA>\n5324:     Own    Working   78.4     NA       NA  168.8 27.50             <NA>\n5325:     Own    Working   78.4     NA       NA  168.8 27.50             <NA>\n           BMI_WHO Pulse BPSysAve BPDiaAve BPSys1 BPDia1 BPSys2 BPDia2 BPSys3\n            <fctr> <int>    <int>    <int>  <int>  <int>  <int>  <int>  <int>\n   1:    30.0_plus    70      113       85    114     88    114     88    112\n   2:    30.0_plus    70      113       85    114     88    114     88    112\n   3:    30.0_plus    70      113       85    114     88    114     88    112\n   4: 25.0_to_29.9    62      118       64    106     62    118     68    118\n   5: 25.0_to_29.9    62      118       64    106     62    118     68    118\n  ---                                                                        \n5321: 25.0_to_29.9    68      124       65    124     62    126     64    122\n5322: 25.0_to_29.9    68      124       65    124     62    126     64    122\n5323:    30.0_plus    74      133       74    122     76    132     82    134\n5324: 25.0_to_29.9    76      147       73    150     72    148     74    146\n5325: 25.0_to_29.9    76      147       73    150     72    148     74    146\n      BPDia3 Testosterone DirectChol TotChol UrineVol1 UrineFlow1 UrineVol2\n       <int>        <num>      <num>   <num>     <int>      <num>     <int>\n   1:     82           NA       1.29    3.49       352         NA        NA\n   2:     82           NA       1.29    3.49       352         NA        NA\n   3:     82           NA       1.29    3.49       352         NA        NA\n   4:     60           NA       2.12    5.82       106      1.116        NA\n   5:     60           NA       2.12    5.82       106      1.116        NA\n  ---                                                                      \n5321:     66       490.43       1.22    3.90        97      0.942        NA\n5322:     66       490.43       1.22    3.90        97      0.942        NA\n5323:     66       509.00       1.06    5.72        63      0.600        NA\n5324:     72       505.13       0.93    4.94       218      1.253        NA\n5325:     72       505.13       0.93    4.94       218      1.253        NA\n      UrineFlow2 Diabetes DiabetesAge HealthGen DaysPhysHlthBad DaysMentHlthBad\n           <num>   <fctr>       <int>    <fctr>           <int>           <int>\n   1:         NA       No          NA      Good               0              15\n   2:         NA       No          NA      Good               0              15\n   3:         NA       No          NA      Good               0              15\n   4:         NA       No          NA     Vgood               0               3\n   5:         NA       No          NA     Vgood               0               3\n  ---                                                                          \n5321:         NA       No          NA      <NA>              NA              NA\n5322:         NA       No          NA      <NA>              NA              NA\n5323:         NA       No          NA      Good               0               2\n5324:         NA      Yes          56      Good               0               2\n5325:         NA      Yes          56      Good               0               2\n      LittleInterest Depressed nPregnancies nBabies Age1stBaby SleepHrsNight\n              <fctr>    <fctr>        <int>   <int>      <int>         <int>\n   1:           Most   Several           NA      NA         NA             4\n   2:           Most   Several           NA      NA         NA             4\n   3:           Most   Several           NA      NA         NA             4\n   4:           None      None            1      NA         NA             8\n   5:           None      None            1      NA         NA             8\n  ---                                                                       \n5321:           <NA>      <NA>           NA      NA         NA             6\n5322:           <NA>      <NA>           NA      NA         NA             6\n5323:           None      None           NA      NA         NA             6\n5324:           None      None           NA      NA         NA             6\n5325:           None      None           NA      NA         NA             6\n      SleepTrouble PhysActive PhysActiveDays TVHrsDay CompHrsDay TVHrsDayChild\n            <fctr>     <fctr>          <int>   <fctr>     <fctr>         <int>\n   1:          Yes         No             NA     <NA>       <NA>            NA\n   2:          Yes         No             NA     <NA>       <NA>            NA\n   3:          Yes         No             NA     <NA>       <NA>            NA\n   4:           No        Yes              5     <NA>       <NA>            NA\n   5:           No        Yes              5     <NA>       <NA>            NA\n  ---                                                                         \n5321:           No        Yes             NA     1_hr       2_hr            NA\n5322:           No        Yes             NA     1_hr       2_hr            NA\n5323:           No         No              3     1_hr  0_to_1_hr            NA\n5324:           No         No              1     2_hr       1_hr            NA\n5325:           No         No             NA     2_hr       1_hr            NA\n      CompHrsDayChild Alcohol12PlusYr AlcoholDay AlcoholYear SmokeNow Smoke100\n                <int>          <fctr>      <int>       <int>   <fctr>   <fctr>\n   1:              NA             Yes         NA           0       No      Yes\n   2:              NA             Yes         NA           0       No      Yes\n   3:              NA             Yes         NA           0       No      Yes\n   4:              NA             Yes          3          52     <NA>       No\n   5:              NA             Yes          3          52     <NA>       No\n  ---                                                                         \n5321:              NA            <NA>         NA          NA      Yes      Yes\n5322:              NA            <NA>         NA          NA      Yes      Yes\n5323:              NA             Yes          5           4     <NA>       No\n5324:              NA             Yes         NA           0     <NA>       No\n5325:              NA             Yes         NA           0     <NA>       No\n       Smoke100n SmokeAge Marijuana AgeFirstMarij RegularMarij AgeRegMarij\n          <fctr>    <int>    <fctr>         <int>       <fctr>       <int>\n   1:     Smoker       18       Yes            17           No          NA\n   2:     Smoker       18       Yes            17           No          NA\n   3:     Smoker       18       Yes            17           No          NA\n   4: Non-Smoker       NA       Yes            13           No          NA\n   5: Non-Smoker       NA       Yes            13           No          NA\n  ---                                                                     \n5321:     Smoker       18      <NA>            NA         <NA>          NA\n5322:     Smoker       18      <NA>            NA         <NA>          NA\n5323: Non-Smoker       NA       Yes            22           No          NA\n5324: Non-Smoker       NA      <NA>            NA         <NA>          NA\n5325: Non-Smoker       NA      <NA>            NA         <NA>          NA\n      HardDrugs SexEver SexAge SexNumPartnLife SexNumPartYear SameSex\n         <fctr>  <fctr>  <int>           <int>          <int>  <fctr>\n   1:       Yes     Yes     16               8              1      No\n   2:       Yes     Yes     16               8              1      No\n   3:       Yes     Yes     16               8              1      No\n   4:        No     Yes     13              20              0     Yes\n   5:        No     Yes     13              20              0     Yes\n  ---                                                                \n5321:      <NA>    <NA>     NA              NA             NA    <NA>\n5322:      <NA>    <NA>     NA              NA             NA    <NA>\n5323:        No     Yes     21               1              1      No\n5324:        No     Yes     19               2             NA      No\n5325:        No     Yes     19               2             NA      No\n      SexOrientation PregnantNow\n              <fctr>      <fctr>\n   1:   Heterosexual        <NA>\n   2:   Heterosexual        <NA>\n   3:   Heterosexual        <NA>\n   4:       Bisexual        <NA>\n   5:       Bisexual        <NA>\n  ---                           \n5321:           <NA>        <NA>\n5322:           <NA>        <NA>\n5323:   Heterosexual        <NA>\n5324:           <NA>        <NA>\n5325:           <NA>        <NA>\n\n\nA %between% B: A가 B 사이에 있는지 확인합니다. 이 때 B는 c(0,10)과 같은 범위로 지정합니다.\n\ndt[BMI %between% c(20,25)]\n\n         ID SurveyYr gender   age AgeDecade AgeMonths   race  Race3\n      <int>   <fctr> <fctr> <int>    <fctr>     <int> <fctr> <fctr>\n   1: 51646  2009_10   male     8       0-9       101  White   <NA>\n   2: 51654  2009_10   male    66     60-69       795  White   <NA>\n   3: 51656  2009_10   male    58     50-59       707  White   <NA>\n   4: 51679  2009_10   male    16     10-19       194  Other   <NA>\n   5: 51691  2009_10 female    57     50-59       694  White   <NA>\n  ---                                                              \n2493: 71857  2011_12   male    39     30-39        NA  White  White\n2494: 71879  2011_12   male    24     20-29        NA  Black  Black\n2495: 71907  2011_12   male    80      <NA>        NA  White  White\n2496: 71907  2011_12   male    80      <NA>        NA  White  White\n2497: 71907  2011_12   male    80      <NA>        NA  White  White\n         education MaritalStatus    HHIncome HHIncomeMid Poverty HomeRooms\n            <fctr>        <fctr>      <fctr>       <int>   <num>     <int>\n   1:         <NA>          <NA> 55000-64999       60000    2.33         7\n   2: Some College       Married 25000-34999       30000    2.20         5\n   3: College Grad      Divorced  more 99999      100000    5.00        10\n   4:         <NA>          <NA>        <NA>          NA      NA         7\n   5:  High School       Married        <NA>          NA      NA         9\n  ---                                                                     \n2493: College Grad       Married  more 99999      100000    5.00         9\n2494: Some College  NeverMarried   5000-9999        7500    0.51         1\n2495:  High School       Married 55000-64999       60000    4.08         6\n2496:  High School       Married 55000-64999       60000    4.08         6\n2497:  High School       Married 55000-64999       60000    4.08         6\n      HomeOwn       Work Weight Length HeadCirc Height   BMI BMICatUnder20yrs\n       <fctr>     <fctr>  <num>  <num>    <num>  <num> <num>           <fctr>\n   1:     Own       <NA>   35.2     NA       NA  130.6 20.64             <NA>\n   2:     Own NotWorking   68.0     NA       NA  169.5 23.67             <NA>\n   3:    Rent    Working   78.4     NA       NA  181.9 23.69             <NA>\n   4:     Own NotWorking   73.2     NA       NA  172.0 24.74             <NA>\n   5:     Own    Working   51.0     NA       NA  157.1 20.66             <NA>\n  ---                                                                        \n2493:     Own    Working   73.4     NA       NA  175.7 23.80             <NA>\n2494:    Rent NotWorking   76.0     NA       NA  184.1 22.40             <NA>\n2495:     Own NotWorking   71.5     NA       NA  175.4 23.20             <NA>\n2496:     Own NotWorking   71.5     NA       NA  175.4 23.20             <NA>\n2497:     Own NotWorking   71.5     NA       NA  175.4 23.20             <NA>\n           BMI_WHO Pulse BPSysAve BPDiaAve BPSys1 BPDia1 BPSys2 BPDia2 BPSys3\n            <fctr> <int>    <int>    <int>  <int>  <int>  <int>  <int>  <int>\n   1: 18.5_to_24.9    72      107       37    114     46    108     36    106\n   2: 18.5_to_24.9    60      111       63    124     64    108     62    114\n   3: 18.5_to_24.9    62      104       74    108     76    104     72    104\n   4: 18.5_to_24.9    76      126       72    132     74    126     68    126\n   5: 18.5_to_24.9    70      122       89    122     82    128     88    116\n  ---                                                                        \n2493: 18.5_to_24.9    70      118       81    120     80    118     80    118\n2494: 18.5_to_24.9    88      129       61    122     62    126     60    132\n2495: 18.5_to_24.9    54      148       70    150     72    150     70    146\n2496: 18.5_to_24.9    54      148       70    150     72    150     70    146\n2497: 18.5_to_24.9    54      148       70    150     72    150     70    146\n      BPDia3 Testosterone DirectChol TotChol UrineVol1 UrineFlow1 UrineVol2\n       <int>        <num>      <num>   <num>     <int>      <num>     <int>\n   1:     38           NA       1.55    4.09       238      1.322        NA\n   2:     64           NA       0.67    4.99       113      0.489        NA\n   3:     76           NA       0.96    4.24       163         NA        NA\n   4:     76           NA       1.14    3.00       345      1.742        NA\n   5:     90           NA       1.53    5.04       133      2.293        NA\n  ---                                                                      \n2493:     82       360.15       1.50    4.19        25      0.676        82\n2494:     62       485.69       1.68    5.51        74      0.679        NA\n2495:     70       402.90       1.27    4.37        61      1.052        NA\n2496:     70       402.90       1.27    4.37        61      1.052        NA\n2497:     70       402.90       1.27    4.37        61      1.052        NA\n      UrineFlow2 Diabetes DiabetesAge HealthGen DaysPhysHlthBad DaysMentHlthBad\n           <num>   <fctr>       <int>    <fctr>           <int>           <int>\n   1:         NA       No          NA      <NA>              NA              NA\n   2:         NA       No          NA     Vgood              10               0\n   3:         NA       No          NA     Vgood               0               0\n   4:         NA       No          NA      Fair               0              20\n   5:         NA       No          NA Excellent               0               0\n  ---                                                                          \n2493:       0.55       No          NA Excellent               0               5\n2494:         NA       No          NA      <NA>              NA              NA\n2495:         NA       No          NA      Good               0               0\n2496:         NA       No          NA      Good               0               0\n2497:         NA       No          NA      Good               0               0\n      LittleInterest Depressed nPregnancies nBabies Age1stBaby SleepHrsNight\n              <fctr>    <fctr>        <int>   <int>      <int>         <int>\n   1:           <NA>      <NA>           NA      NA         NA            NA\n   2:           None      None           NA      NA         NA             7\n   3:           None      None           NA      NA         NA             5\n   4:           <NA>      <NA>           NA      NA         NA             6\n   5:           None      None            2       2         32             8\n  ---                                                                       \n2493:           None      None           NA      NA         NA             7\n2494:           <NA>      <NA>           NA      NA         NA             8\n2495:           None      None           NA      NA         NA             5\n2496:           None      None           NA      NA         NA             5\n2497:           None      None           NA      NA         NA             5\n      SleepTrouble PhysActive PhysActiveDays  TVHrsDay CompHrsDay TVHrsDayChild\n            <fctr>     <fctr>          <int>    <fctr>     <fctr>         <int>\n   1:         <NA>       <NA>             NA      <NA>       <NA>             1\n   2:           No        Yes              7      <NA>       <NA>            NA\n   3:           No        Yes              5      <NA>       <NA>            NA\n   4:           No        Yes              3      <NA>       <NA>            NA\n   5:           No        Yes              3      <NA>       <NA>            NA\n  ---                                                                          \n2493:           No        Yes             NA More_4_hr  0_to_1_hr            NA\n2494:           No         No             NA More_4_hr       4_hr            NA\n2495:           No        Yes             NA      3_hr      0_hrs            NA\n2496:           No        Yes              4      3_hr      0_hrs            NA\n2497:           No        Yes              7      3_hr      0_hrs            NA\n      CompHrsDayChild Alcohol12PlusYr AlcoholDay AlcoholYear SmokeNow Smoke100\n                <int>          <fctr>      <int>       <int>   <fctr>   <fctr>\n   1:               6            <NA>         NA          NA     <NA>     <NA>\n   2:              NA             Yes          1         100       No      Yes\n   3:              NA             Yes          2         104     <NA>       No\n   4:              NA            <NA>         NA          NA     <NA>     <NA>\n   5:              NA             Yes          1         312       No      Yes\n  ---                                                                         \n2493:              NA             Yes          2          52     <NA>       No\n2494:              NA            <NA>         NA          NA     <NA>       No\n2495:              NA             Yes         NA           0     <NA>       No\n2496:              NA             Yes         NA           0     <NA>       No\n2497:              NA             Yes         NA           0     <NA>       No\n       Smoke100n SmokeAge Marijuana AgeFirstMarij RegularMarij AgeRegMarij\n          <fctr>    <int>    <fctr>         <int>       <fctr>       <int>\n   1:       <NA>       NA      <NA>            NA         <NA>          NA\n   2:     Smoker       13      <NA>            NA         <NA>          NA\n   3: Non-Smoker       NA       Yes            19          Yes          20\n   4:       <NA>       NA      <NA>            NA         <NA>          NA\n   5:     Smoker       18       Yes            18           No          NA\n  ---                                                                     \n2493: Non-Smoker       NA       Yes            19           No          NA\n2494: Non-Smoker       NA      <NA>            NA         <NA>          NA\n2495: Non-Smoker       NA      <NA>            NA         <NA>          NA\n2496: Non-Smoker       NA      <NA>            NA         <NA>          NA\n2497: Non-Smoker       NA      <NA>            NA         <NA>          NA\n      HardDrugs SexEver SexAge SexNumPartnLife SexNumPartYear SameSex\n         <fctr>  <fctr>  <int>           <int>          <int>  <fctr>\n   1:      <NA>    <NA>     NA              NA             NA    <NA>\n   2:        No     Yes     17              15             NA      No\n   3:       Yes     Yes     22               7              1      No\n   4:      <NA>    <NA>     NA              NA             NA    <NA>\n   5:        No     Yes     18               5              1      No\n  ---                                                                \n2493:        No     Yes     17               5              1      No\n2494:      <NA>    <NA>     NA              NA             NA    <NA>\n2495:      <NA>    <NA>     NA              NA             NA    <NA>\n2496:      <NA>    <NA>     NA              NA             NA    <NA>\n2497:      <NA>    <NA>     NA              NA             NA    <NA>\n      SexOrientation PregnantNow\n              <fctr>      <fctr>\n   1:           <NA>        <NA>\n   2:           <NA>        <NA>\n   3:   Heterosexual        <NA>\n   4:           <NA>        <NA>\n   5:   Heterosexual        <NA>\n  ---                           \n2493:   Heterosexual        <NA>\n2494:           <NA>        <NA>\n2495:           <NA>        <NA>\n2496:           <NA>        <NA>\n2497:           <NA>        <NA>\n\n\n\n\n\n\n\n\n\n파이프 연산자 대신 함수 이용하기\n\n\n\n위에서 소개해드린 %%을 이용한 파이프 연산자 말고도 data.table 패키지 내의 함수를 이용할 수도 있습니다.\n%between%은 between()\n%like% 는 like()\n\ndt[like(race,'ite')]\n\n         ID SurveyYr gender   age AgeDecade AgeMonths   race  Race3\n      <int>   <fctr> <fctr> <int>    <fctr>     <int> <fctr> <fctr>\n   1: 51624  2009_10   male    34     30-39       409  White   <NA>\n   2: 51624  2009_10   male    34     30-39       409  White   <NA>\n   3: 51624  2009_10   male    34     30-39       409  White   <NA>\n   4: 51630  2009_10 female    49     40-49       596  White   <NA>\n   5: 51638  2009_10   male     9       0-9       115  White   <NA>\n  ---                                                              \n6368: 71908  2011_12 female    66     60-69        NA  White  White\n6369: 71908  2011_12 female    66     60-69        NA  White  White\n6370: 71910  2011_12 female     0       0-9         5  White  White\n6371: 71915  2011_12   male    60     60-69        NA  White  White\n6372: 71915  2011_12   male    60     60-69        NA  White  White\n         education MaritalStatus    HHIncome HHIncomeMid Poverty HomeRooms\n            <fctr>        <fctr>      <fctr>       <int>   <num>     <int>\n   1:  High School       Married 25000-34999       30000    1.36         6\n   2:  High School       Married 25000-34999       30000    1.36         6\n   3:  High School       Married 25000-34999       30000    1.36         6\n   4: Some College   LivePartner 35000-44999       40000    1.91         5\n   5:         <NA>          <NA> 75000-99999       87500    1.84         6\n  ---                                                                     \n6368: College Grad       Widowed 65000-74999       70000    4.55         8\n6369: College Grad       Widowed 65000-74999       70000    4.55         8\n6370:         <NA>          <NA> 75000-99999       87500    3.37        10\n6371: College Grad  NeverMarried 65000-74999       70000    5.00         4\n6372: College Grad  NeverMarried 65000-74999       70000    5.00         4\n      HomeOwn       Work Weight Length HeadCirc Height   BMI BMICatUnder20yrs\n       <fctr>     <fctr>  <num>  <num>    <num>  <num> <num>           <fctr>\n   1:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   2:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   3:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   4:    Rent NotWorking   86.7     NA       NA  168.4 30.57             <NA>\n   5:    Rent       <NA>   29.8     NA       NA  133.1 16.82             <NA>\n  ---                                                                        \n6368:     Own    Working   88.7     NA       NA  159.0 35.10             <NA>\n6369:     Own    Working   88.7     NA       NA  159.0 35.10             <NA>\n6370:     Own       <NA>    6.7   67.6     42.2     NA    NA             <NA>\n6371:     Own    Working   78.4     NA       NA  168.8 27.50             <NA>\n6372:     Own    Working   78.4     NA       NA  168.8 27.50             <NA>\n           BMI_WHO Pulse BPSysAve BPDiaAve BPSys1 BPDia1 BPSys2 BPDia2 BPSys3\n            <fctr> <int>    <int>    <int>  <int>  <int>  <int>  <int>  <int>\n   1:    30.0_plus    70      113       85    114     88    114     88    112\n   2:    30.0_plus    70      113       85    114     88    114     88    112\n   3:    30.0_plus    70      113       85    114     88    114     88    112\n   4:    30.0_plus    86      112       75    118     82    108     74    116\n   5:    12.0_18.5    82       86       47     84     50     84     50     88\n  ---                                                                        \n6368:    30.0_plus    76      114       70    110     74    114     68    114\n6369:    30.0_plus    76      114       70    110     74    114     68    114\n6370:         <NA>    NA       NA       NA     NA     NA     NA     NA     NA\n6371: 25.0_to_29.9    76      147       73    150     72    148     74    146\n6372: 25.0_to_29.9    76      147       73    150     72    148     74    146\n      BPDia3 Testosterone DirectChol TotChol UrineVol1 UrineFlow1 UrineVol2\n       <int>        <num>      <num>   <num>     <int>      <num>     <int>\n   1:     82           NA       1.29    3.49       352         NA        NA\n   2:     82           NA       1.29    3.49       352         NA        NA\n   3:     82           NA       1.29    3.49       352         NA        NA\n   4:     76           NA       1.16    6.70        77      0.094        NA\n   5:     44           NA       1.34    4.86       123      1.538        NA\n  ---                                                                      \n6368:     72        26.00       1.86    6.47        29      0.659        94\n6369:     72        26.00       1.86    6.47        29      0.659        94\n6370:     NA           NA         NA      NA        NA         NA        NA\n6371:     72       505.13       0.93    4.94       218      1.253        NA\n6372:     72       505.13       0.93    4.94       218      1.253        NA\n      UrineFlow2 Diabetes DiabetesAge HealthGen DaysPhysHlthBad DaysMentHlthBad\n           <num>   <fctr>       <int>    <fctr>           <int>           <int>\n   1:         NA       No          NA      Good               0              15\n   2:         NA       No          NA      Good               0              15\n   3:         NA       No          NA      Good               0              15\n   4:         NA       No          NA      Good               0              10\n   5:         NA       No          NA      <NA>              NA              NA\n  ---                                                                          \n6368:      0.627       No          NA Excellent               0               0\n6369:      0.627       No          NA Excellent               0               0\n6370:         NA     <NA>          NA      <NA>              NA              NA\n6371:         NA      Yes          56      Good               0               2\n6372:         NA      Yes          56      Good               0               2\n      LittleInterest Depressed nPregnancies nBabies Age1stBaby SleepHrsNight\n              <fctr>    <fctr>        <int>   <int>      <int>         <int>\n   1:           Most   Several           NA      NA         NA             4\n   2:           Most   Several           NA      NA         NA             4\n   3:           Most   Several           NA      NA         NA             4\n   4:        Several   Several            2       2         27             8\n   5:           <NA>      <NA>           NA      NA         NA            NA\n  ---                                                                       \n6368:           None      None            2       2         22             6\n6369:           None      None            2       2         22             6\n6370:           <NA>      <NA>           NA      NA         NA            NA\n6371:           None      None           NA      NA         NA             6\n6372:           None      None           NA      NA         NA             6\n      SleepTrouble PhysActive PhysActiveDays TVHrsDay CompHrsDay TVHrsDayChild\n            <fctr>     <fctr>          <int>   <fctr>     <fctr>         <int>\n   1:          Yes         No             NA     <NA>       <NA>            NA\n   2:          Yes         No             NA     <NA>       <NA>            NA\n   3:          Yes         No             NA     <NA>       <NA>            NA\n   4:          Yes         No             NA     <NA>       <NA>            NA\n   5:         <NA>       <NA>             NA     <NA>       <NA>             5\n  ---                                                                         \n6368:           No         No              5     2_hr  0_to_1_hr            NA\n6369:           No         No             NA     2_hr  0_to_1_hr            NA\n6370:         <NA>       <NA>             NA     <NA>       <NA>            NA\n6371:           No         No              1     2_hr       1_hr            NA\n6372:           No         No             NA     2_hr       1_hr            NA\n      CompHrsDayChild Alcohol12PlusYr AlcoholDay AlcoholYear SmokeNow Smoke100\n                <int>          <fctr>      <int>       <int>   <fctr>   <fctr>\n   1:              NA             Yes         NA           0       No      Yes\n   2:              NA             Yes         NA           0       No      Yes\n   3:              NA             Yes         NA           0       No      Yes\n   4:              NA             Yes          2          20      Yes      Yes\n   5:               0            <NA>         NA          NA     <NA>     <NA>\n  ---                                                                         \n6368:              NA              No          1           5     <NA>       No\n6369:              NA              No          1           5     <NA>       No\n6370:              NA            <NA>         NA          NA     <NA>     <NA>\n6371:              NA             Yes         NA           0     <NA>       No\n6372:              NA             Yes         NA           0     <NA>       No\n       Smoke100n SmokeAge Marijuana AgeFirstMarij RegularMarij AgeRegMarij\n          <fctr>    <int>    <fctr>         <int>       <fctr>       <int>\n   1:     Smoker       18       Yes            17           No          NA\n   2:     Smoker       18       Yes            17           No          NA\n   3:     Smoker       18       Yes            17           No          NA\n   4:     Smoker       38       Yes            18           No          NA\n   5:       <NA>       NA      <NA>            NA         <NA>          NA\n  ---                                                                     \n6368: Non-Smoker       NA      <NA>            NA         <NA>          NA\n6369: Non-Smoker       NA      <NA>            NA         <NA>          NA\n6370:       <NA>       NA      <NA>            NA         <NA>          NA\n6371: Non-Smoker       NA      <NA>            NA         <NA>          NA\n6372: Non-Smoker       NA      <NA>            NA         <NA>          NA\n      HardDrugs SexEver SexAge SexNumPartnLife SexNumPartYear SameSex\n         <fctr>  <fctr>  <int>           <int>          <int>  <fctr>\n   1:       Yes     Yes     16               8              1      No\n   2:       Yes     Yes     16               8              1      No\n   3:       Yes     Yes     16               8              1      No\n   4:       Yes     Yes     12              10              1     Yes\n   5:      <NA>    <NA>     NA              NA             NA    <NA>\n  ---                                                                \n6368:        No     Yes     18               1             NA      No\n6369:        No     Yes     18               1             NA      No\n6370:      <NA>    <NA>     NA              NA             NA    <NA>\n6371:        No     Yes     19               2             NA      No\n6372:        No     Yes     19               2             NA      No\n      SexOrientation PregnantNow\n              <fctr>      <fctr>\n   1:   Heterosexual        <NA>\n   2:   Heterosexual        <NA>\n   3:   Heterosexual        <NA>\n   4:   Heterosexual        <NA>\n   5:           <NA>        <NA>\n  ---                           \n6368:           <NA>        <NA>\n6369:           <NA>        <NA>\n6370:           <NA>        <NA>\n6371:           <NA>        <NA>\n6372:           <NA>        <NA>\n\n\n\n\n\n\n3) 함수를 이용한 row filtering\n논리 연산자나 infix 연산자 뿐만 아니라 TRUE/FALSE를 반환하는 다른 함수들도 행을 선택하는 데 활용할 수 있습니다. 가장 대표적인 함수가 바로 is.na() 입니다.\n\ndt[is.na(Testosterone)]\n\n         ID SurveyYr gender   age AgeDecade AgeMonths   race  Race3\n      <int>   <fctr> <fctr> <int>    <fctr>     <int> <fctr> <fctr>\n   1: 51624  2009_10   male    34     30-39       409  White   <NA>\n   2: 51624  2009_10   male    34     30-39       409  White   <NA>\n   3: 51624  2009_10   male    34     30-39       409  White   <NA>\n   4: 51625  2009_10   male     4       0-9        49  Other   <NA>\n   5: 51630  2009_10 female    49     40-49       596  White   <NA>\n  ---                                                              \n5870: 71869  2011_12   male    69     60-69        NA  White  White\n5871: 71869  2011_12   male    69     60-69        NA  White  White\n5872: 71869  2011_12   male    69     60-69        NA  White  White\n5873: 71882  2011_12 female    60     60-69        NA  Black  Black\n5874: 71910  2011_12 female     0       0-9         5  White  White\n           education MaritalStatus    HHIncome HHIncomeMid Poverty HomeRooms\n              <fctr>        <fctr>      <fctr>       <int>   <num>     <int>\n   1:    High School       Married 25000-34999       30000    1.36         6\n   2:    High School       Married 25000-34999       30000    1.36         6\n   3:    High School       Married 25000-34999       30000    1.36         6\n   4:           <NA>          <NA> 20000-24999       22500    1.07         9\n   5:   Some College   LivePartner 35000-44999       40000    1.91         5\n  ---                                                                       \n5870:   College Grad       Married 45000-54999       50000    2.70         9\n5871:   College Grad       Married 45000-54999       50000    2.70         9\n5872:   College Grad       Married 45000-54999       50000    2.70         9\n5873: 9 - 11th Grade       Married 10000-14999       12500    0.75         5\n5874:           <NA>          <NA> 75000-99999       87500    3.37        10\n      HomeOwn       Work Weight Length HeadCirc Height   BMI BMICatUnder20yrs\n       <fctr>     <fctr>  <num>  <num>    <num>  <num> <num>           <fctr>\n   1:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   2:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   3:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   4:     Own       <NA>   17.0     NA       NA  105.4 15.30             <NA>\n   5:    Rent NotWorking   86.7     NA       NA  168.4 30.57             <NA>\n  ---                                                                        \n5870:     Own NotWorking  113.9     NA       NA  173.6 37.80             <NA>\n5871:     Own NotWorking  113.9     NA       NA  173.6 37.80             <NA>\n5872:     Own NotWorking  113.9     NA       NA  173.6 37.80             <NA>\n5873:    Rent NotWorking   72.4     NA       NA  162.9 27.30             <NA>\n5874:     Own       <NA>    6.7   67.6     42.2     NA    NA             <NA>\n           BMI_WHO Pulse BPSysAve BPDiaAve BPSys1 BPDia1 BPSys2 BPDia2 BPSys3\n            <fctr> <int>    <int>    <int>  <int>  <int>  <int>  <int>  <int>\n   1:    30.0_plus    70      113       85    114     88    114     88    112\n   2:    30.0_plus    70      113       85    114     88    114     88    112\n   3:    30.0_plus    70      113       85    114     88    114     88    112\n   4:    12.0_18.5    NA       NA       NA     NA     NA     NA     NA     NA\n   5:    30.0_plus    86      112       75    118     82    108     74    116\n  ---                                                                        \n5870:    30.0_plus    64      108       63    110     66    112     62    104\n5871:    30.0_plus    64      108       63    110     66    112     62    104\n5872:    30.0_plus    64      108       63    110     66    112     62    104\n5873: 25.0_to_29.9    56      116       77    102     78    112     74    120\n5874:         <NA>    NA       NA       NA     NA     NA     NA     NA     NA\n      BPDia3 Testosterone DirectChol TotChol UrineVol1 UrineFlow1 UrineVol2\n       <int>        <num>      <num>   <num>     <int>      <num>     <int>\n   1:     82           NA       1.29    3.49       352         NA        NA\n   2:     82           NA       1.29    3.49       352         NA        NA\n   3:     82           NA       1.29    3.49       352         NA        NA\n   4:     NA           NA         NA      NA        NA         NA        NA\n   5:     76           NA       1.16    6.70        77      0.094        NA\n  ---                                                                      \n5870:     64           NA       0.88    4.01       296      1.839        NA\n5871:     64           NA       0.88    4.01       296      1.839        NA\n5872:     64           NA       0.88    4.01       296      1.839        NA\n5873:     80           NA         NA      NA       128      0.955        NA\n5874:     NA           NA         NA      NA        NA         NA        NA\n      UrineFlow2 Diabetes DiabetesAge HealthGen DaysPhysHlthBad DaysMentHlthBad\n           <num>   <fctr>       <int>    <fctr>           <int>           <int>\n   1:         NA       No          NA      Good               0              15\n   2:         NA       No          NA      Good               0              15\n   3:         NA       No          NA      Good               0              15\n   4:         NA       No          NA      <NA>              NA              NA\n   5:         NA       No          NA      Good               0              10\n  ---                                                                          \n5870:         NA       No          NA      Fair               3               0\n5871:         NA       No          NA      Fair               3               0\n5872:         NA       No          NA      Fair               3               0\n5873:         NA       No          NA      Fair              30               3\n5874:         NA     <NA>          NA      <NA>              NA              NA\n      LittleInterest Depressed nPregnancies nBabies Age1stBaby SleepHrsNight\n              <fctr>    <fctr>        <int>   <int>      <int>         <int>\n   1:           Most   Several           NA      NA         NA             4\n   2:           Most   Several           NA      NA         NA             4\n   3:           Most   Several           NA      NA         NA             4\n   4:           <NA>      <NA>           NA      NA         NA            NA\n   5:        Several   Several            2       2         27             8\n  ---                                                                       \n5870:           None      None           NA      NA         NA             8\n5871:           None      None           NA      NA         NA             8\n5872:           None      None           NA      NA         NA             8\n5873:        Several   Several            2       2         18             8\n5874:           <NA>      <NA>           NA      NA         NA            NA\n      SleepTrouble PhysActive PhysActiveDays TVHrsDay CompHrsDay TVHrsDayChild\n            <fctr>     <fctr>          <int>   <fctr>     <fctr>         <int>\n   1:          Yes         No             NA     <NA>       <NA>            NA\n   2:          Yes         No             NA     <NA>       <NA>            NA\n   3:          Yes         No             NA     <NA>       <NA>            NA\n   4:         <NA>       <NA>             NA     <NA>       <NA>             4\n   5:          Yes         No             NA     <NA>       <NA>            NA\n  ---                                                                         \n5870:           No         No             NA     1_hr  More_4_hr            NA\n5871:           No         No             NA     1_hr  More_4_hr            NA\n5872:           No         No              3     1_hr  More_4_hr            NA\n5873:           No         No             NA     1_hr  0_to_1_hr            NA\n5874:         <NA>       <NA>             NA     <NA>       <NA>            NA\n      CompHrsDayChild Alcohol12PlusYr AlcoholDay AlcoholYear SmokeNow Smoke100\n                <int>          <fctr>      <int>       <int>   <fctr>   <fctr>\n   1:              NA             Yes         NA           0       No      Yes\n   2:              NA             Yes         NA           0       No      Yes\n   3:              NA             Yes         NA           0       No      Yes\n   4:               1            <NA>         NA          NA     <NA>     <NA>\n   5:              NA             Yes          2          20      Yes      Yes\n  ---                                                                         \n5870:              NA              No         NA           0      Yes      Yes\n5871:              NA              No         NA           0      Yes      Yes\n5872:              NA              No         NA           0      Yes      Yes\n5873:              NA             Yes         NA           0     <NA>       No\n5874:              NA            <NA>         NA          NA     <NA>     <NA>\n       Smoke100n SmokeAge Marijuana AgeFirstMarij RegularMarij AgeRegMarij\n          <fctr>    <int>    <fctr>         <int>       <fctr>       <int>\n   1:     Smoker       18       Yes            17           No          NA\n   2:     Smoker       18       Yes            17           No          NA\n   3:     Smoker       18       Yes            17           No          NA\n   4:       <NA>       NA      <NA>            NA         <NA>          NA\n   5:     Smoker       38       Yes            18           No          NA\n  ---                                                                     \n5870:     Smoker       19      <NA>            NA         <NA>          NA\n5871:     Smoker       19      <NA>            NA         <NA>          NA\n5872:     Smoker       19      <NA>            NA         <NA>          NA\n5873: Non-Smoker       NA      <NA>            NA         <NA>          NA\n5874:       <NA>       NA      <NA>            NA         <NA>          NA\n      HardDrugs SexEver SexAge SexNumPartnLife SexNumPartYear SameSex\n         <fctr>  <fctr>  <int>           <int>          <int>  <fctr>\n   1:       Yes     Yes     16               8              1      No\n   2:       Yes     Yes     16               8              1      No\n   3:       Yes     Yes     16               8              1      No\n   4:      <NA>    <NA>     NA              NA             NA    <NA>\n   5:       Yes     Yes     12              10              1     Yes\n  ---                                                                \n5870:        No     Yes     18               3             NA      No\n5871:        No     Yes     18               3             NA      No\n5872:        No     Yes     18               3             NA      No\n5873:        No     Yes     18               3             NA      No\n5874:      <NA>    <NA>     NA              NA             NA    <NA>\n      SexOrientation PregnantNow\n              <fctr>      <fctr>\n   1:   Heterosexual        <NA>\n   2:   Heterosexual        <NA>\n   3:   Heterosexual        <NA>\n   4:           <NA>        <NA>\n   5:   Heterosexual        <NA>\n  ---                           \n5870:           <NA>        <NA>\n5871:           <NA>        <NA>\n5872:           <NA>        <NA>\n5873:           <NA>        <NA>\n5874:           <NA>        <NA>\n\n\nNA가 아닌 데이터를 출력하는 방법은 !is.na() 입니다. Chapter 2의 논리 연산자 부분에서 NOT을 의미하는 기호는 !라고 배웠습니다.\n\ndt[!is.na(SleepHrsNight)]\n\n         ID SurveyYr gender   age AgeDecade AgeMonths    race   Race3\n      <int>   <fctr> <fctr> <int>    <fctr>     <int>  <fctr>  <fctr>\n   1: 51624  2009_10   male    34     30-39       409   White    <NA>\n   2: 51624  2009_10   male    34     30-39       409   White    <NA>\n   3: 51624  2009_10   male    34     30-39       409   White    <NA>\n   4: 51630  2009_10 female    49     40-49       596   White    <NA>\n   5: 51647  2009_10 female    45     40-49       541   White    <NA>\n  ---                                                                \n7751: 71909  2011_12   male    28     20-29        NA Mexican Mexican\n7752: 71909  2011_12   male    28     20-29        NA Mexican Mexican\n7753: 71911  2011_12   male    27     20-29        NA Mexican Mexican\n7754: 71915  2011_12   male    60     60-69        NA   White   White\n7755: 71915  2011_12   male    60     60-69        NA   White   White\n           education MaritalStatus    HHIncome HHIncomeMid Poverty HomeRooms\n              <fctr>        <fctr>      <fctr>       <int>   <num>     <int>\n   1:    High School       Married 25000-34999       30000    1.36         6\n   2:    High School       Married 25000-34999       30000    1.36         6\n   3:    High School       Married 25000-34999       30000    1.36         6\n   4:   Some College   LivePartner 35000-44999       40000    1.91         5\n   5:   College Grad       Married 75000-99999       87500    5.00         6\n  ---                                                                       \n7751: 9 - 11th Grade  NeverMarried   5000-9999        7500    0.46         3\n7752: 9 - 11th Grade  NeverMarried   5000-9999        7500    0.46         3\n7753:   College Grad       Married 75000-99999       87500    3.25        10\n7754:   College Grad  NeverMarried 65000-74999       70000    5.00         4\n7755:   College Grad  NeverMarried 65000-74999       70000    5.00         4\n      HomeOwn       Work Weight Length HeadCirc Height   BMI BMICatUnder20yrs\n       <fctr>     <fctr>  <num>  <num>    <num>  <num> <num>           <fctr>\n   1:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   2:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   3:     Own NotWorking   87.4     NA       NA  164.7 32.22             <NA>\n   4:    Rent NotWorking   86.7     NA       NA  168.4 30.57             <NA>\n   5:     Own    Working   75.7     NA       NA  166.7 27.24             <NA>\n  ---                                                                        \n7751:    Rent    Working   92.3     NA       NA  177.3 29.40             <NA>\n7752:    Rent    Working   92.3     NA       NA  177.3 29.40             <NA>\n7753:     Own    Working   96.7     NA       NA  175.8 31.30             <NA>\n7754:     Own    Working   78.4     NA       NA  168.8 27.50             <NA>\n7755:     Own    Working   78.4     NA       NA  168.8 27.50             <NA>\n           BMI_WHO Pulse BPSysAve BPDiaAve BPSys1 BPDia1 BPSys2 BPDia2 BPSys3\n            <fctr> <int>    <int>    <int>  <int>  <int>  <int>  <int>  <int>\n   1:    30.0_plus    70      113       85    114     88    114     88    112\n   2:    30.0_plus    70      113       85    114     88    114     88    112\n   3:    30.0_plus    70      113       85    114     88    114     88    112\n   4:    30.0_plus    86      112       75    118     82    108     74    116\n   5: 25.0_to_29.9    62      118       64    106     62    118     68    118\n  ---                                                                        \n7751: 25.0_to_29.9    68      124       65    124     62    126     64    122\n7752: 25.0_to_29.9    68      124       65    124     62    126     64    122\n7753:    30.0_plus    74      133       74    122     76    132     82    134\n7754: 25.0_to_29.9    76      147       73    150     72    148     74    146\n7755: 25.0_to_29.9    76      147       73    150     72    148     74    146\n      BPDia3 Testosterone DirectChol TotChol UrineVol1 UrineFlow1 UrineVol2\n       <int>        <num>      <num>   <num>     <int>      <num>     <int>\n   1:     82           NA       1.29    3.49       352         NA        NA\n   2:     82           NA       1.29    3.49       352         NA        NA\n   3:     82           NA       1.29    3.49       352         NA        NA\n   4:     76           NA       1.16    6.70        77      0.094        NA\n   5:     60           NA       2.12    5.82       106      1.116        NA\n  ---                                                                      \n7751:     66       490.43       1.22    3.90        97      0.942        NA\n7752:     66       490.43       1.22    3.90        97      0.942        NA\n7753:     66       509.00       1.06    5.72        63      0.600        NA\n7754:     72       505.13       0.93    4.94       218      1.253        NA\n7755:     72       505.13       0.93    4.94       218      1.253        NA\n      UrineFlow2 Diabetes DiabetesAge HealthGen DaysPhysHlthBad DaysMentHlthBad\n           <num>   <fctr>       <int>    <fctr>           <int>           <int>\n   1:         NA       No          NA      Good               0              15\n   2:         NA       No          NA      Good               0              15\n   3:         NA       No          NA      Good               0              15\n   4:         NA       No          NA      Good               0              10\n   5:         NA       No          NA     Vgood               0               3\n  ---                                                                          \n7751:         NA       No          NA      <NA>              NA              NA\n7752:         NA       No          NA      <NA>              NA              NA\n7753:         NA       No          NA      Good               0               2\n7754:         NA      Yes          56      Good               0               2\n7755:         NA      Yes          56      Good               0               2\n      LittleInterest Depressed nPregnancies nBabies Age1stBaby SleepHrsNight\n              <fctr>    <fctr>        <int>   <int>      <int>         <int>\n   1:           Most   Several           NA      NA         NA             4\n   2:           Most   Several           NA      NA         NA             4\n   3:           Most   Several           NA      NA         NA             4\n   4:        Several   Several            2       2         27             8\n   5:           None      None            1      NA         NA             8\n  ---                                                                       \n7751:           <NA>      <NA>           NA      NA         NA             6\n7752:           <NA>      <NA>           NA      NA         NA             6\n7753:           None      None           NA      NA         NA             6\n7754:           None      None           NA      NA         NA             6\n7755:           None      None           NA      NA         NA             6\n      SleepTrouble PhysActive PhysActiveDays TVHrsDay CompHrsDay TVHrsDayChild\n            <fctr>     <fctr>          <int>   <fctr>     <fctr>         <int>\n   1:          Yes         No             NA     <NA>       <NA>            NA\n   2:          Yes         No             NA     <NA>       <NA>            NA\n   3:          Yes         No             NA     <NA>       <NA>            NA\n   4:          Yes         No             NA     <NA>       <NA>            NA\n   5:           No        Yes              5     <NA>       <NA>            NA\n  ---                                                                         \n7751:           No        Yes             NA     1_hr       2_hr            NA\n7752:           No        Yes             NA     1_hr       2_hr            NA\n7753:           No         No              3     1_hr  0_to_1_hr            NA\n7754:           No         No              1     2_hr       1_hr            NA\n7755:           No         No             NA     2_hr       1_hr            NA\n      CompHrsDayChild Alcohol12PlusYr AlcoholDay AlcoholYear SmokeNow Smoke100\n                <int>          <fctr>      <int>       <int>   <fctr>   <fctr>\n   1:              NA             Yes         NA           0       No      Yes\n   2:              NA             Yes         NA           0       No      Yes\n   3:              NA             Yes         NA           0       No      Yes\n   4:              NA             Yes          2          20      Yes      Yes\n   5:              NA             Yes          3          52     <NA>       No\n  ---                                                                         \n7751:              NA            <NA>         NA          NA      Yes      Yes\n7752:              NA            <NA>         NA          NA      Yes      Yes\n7753:              NA             Yes          5           4     <NA>       No\n7754:              NA             Yes         NA           0     <NA>       No\n7755:              NA             Yes         NA           0     <NA>       No\n       Smoke100n SmokeAge Marijuana AgeFirstMarij RegularMarij AgeRegMarij\n          <fctr>    <int>    <fctr>         <int>       <fctr>       <int>\n   1:     Smoker       18       Yes            17           No          NA\n   2:     Smoker       18       Yes            17           No          NA\n   3:     Smoker       18       Yes            17           No          NA\n   4:     Smoker       38       Yes            18           No          NA\n   5: Non-Smoker       NA       Yes            13           No          NA\n  ---                                                                     \n7751:     Smoker       18      <NA>            NA         <NA>          NA\n7752:     Smoker       18      <NA>            NA         <NA>          NA\n7753: Non-Smoker       NA       Yes            22           No          NA\n7754: Non-Smoker       NA      <NA>            NA         <NA>          NA\n7755: Non-Smoker       NA      <NA>            NA         <NA>          NA\n      HardDrugs SexEver SexAge SexNumPartnLife SexNumPartYear SameSex\n         <fctr>  <fctr>  <int>           <int>          <int>  <fctr>\n   1:       Yes     Yes     16               8              1      No\n   2:       Yes     Yes     16               8              1      No\n   3:       Yes     Yes     16               8              1      No\n   4:       Yes     Yes     12              10              1     Yes\n   5:        No     Yes     13              20              0     Yes\n  ---                                                                \n7751:      <NA>    <NA>     NA              NA             NA    <NA>\n7752:      <NA>    <NA>     NA              NA             NA    <NA>\n7753:        No     Yes     21               1              1      No\n7754:        No     Yes     19               2             NA      No\n7755:        No     Yes     19               2             NA      No\n      SexOrientation PregnantNow\n              <fctr>      <fctr>\n   1:   Heterosexual        <NA>\n   2:   Heterosexual        <NA>\n   3:   Heterosexual        <NA>\n   4:   Heterosexual        <NA>\n   5:       Bisexual        <NA>\n  ---                           \n7751:           <NA>        <NA>\n7752:           <NA>        <NA>\n7753:   Heterosexual        <NA>\n7754:           <NA>        <NA>\n7755:           <NA>        <NA>\n\n\n\n\n4) 행의 정렬\n행의 정렬 역시 i 부분에서 담당합니다. 특정한 column을 기준으로 데이터를 오름차순 또는 내림차순 정렬을 할 때 사용할 수 있습니다.\ndata.table에서 특정 column을 기준으로 데이터를 정렬하는 방법은 두 가지가 있습니다.\n\norder()\norder()는 정렬한 값의 출력만 합니다.\n\ndt[order(BMI)] |> head()\n\n      ID SurveyYr gender   age AgeDecade AgeMonths    race   Race3 education\n   <int>   <fctr> <fctr> <int>    <fctr>     <int>  <fctr>  <fctr>    <fctr>\n1: 60527  2009_10 female     3       0-9        42   Other    <NA>      <NA>\n2: 52534  2009_10   male     9       0-9       109 Mexican    <NA>      <NA>\n3: 64250  2011_12 female     3       0-9        NA Mexican Mexican      <NA>\n4: 64751  2011_12   male     9       0-9        NA   White   White      <NA>\n5: 64751  2011_12   male     9       0-9        NA   White   White      <NA>\n6: 64751  2011_12   male     9       0-9        NA   White   White      <NA>\n   MaritalStatus    HHIncome HHIncomeMid Poverty HomeRooms HomeOwn   Work\n          <fctr>      <fctr>       <int>   <num>     <int>  <fctr> <fctr>\n1:          <NA>  more 99999      100000    5.00         9     Own   <NA>\n2:          <NA> 25000-34999       30000    1.41         4    Rent   <NA>\n3:          <NA> 35000-44999       40000    1.79         4     Own   <NA>\n4:          <NA>        <NA>          NA      NA         5     Own   <NA>\n5:          <NA>        <NA>          NA      NA         5     Own   <NA>\n6:          <NA>        <NA>          NA      NA         5     Own   <NA>\n   Weight Length HeadCirc Height   BMI BMICatUnder20yrs   BMI_WHO Pulse\n    <num>  <num>    <num>  <num> <num>           <fctr>    <fctr> <int>\n1:   11.7   97.0       NA   95.3 12.88             <NA> 12.0_18.5    NA\n2:   20.5     NA       NA  126.1 12.89             <NA> 12.0_18.5    68\n3:   12.4   98.4       NA   98.1 12.90      UnderWeight 12.0_18.5    NA\n4:   30.1     NA       NA  152.5 12.90      UnderWeight 12.0_18.5    82\n5:   30.1     NA       NA  152.5 12.90      UnderWeight 12.0_18.5    82\n6:   30.1     NA       NA  152.5 12.90      UnderWeight 12.0_18.5    82\n   BPSysAve BPDiaAve BPSys1 BPDia1 BPSys2 BPDia2 BPSys3 BPDia3 Testosterone\n      <int>    <int>  <int>  <int>  <int>  <int>  <int>  <int>        <num>\n1:       NA       NA     NA     NA     NA     NA     NA     NA           NA\n2:       88       15     98      0     88     14     88     16           NA\n3:       NA       NA     NA     NA     NA     NA     NA     NA           NA\n4:       91       58     92     64     92     54     90     62         3.69\n5:       91       58     92     64     92     54     90     62         3.69\n6:       91       58     92     64     92     54     90     62         3.69\n   DirectChol TotChol UrineVol1 UrineFlow1 UrineVol2 UrineFlow2 Diabetes\n        <num>   <num>     <int>      <num>     <int>      <num>   <fctr>\n1:         NA      NA        NA         NA        NA         NA       No\n2:         NA      NA        NA         NA        NA         NA       No\n3:         NA      NA        NA         NA        NA         NA       No\n4:       1.22    3.28        35      0.324        67      0.573       No\n5:       1.22    3.28        35      0.324        67      0.573       No\n6:       1.22    3.28        35      0.324        67      0.573       No\n   DiabetesAge HealthGen DaysPhysHlthBad DaysMentHlthBad LittleInterest\n         <int>    <fctr>           <int>           <int>         <fctr>\n1:          NA      <NA>              NA              NA           <NA>\n2:          NA      <NA>              NA              NA           <NA>\n3:          NA      <NA>              NA              NA           <NA>\n4:          NA      <NA>              NA              NA           <NA>\n5:          NA      <NA>              NA              NA           <NA>\n6:          NA      <NA>              NA              NA           <NA>\n   Depressed nPregnancies nBabies Age1stBaby SleepHrsNight SleepTrouble\n      <fctr>        <int>   <int>      <int>         <int>       <fctr>\n1:      <NA>           NA      NA         NA            NA         <NA>\n2:      <NA>           NA      NA         NA            NA         <NA>\n3:      <NA>           NA      NA         NA            NA         <NA>\n4:      <NA>           NA      NA         NA            NA         <NA>\n5:      <NA>           NA      NA         NA            NA         <NA>\n6:      <NA>           NA      NA         NA            NA         <NA>\n   PhysActive PhysActiveDays TVHrsDay CompHrsDay TVHrsDayChild CompHrsDayChild\n       <fctr>          <int>   <fctr>     <fctr>         <int>           <int>\n1:       <NA>             NA     <NA>       <NA>             0               0\n2:       <NA>             NA     <NA>       <NA>             4               0\n3:       <NA>             NA     2_hr      0_hrs            NA              NA\n4:       <NA>              4     4_hr  0_to_1_hr            NA              NA\n5:       <NA>              5     4_hr  0_to_1_hr            NA              NA\n6:       <NA>              7     4_hr  0_to_1_hr            NA              NA\n   Alcohol12PlusYr AlcoholDay AlcoholYear SmokeNow Smoke100 Smoke100n SmokeAge\n            <fctr>      <int>       <int>   <fctr>   <fctr>    <fctr>    <int>\n1:            <NA>         NA          NA     <NA>     <NA>      <NA>       NA\n2:            <NA>         NA          NA     <NA>     <NA>      <NA>       NA\n3:            <NA>         NA          NA     <NA>     <NA>      <NA>       NA\n4:            <NA>         NA          NA     <NA>     <NA>      <NA>       NA\n5:            <NA>         NA          NA     <NA>     <NA>      <NA>       NA\n6:            <NA>         NA          NA     <NA>     <NA>      <NA>       NA\n   Marijuana AgeFirstMarij RegularMarij AgeRegMarij HardDrugs SexEver SexAge\n      <fctr>         <int>       <fctr>       <int>    <fctr>  <fctr>  <int>\n1:      <NA>            NA         <NA>          NA      <NA>    <NA>     NA\n2:      <NA>            NA         <NA>          NA      <NA>    <NA>     NA\n3:      <NA>            NA         <NA>          NA      <NA>    <NA>     NA\n4:      <NA>            NA         <NA>          NA      <NA>    <NA>     NA\n5:      <NA>            NA         <NA>          NA      <NA>    <NA>     NA\n6:      <NA>            NA         <NA>          NA      <NA>    <NA>     NA\n   SexNumPartnLife SexNumPartYear SameSex SexOrientation PregnantNow\n             <int>          <int>  <fctr>         <fctr>      <fctr>\n1:              NA             NA    <NA>           <NA>        <NA>\n2:              NA             NA    <NA>           <NA>        <NA>\n3:              NA             NA    <NA>           <NA>        <NA>\n4:              NA             NA    <NA>           <NA>        <NA>\n5:              NA             NA    <NA>           <NA>        <NA>\n6:              NA             NA    <NA>           <NA>        <NA>\n\n\n만약 내림차순으로 정렬하고 싶은 경우는 변수 앞에 -를 붙여주면 됩니다.\n\ndt[order(-BMI)] |> head()\n\n      ID SurveyYr gender   age AgeDecade AgeMonths     race  Race3\n   <int>   <fctr> <fctr> <int>    <fctr>     <int>   <fctr> <fctr>\n1: 52315  2009_10 female    52     50-59       629    Black   <NA>\n2: 52315  2009_10 female    52     50-59       629    Black   <NA>\n3: 70466  2011_12 female    25     20-29        NA    White  White\n4: 69207  2011_12 female    30     30-39        NA    Black  Black\n5: 61693  2009_10 female    33     30-39       406 Hispanic   <NA>\n6: 59688  2009_10 female    39     30-39       471    White   <NA>\n        education MaritalStatus    HHIncome HHIncomeMid Poverty HomeRooms\n           <fctr>        <fctr>      <fctr>       <int>   <num>     <int>\n1:    High School       Married 45000-54999       50000    2.27         8\n2:    High School       Married 45000-54999       50000    2.27         8\n3:    High School   LivePartner      0-4999        2500    0.16         5\n4:    High School  NeverMarried 20000-24999       22500    1.52         4\n5:   Some College  NeverMarried 15000-19999       17500    1.34         4\n6: 9 - 11th Grade       Married 25000-34999       30000    1.02         5\n   HomeOwn       Work Weight Length HeadCirc Height   BMI BMICatUnder20yrs\n    <fctr>     <fctr>  <num>  <num>    <num>  <num> <num>           <fctr>\n1:     Own    Working  230.7     NA       NA  168.5 81.25             <NA>\n2:     Own    Working  230.7     NA       NA  168.5 81.25             <NA>\n3:    Rent    Working  198.7     NA       NA  157.0 80.60             <NA>\n4:    Rent    Working  187.5     NA       NA  164.8 69.00             <NA>\n5:    Rent NotWorking  188.9     NA       NA  165.9 68.63             <NA>\n6:    Rent NotWorking  170.2     NA       NA  158.4 67.83             <NA>\n     BMI_WHO Pulse BPSysAve BPDiaAve BPSys1 BPDia1 BPSys2 BPDia2 BPSys3 BPDia3\n      <fctr> <int>    <int>    <int>  <int>  <int>  <int>  <int>  <int>  <int>\n1: 30.0_plus    68      111       77     NA     NA    106     82    116     72\n2: 30.0_plus    68      111       77     NA     NA    106     82    116     72\n3: 30.0_plus   124      132       80    130     80    132     80     NA     NA\n4: 30.0_plus    74      108       72    110     62    108     76    108     68\n5: 30.0_plus   102      119       78    118     84    122     72    116     84\n6: 30.0_plus   104      124       75    124     74    128     80    120     70\n   Testosterone DirectChol TotChol UrineVol1 UrineFlow1 UrineVol2 UrineFlow2\n          <num>      <num>   <num>     <int>      <num>     <int>      <num>\n1:           NA       0.85    3.98         0      0.000        NA         NA\n2:           NA       0.85    3.98         0      0.000        NA         NA\n3:        81.26       2.02    5.79        NA         NA        NA         NA\n4:        23.58       0.96    4.42       101      0.795        NA         NA\n5:           NA       1.01    7.24        13      0.075        29      0.558\n6:           NA       0.96    6.10        75      0.277        NA         NA\n   Diabetes DiabetesAge HealthGen DaysPhysHlthBad DaysMentHlthBad\n     <fctr>       <int>    <fctr>           <int>           <int>\n1:      Yes          40      Good              14               4\n2:      Yes          40      Good              14               4\n3:       No          NA      <NA>              NA              NA\n4:       No          NA      Fair               3               7\n5:      Yes          29      Good               0               0\n6:      Yes          23      Poor              14              30\n   LittleInterest Depressed nPregnancies nBabies Age1stBaby SleepHrsNight\n           <fctr>    <fctr>        <int>   <int>      <int>         <int>\n1:        Several      None           NA      NA         NA             8\n2:        Several      None           NA      NA         NA             8\n3:           <NA>      <NA>           NA      NA         NA             4\n4:           None      None           NA      NA         NA             8\n5:           Most      Most           NA      NA         NA            11\n6:        Several      Most            3       3         17            10\n   SleepTrouble PhysActive PhysActiveDays  TVHrsDay CompHrsDay TVHrsDayChild\n         <fctr>     <fctr>          <int>    <fctr>     <fctr>         <int>\n1:           No         No             NA      <NA>       <NA>            NA\n2:           No         No             NA      <NA>       <NA>            NA\n3:           No         No             NA 0_to_1_hr      0_hrs            NA\n4:           No         No             NA      3_hr      0_hrs            NA\n5:          Yes         No             NA      <NA>       <NA>            NA\n6:           No         No             NA      <NA>       <NA>            NA\n   CompHrsDayChild Alcohol12PlusYr AlcoholDay AlcoholYear SmokeNow Smoke100\n             <int>          <fctr>      <int>       <int>   <fctr>   <fctr>\n1:              NA              No         NA          NA     <NA>       No\n2:              NA              No         NA          NA     <NA>       No\n3:              NA            <NA>         NA          NA     <NA>       No\n4:              NA              No          1           5     <NA>       No\n5:              NA              No         NA          NA     <NA>       No\n6:              NA             Yes          3           2       No      Yes\n    Smoke100n SmokeAge Marijuana AgeFirstMarij RegularMarij AgeRegMarij\n       <fctr>    <int>    <fctr>         <int>       <fctr>       <int>\n1: Non-Smoker       NA        No            NA           No          NA\n2: Non-Smoker       NA        No            NA           No          NA\n3: Non-Smoker       NA      <NA>            NA         <NA>          NA\n4: Non-Smoker       NA       Yes            17          Yes          17\n5: Non-Smoker       NA        No            NA           No          NA\n6:     Smoker       16       Yes            15           No          NA\n   HardDrugs SexEver SexAge SexNumPartnLife SexNumPartYear SameSex\n      <fctr>  <fctr>  <int>           <int>          <int>  <fctr>\n1:        No     Yes     38               1              1      No\n2:        No     Yes     38               1              1      No\n3:      <NA>    <NA>     NA              NA             NA    <NA>\n4:        No     Yes     13               5              1      No\n5:        No      No     NA               0              0      No\n6:       Yes     Yes     12              15              1     Yes\n   SexOrientation PregnantNow\n           <fctr>      <fctr>\n1:   Heterosexual        <NA>\n2:   Heterosexual        <NA>\n3:           <NA>         Yes\n4:   Heterosexual          No\n5:   Heterosexual          No\n6:   Heterosexual          No\n\n\nsetorder()\nsetorder()는 데이터를 정렬하여 data.table에 저장합니다. order와는 다르게 정렬된 결과를 출력하지는 않습니다.\n\nsetorder(dt, # 정렬할 데이터\n         age # 기준이 되는 변수\n         )\n\n\n\n\n\n\n\n\nset이 들어가는 함수\n\n\n\ndata.table에서 set이 붙는 함수는 어떤 값을 출력없이 저장하는 함수입니다.\n\nsetnames() # column의 이름 변겅\nsetorder() # row 정렬\nsetDT() #  data.table로 저장"
  },
  {
    "objectID": "posts/data.table_basic/index.html#j-data.table-열",
    "href": "posts/data.table_basic/index.html#j-data.table-열",
    "title": "data.table 기초 문법",
    "section": "4. j: data.table 열",
    "text": "4. j: data.table 열\nj 부분은 데이터의 열 (column)을 다루는 부분을 의미합니다. j 부분을 통해 원하는 열들을 선택하거나, 특정 열을 계산할 수 있습니다. 또한 새로운 변수를 생성하거나 기존의 변수를 수정 또는 삭제할 수 있습니다.\nj 를 활용하기 위해선 dt[,j] 처럼 앞에 ,를 항상 붙여줘야 합니다.\n\n1) column 선택\ndata.table에서 열을 선택하는 방법은 다양합니다.\n\ndt[,c('X','Y')]\ndt[,list(X,Y)]\ndt[,.(X,Y)]\n\n여기서 list()와 .()은 동일한 기능입니다. 동일한 기능이라면 더 적은 코드를 입력하는 후자가 더 낫겠죠?\n\ndt[,.(gender,age)]\n\n       gender   age\n       <fctr> <int>\n    1: female     0\n    2: female     0\n    3:   male     0\n    4:   male     0\n    5: female     0\n   ---             \n 9996:   male    80\n 9997:   male    80\n 9998:   male    80\n 9999:   male    80\n10000:   male    80\n\n\n문자 vector를 이용해서도 원하는 column을 선택할 수 있습니다. 이 때는 ..기호를 이용해야 합니다.\n\ntarget <- c('gender','age','race')\ndt[,..target]\n\n       gender   age     race\n       <fctr> <int>   <fctr>\n    1: female     0 Hispanic\n    2: female     0    Black\n    3:   male     0    Black\n    4:   male     0    Black\n    5: female     0    White\n   ---                      \n 9996:   male    80    White\n 9997:   male    80    White\n 9998:   male    80    White\n 9999:   male    80    White\n10000:   male    80    White\n\n\n\n\n2) column 계산\ncolumn을 계산하는 것 역시 data.table의 j 부분에서 담당합니다. 예를 들어 특정 column의 평균을 계산하거나 표준편차를 계산하는 경우가 있겠죠. 만약 하나의 column만 계산하는 경우 data.table의 [] 안에서 함수를 이용하면 됩니다.\n\ndt[,mean(BMI,na.rm=T)]\n\n[1] 26.66014\n\n\n만약 여러 개의 column에 대해 계산하는 경우 또는 계산하는 값을 data.table 형태로 출력하고 싶은 경우, column 선택에서 배웠던 .()를 활용하면 됩니다.\n\ndt[,.(mean_BMI = mean(BMI, na.rm=T),\n      sd_BMI = sd(BMI,na.rm=T))]\n\n   mean_BMI   sd_BMI\n      <num>    <num>\n1: 26.66014 7.376579\n\n\n\n\n3) column 생성 및 변경 :=\ndata.table에는 특수한 기호가 있습니다. 바로 := 입니다. walrus (바다코끼리) 연산자라고도 불리기도 합니다. 바다코끼리의 어금니를 닮아서 붙여진 이름 같습니다.\n\n\n\n바다코끼리(Walrus)의 어금니가 := 와 닮았습니다.\n\n\ndata.table을 사용한다면 := 연산자를 활용할 줄 아는 것이 굉장히 중요합니다. 새로운 column을 추가하거나, 기존의 column을 변경할 때, 또는 column을 삭제할 때 활용되는 연산자 입니다.\n\na. column의 생성\n새로운 column을 생성하기 위해서는 dt[,column_name := value] 형식으로 코드를 작성합니다. :=의 왼쪽에는 새로운 column의 이름이, 오른쪽에는 데이터를 입력합니다.\n\ndt[,age_group := paste0((age %/% 10) * 10,'대')]\ndt[,table(age_group)]\n\nage_group\n 0대 10대 20대 30대 40대 50대 60대 70대 80대 \n1391 1374 1356 1338 1398 1304  919  587  333 \n\n\nage 를 이용하여 age_group(연령대) column을 추가하였습니다.\n만약 여러 개의 column을 동시에 추가하고 싶다면, 백틱(``) 또는 따옴표('')과 함께 :=를 사용해야 합니다.\n이 때 ()안의 등호들은 :=가 아니라 그냥 등호(=)를 사용해야 합니다.\n\ndt[,`:=`(\n  age2 = age/5,\n  age3 = age/10\n)]\n\n\n\nb. column의 변경\ncolumn을 변경한다는 것은 기존의 column 값들을 다르게 바꿔준다는 것입니다. 예를 들면 1과 2로 이루어진 column을 ’no’와 ’yes’로 변경해주는 것처럼요.\ncolumn을 변경하는 것 역시 생성과 마찬가지로 dt[,column_name := value] 형식으로 코드를 작성하면 됩니다. column_name에는 바꿔줄 column의 이름이, value에는 새롭게 넣어줄 데이터를 입력합니다.\n\ndt[,gender := ifelse(gender=='male','m','f')]\n\n위의 코드처럼 :=를 이용해 male, female로 되어있는 Gender 를 각각 m과 f로 변경할 수 있습니다.\n한편 여러 개의 column을 생성하거나 변경하는 경우, 새로운 column이 생성되는 []안에서 그 column을 바로 사용할 수 없습니다.\n\n#|eval: false\ndt[,`:=`(\n  A2=age,\n  A3=A2\n)]\n\n# 에러메시지 발생\n# Error in eval(jsub, SDenv, parent.frame()) : object 'A2' not found\n\n위 코드는 A2와 A3 column을 동시에 생성하는 코드입니다. 그러나 A2가 아직 만들어지지 않았기 때문에, A3 column은 생성될 수 없습니다. 따라서,\n\ndt[,A2:=age][,A3:=A2][]\n\n          ID SurveyYr gender   age AgeDecade AgeMonths     race  Race3\n       <int>   <fctr> <char> <int>    <fctr>     <int>   <fctr> <fctr>\n    1: 51962  2009_10      f     0       0-9         2 Hispanic   <NA>\n    2: 52066  2009_10      f     0       0-9         8    Black   <NA>\n    3: 52300  2009_10      m     0       0-9         2    Black   <NA>\n    4: 52373  2009_10      m     0       0-9         7    Black   <NA>\n    5: 52435  2009_10      f     0       0-9         6    White   <NA>\n   ---                                                                \n 9996: 71797  2011_12      m    80      <NA>        NA    White  White\n 9997: 71797  2011_12      m    80      <NA>        NA    White  White\n 9998: 71907  2011_12      m    80      <NA>        NA    White  White\n 9999: 71907  2011_12      m    80      <NA>        NA    White  White\n10000: 71907  2011_12      m    80      <NA>        NA    White  White\n         education MaritalStatus    HHIncome HHIncomeMid Poverty HomeRooms\n            <fctr>        <fctr>      <fctr>       <int>   <num>     <int>\n    1:        <NA>          <NA> 15000-19999       17500    1.24         4\n    2:        <NA>          <NA>      0-4999        2500    0.24         5\n    3:        <NA>          <NA>   5000-9999        7500    0.55         3\n    4:        <NA>          <NA> 75000-99999       87500    5.00         4\n    5:        <NA>          <NA> 45000-54999       50000    2.04         5\n   ---                                                                    \n 9996: High School       Widowed        <NA>          NA      NA        NA\n 9997: High School       Widowed        <NA>          NA      NA        NA\n 9998: High School       Married 55000-64999       60000    4.08         6\n 9999: High School       Married 55000-64999       60000    4.08         6\n10000: High School       Married 55000-64999       60000    4.08         6\n       HomeOwn       Work Weight Length HeadCirc Height   BMI BMICatUnder20yrs\n        <fctr>     <fctr>  <num>  <num>    <num>  <num> <num>           <fctr>\n    1:    Rent       <NA>    4.5   56.6     38.8     NA    NA             <NA>\n    2:    Rent       <NA>    9.5   72.5       NA     NA    NA             <NA>\n    3:    Rent       <NA>    6.9   63.4     41.9     NA    NA             <NA>\n    4:     Own       <NA>   10.7   74.7       NA     NA    NA             <NA>\n    5:     Own       <NA>    9.0   64.7     44.3     NA    NA             <NA>\n   ---                                                                        \n 9996:    <NA> NotWorking     NA     NA       NA  182.6    NA             <NA>\n 9997:    <NA> NotWorking     NA     NA       NA  182.6    NA             <NA>\n 9998:     Own NotWorking   71.5     NA       NA  175.4  23.2             <NA>\n 9999:     Own NotWorking   71.5     NA       NA  175.4  23.2             <NA>\n10000:     Own NotWorking   71.5     NA       NA  175.4  23.2             <NA>\n            BMI_WHO Pulse BPSysAve BPDiaAve BPSys1 BPDia1 BPSys2 BPDia2 BPSys3\n             <fctr> <int>    <int>    <int>  <int>  <int>  <int>  <int>  <int>\n    1:         <NA>    NA       NA       NA     NA     NA     NA     NA     NA\n    2:         <NA>    NA       NA       NA     NA     NA     NA     NA     NA\n    3:         <NA>    NA       NA       NA     NA     NA     NA     NA     NA\n    4:         <NA>    NA       NA       NA     NA     NA     NA     NA     NA\n    5:         <NA>    NA       NA       NA     NA     NA     NA     NA     NA\n   ---                                                                        \n 9996:         <NA>    74      153       52    164     60    158     62    148\n 9997:         <NA>    74      153       52    164     60    158     62    148\n 9998: 18.5_to_24.9    54      148       70    150     72    150     70    146\n 9999: 18.5_to_24.9    54      148       70    150     72    150     70    146\n10000: 18.5_to_24.9    54      148       70    150     72    150     70    146\n       BPDia3 Testosterone DirectChol TotChol UrineVol1 UrineFlow1 UrineVol2\n        <int>        <num>      <num>   <num>     <int>      <num>     <int>\n    1:     NA           NA         NA      NA        NA         NA        NA\n    2:     NA           NA         NA      NA        NA         NA        NA\n    3:     NA           NA         NA      NA        NA         NA        NA\n    4:     NA           NA         NA      NA        NA         NA        NA\n    5:     NA           NA         NA      NA        NA         NA        NA\n   ---                                                                      \n 9996:     42        401.0       0.72    3.65       313      1.079        NA\n 9997:     42        401.0       0.72    3.65       313      1.079        NA\n 9998:     70        402.9       1.27    4.37        61      1.052        NA\n 9999:     70        402.9       1.27    4.37        61      1.052        NA\n10000:     70        402.9       1.27    4.37        61      1.052        NA\n       UrineFlow2 Diabetes DiabetesAge HealthGen DaysPhysHlthBad\n            <num>   <fctr>       <int>    <fctr>           <int>\n    1:         NA     <NA>          NA      <NA>              NA\n    2:         NA     <NA>          NA      <NA>              NA\n    3:         NA     <NA>          NA      <NA>              NA\n    4:         NA     <NA>          NA      <NA>              NA\n    5:         NA     <NA>          NA      <NA>              NA\n   ---                                                          \n 9996:         NA      Yes          30      Good               0\n 9997:         NA      Yes          30      Good               0\n 9998:         NA       No          NA      Good               0\n 9999:         NA       No          NA      Good               0\n10000:         NA       No          NA      Good               0\n       DaysMentHlthBad LittleInterest Depressed nPregnancies nBabies Age1stBaby\n                 <int>         <fctr>    <fctr>        <int>   <int>      <int>\n    1:              NA           <NA>      <NA>           NA      NA         NA\n    2:              NA           <NA>      <NA>           NA      NA         NA\n    3:              NA           <NA>      <NA>           NA      NA         NA\n    4:              NA           <NA>      <NA>           NA      NA         NA\n    5:              NA           <NA>      <NA>           NA      NA         NA\n   ---                                                                         \n 9996:              30        Several   Several           NA      NA         NA\n 9997:              30        Several   Several           NA      NA         NA\n 9998:               0           None      None           NA      NA         NA\n 9999:               0           None      None           NA      NA         NA\n10000:               0           None      None           NA      NA         NA\n       SleepHrsNight SleepTrouble PhysActive PhysActiveDays TVHrsDay CompHrsDay\n               <int>       <fctr>     <fctr>          <int>   <fctr>     <fctr>\n    1:            NA         <NA>       <NA>             NA     <NA>       <NA>\n    2:            NA         <NA>       <NA>             NA     <NA>       <NA>\n    3:            NA         <NA>       <NA>             NA     <NA>       <NA>\n    4:            NA         <NA>       <NA>             NA     <NA>       <NA>\n    5:            NA         <NA>       <NA>             NA     <NA>       <NA>\n   ---                                                                         \n 9996:             8           No         No              1    0_hrs      0_hrs\n 9997:             8           No         No              5    0_hrs      0_hrs\n 9998:             5           No        Yes             NA     3_hr      0_hrs\n 9999:             5           No        Yes              4     3_hr      0_hrs\n10000:             5           No        Yes              7     3_hr      0_hrs\n       TVHrsDayChild CompHrsDayChild Alcohol12PlusYr AlcoholDay AlcoholYear\n               <int>           <int>          <fctr>      <int>       <int>\n    1:            NA              NA            <NA>         NA          NA\n    2:            NA              NA            <NA>         NA          NA\n    3:            NA              NA            <NA>         NA          NA\n    4:            NA              NA            <NA>         NA          NA\n    5:            NA              NA            <NA>         NA          NA\n   ---                                                                     \n 9996:            NA              NA             Yes          1         156\n 9997:            NA              NA             Yes          1         156\n 9998:            NA              NA             Yes         NA           0\n 9999:            NA              NA             Yes         NA           0\n10000:            NA              NA             Yes         NA           0\n       SmokeNow Smoke100  Smoke100n SmokeAge Marijuana AgeFirstMarij\n         <fctr>   <fctr>     <fctr>    <int>    <fctr>         <int>\n    1:     <NA>     <NA>       <NA>       NA      <NA>            NA\n    2:     <NA>     <NA>       <NA>       NA      <NA>            NA\n    3:     <NA>     <NA>       <NA>       NA      <NA>            NA\n    4:     <NA>     <NA>       <NA>       NA      <NA>            NA\n    5:     <NA>     <NA>       <NA>       NA      <NA>            NA\n   ---                                                              \n 9996:     <NA>       No Non-Smoker       NA      <NA>            NA\n 9997:     <NA>       No Non-Smoker       NA      <NA>            NA\n 9998:     <NA>       No Non-Smoker       NA      <NA>            NA\n 9999:     <NA>       No Non-Smoker       NA      <NA>            NA\n10000:     <NA>       No Non-Smoker       NA      <NA>            NA\n       RegularMarij AgeRegMarij HardDrugs SexEver SexAge SexNumPartnLife\n             <fctr>       <int>    <fctr>  <fctr>  <int>           <int>\n    1:         <NA>          NA      <NA>    <NA>     NA              NA\n    2:         <NA>          NA      <NA>    <NA>     NA              NA\n    3:         <NA>          NA      <NA>    <NA>     NA              NA\n    4:         <NA>          NA      <NA>    <NA>     NA              NA\n    5:         <NA>          NA      <NA>    <NA>     NA              NA\n   ---                                                                  \n 9996:         <NA>          NA      <NA>    <NA>     NA              NA\n 9997:         <NA>          NA      <NA>    <NA>     NA              NA\n 9998:         <NA>          NA      <NA>    <NA>     NA              NA\n 9999:         <NA>          NA      <NA>    <NA>     NA              NA\n10000:         <NA>          NA      <NA>    <NA>     NA              NA\n       SexNumPartYear SameSex SexOrientation PregnantNow age_group  age2  age3\n                <int>  <fctr>         <fctr>      <fctr>    <char> <num> <num>\n    1:             NA    <NA>           <NA>        <NA>       0대     0     0\n    2:             NA    <NA>           <NA>        <NA>       0대     0     0\n    3:             NA    <NA>           <NA>        <NA>       0대     0     0\n    4:             NA    <NA>           <NA>        <NA>       0대     0     0\n    5:             NA    <NA>           <NA>        <NA>       0대     0     0\n   ---                                                                        \n 9996:             NA    <NA>           <NA>        <NA>      80대    16     8\n 9997:             NA    <NA>           <NA>        <NA>      80대    16     8\n 9998:             NA    <NA>           <NA>        <NA>      80대    16     8\n 9999:             NA    <NA>           <NA>        <NA>      80대    16     8\n10000:             NA    <NA>           <NA>        <NA>      80대    16     8\n          A2    A3\n       <int> <int>\n    1:     0     0\n    2:     0     0\n    3:     0     0\n    4:     0     0\n    5:     0     0\n   ---            \n 9996:    80    80\n 9997:    80    80\n 9998:    80    80\n 9999:    80    80\n10000:    80    80\n\n\n위의 코드처럼 []을 여러 번 붙여 순차적으로 column을 생성 또는 변경해주어야 합니다. 이를 chaining이라고 합니다.\n\n\nc. column의 삭제\n특정 데이터의 column을 삭제할 때는 dt[,column_name := NULL] 형식을 사용합니다. 삭제하려는 하는 column_name만 선택하면 되겠죠.\n\ndt[,column_name := NULL] # 삭제대상 열 이름 := NULL\n\n:= 연산자를 활용한 코드를 실행하게 되면 해당 데이터가 저장이 될 뿐, 출력이 되진 않습니다 (set함수와 같은 역할). 변경한 column을 확인하기 위해선 대괄호를 한 번 더 붙여줍니다.\n\ndt[,column_name := NULL][]"
  },
  {
    "objectID": "posts/data.table_basic/index.html#by-그룹-별-분석",
    "href": "posts/data.table_basic/index.html#by-그룹-별-분석",
    "title": "data.table 기초 문법",
    "section": "5. by: 그룹 별 분석",
    "text": "5. by: 그룹 별 분석\nby: 특정 column에 따라 j 를 계산합니다. 예를 들어 성별에 따른 나이의 평균을 구하는 경우, 따라서 by를 사용하기 위해서는 j 부분이 존재해야 합니다.\n\ndt[,mean(age),by=MaritalStatus]\n\n   MaritalStatus        V1\n          <fctr>     <num>\n1:          <NA>  9.531961\n2:  NeverMarried 32.926087\n3:   LivePartner 37.771429\n4:       Married 50.078327\n5:     Separated 45.775956\n6:      Divorced 51.302687\n7:       Widowed 70.679825\n\n\nkeyby: by와 마찬가지로 특정 그룹에 따라 계산합니다. 하지만 by와 다르게 그룹으로 선택된 column을 기준으로 정렬하여 결과값을 출력합니다.\n\ndt[,mean(age),keyby=MaritalStatus]\n\nKey: <MaritalStatus>\n   MaritalStatus        V1\n          <fctr>     <num>\n1:          <NA>  9.531961\n2:      Divorced 51.302687\n3:   LivePartner 37.771429\n4:       Married 50.078327\n5:  NeverMarried 32.926087\n6:     Separated 45.775956\n7:       Widowed 70.679825\n\n\n혼인상태(MaritalStatus)에 따른 나이(age)의 평균 값이 혼인상태의 이름으로 오름차순 정렬이 되어 출력된 것을 확인할 수 있습니다."
  },
  {
    "objectID": "posts/data.table_basic/index.html#이외-유용한-data.table-전용-함수",
    "href": "posts/data.table_basic/index.html#이외-유용한-data.table-전용-함수",
    "title": "data.table 기초 문법",
    "section": "6. 이외 유용한 data.table 전용 함수",
    "text": "6. 이외 유용한 data.table 전용 함수\n\nfifelse(): fast ifelse입니다. ifelse()보다 더 빠르게 작업을 수행합니다.기본 ifelse()와 다르게 yes와 no 자리에 오는 인자들의 유형(type)이 반드시 동일해야 합니다.\n\ndt[,SEX := fifelse(gender=='m','남성','여성')]\ndt[,Temp := fifelse(age<10,NA,age)] # error 발생.\n\nfcase() : fast case when입니다. ifelse()처럼 조건을 사용해 데이터를 조작하지만, 반복적으로 ifelse() 함수를 계속해서 사용할 필요가 없기 때문에 더 적은 코드를 사용합니다.\n\ndt[,age_group2 := fcase(\n  age<20,'10대',\n  age<30,'20대',\n  age<40,'30대',\n  age<50,'40대',\n  age<60,'50대'\n)]\ndt[,table(age_group2, useNA = 'always')]\n\nage_group2\n10대 20대 30대 40대 50대 <NA> \n2765 1356 1338 1398 1304 1839 \n\n\n조건에 해당되지 않는 나머지 값들은 자동으로 NA 처리 됩니다. 나머지 값들에 값을 주고 싶다면 default 인자를 활용하면 됩니다.\n\ndt[,age_group2 := fcase(\n  age<20,'10대',\n  age<30,'20대',\n  age<40,'30대',\n  age<50,'40대',\n  age<60,'50대',\n  default='60대 이상'\n)]\ndt[,table(age_group2, useNA = 'always')]\n\nage_group2\n     10대      20대      30대      40대      50대 60대 이상      <NA> \n     2765      1356      1338      1398      1304      1839         0 \n\n\nuniqueN() : 고유한 데이터의 수를 확인하는 데 사용하는 함수입니다. 주로 사람의 ID 수를 카운트 하는 데 사용합니다.\n\ndt[,BMI2:=fifelse(is.na(BMI),'donno', fifelse(BMI>=30,'obese','normal'))][,uniqueN(BMI2)]\n\n[1] 3"
  },
  {
    "objectID": "posts/data.table_over_dplyr/index.html",
    "href": "posts/data.table_over_dplyr/index.html",
    "title": "학습관점에서 비교하는 dplyr과 data.table",
    "section": "",
    "text": "R로 데이터 핸들링을 할 때, dplyr와 data.table을 많이 활용합니다. 저 역시 두 가지를 모두 사용하고 있습니다. 저는 R 입문자의 입장에서 봤을 때, 이 두 패키지를 일본어와 중국어에 빗대어 설명드리고 싶습니다.\n\n“일본어는 처음엔 쉬운데, 나중엔 갈수록 어려워져.\n반대로 중국어는 처음엔 어려운데, 나중엔 쉬워져.”\n\n중국어를 배울 때 자주 들었던 말입니다. 어문계열 출신이다보니 중국어를 배울 때 항상 일본어와 비교를 하는 말을 들었습니다. 일본어는 어순도 우리나라와 비슷하고, 애니메이션 등의 영향으로 많이 익숙하죠. 반면에 중국어는 어순도 한국어와 다르고, 무엇보다 성조도 있죠. 그래서 중국어에 대한 진입장벽이 일본어보다 더 높다고들 얘기했던 기억이 납니다.\n저는 dplyr와 data.table의 관계가 일본어와 중국어와 비슷하다고 생각합니다.\ndplyr는 처음엔 쉽습니다. dplyr는 함수 중심의 코드로 구성이 되어있습니다(Functional programming). 몇 개만 알면 기본적인 분석은 다 해낼 수 있습니다. 파이프 연산자를 이용해 코드를 읽어나가는 것도 더 쉽게 느낄 수 있습니다. 하지만 추가적인 작업을 하기 위해서는 여러 함수를 더 익혀야 합니다. 알아둬야하는 함수가 많아지고, 새로운 문법도 늘어납니다.\n반면에 data.table은 처음에 문법을 익히기가 어렵습니다. 기초 문법을 익힐 때, 어느 정도 난이도가 있습니다. 하지만 이 문법을 잘 이해하고 나면, 이것들을 잘 활용하기만 하면 끝입니다."
  },
  {
    "objectID": "posts/data.table_over_dplyr/index.html#data.table을-추천하는-이유",
    "href": "posts/data.table_over_dplyr/index.html#data.table을-추천하는-이유",
    "title": "학습관점에서 비교하는 dplyr과 data.table",
    "section": "data.table을 추천하는 이유",
    "text": "data.table을 추천하는 이유\n그렇기 때문에 처음 데이터 핸들링 패키지를 선택하라고 하면 dplyr보다는 data.table을 추천드립니다. dplyr보다 data.table을 추천드리는지 이유는 아래와 같습니다.\n\n1. 간결함\ndplyr보다 data.table의 코드가 더 간단합니다. 간단하다는 것은 입력하는 코드가 적은 것은 물론, 숙지해야 할 문법 (또는 함수)도 더 단순합니다.\ndplyr는 원하는 기능을 함수이름으로 설정해 놓았습니다. 그렇기 때문에 함수 자체를 익히는 것은 크게 어렵지 않습니다. 문제는 외워야 할 함수가 너무 많다는 것입니다. select(), mutate(), filter(), summarise(), filter(), recode(), case_when() 등등.. 익혀야 할 기본 함수들이 굉장히 많죠.\n또한 여러 가지 변수를 동시에 다루는 작업이라면 더욱 복잡해집니다. ~ 가 붙는 코드, .이 붙는 코드들이 생겨나면서 처음 배우는 사람들에게는 코드를 이해하는 데 어려움이 생깁니다.\n반면 data.table 안에서 기본적인 동작들은 함수가 아닌 문법을 통해 해결할 수 있습니다. [] 안에서 행과 열, 그룹을 다루는 문법을 처음에 잘 익혀두면 손쉽게 사용이 가능합니다. 또한 사용하는 함수의 종류도 크게 많지 않아 dplyr보다 쉽게 데이터를 핸들링할 수 있습니다.\n\n\n2. 패키지 의존성\ndplyr는 tidyverse라는 생태계에 속한 패키지입니다. 추가적인 동작을 사용하기 위해선 tidyr, broom 등과 같은 패키지를 설치해야만 합니다. 어느 패키지에 어떤 함수가 있는지 알아야 하고, 필요한 패키지를 추가적으로 설치해야 합니다. 그 패키지들도 설치하려면 다른 패키지가 필요해서 필요한 패키지 이외에도 여러 패키지들을 다운로드받아야 합니다.\n반면에 data.table은 data.table 패키지 하나만 설치하면 끝이죠. 이것저것 복잡하게 패키지를 다운받을 필요없이, data.table 하나의 패키지만 설치하면 웬만한 작업은 모두 수행할 수 있습니다."
  },
  {
    "objectID": "posts/data.table_over_dplyr/index.html#왜-dplyr를-더-많이-쓸까",
    "href": "posts/data.table_over_dplyr/index.html#왜-dplyr를-더-많이-쓸까",
    "title": "학습관점에서 비교하는 dplyr과 data.table",
    "section": "왜 dplyr를 더 많이 쓸까?",
    "text": "왜 dplyr를 더 많이 쓸까?\n그럼에도 불구하고, 일반적인 R 사용자들은 dplyr를 더 많이 쓰는 것 같습니다. 여러 이유가 있겠지만, 가장 중요한 것은 아마 UI일 것입니다.\n앞서 말씀드린 것처럼 data.table의 문법은 처음에 이해하기에 쉽지 않습니다. [], i, j, by 등등 처음 데이터 분석을 배우는 사람의 입장에서는 이것들을 바로 이해하는 게 쉽지 않겠죠.\ndplyr는 처음 봤을 때, 굉장히 쉽습니다. 영어 단어 몇 개만 이해하면 바로 써먹을 수 있습니다. %>%를 통해 여러 함수들을 연결시킴으로써 직관적으로 코드가 눈에 들어올테니까요.\n또한 Posit (구 RStudio) 사에서는 공식적으로 dplyr가 있는 tidyverse를 밀어주는 느낌이 없잖아 있습니다. tidyverse와 관련된 내용의 강의를 제공하고 있습니다. 처음 R을 접하는 사람들에게 dplyr로 유입되게끔 유도를 하는 것이지요.\n그렇기 때문에 dplyr의 사용자가 더 많을 것이고, 커뮤니티도 더 활성화가 되어있지 않나 생각합니다."
  },
  {
    "objectID": "posts/data.table_over_dplyr/index.html#결론",
    "href": "posts/data.table_over_dplyr/index.html#결론",
    "title": "학습관점에서 비교하는 dplyr과 data.table",
    "section": "결론",
    "text": "결론\n최근 dplyr를 다시 사용해야 할 일이 있어서 dplyr를 공부하다가 생각을 정리하고자 작성한 글입니다.\n비록 저 역시 data.table 패키지를 알기 전, dplyr를 먼저 접하게 되었습니다. (위에서 말한 것처럼) 커뮤니티가 온통 dplyr 세상이었거든요. 하지만 저는 주류와는 다른 선택을 하고 싶었고, 그래서 data.table을 찾아 공부했던 것 같습니다. 실제로 써보니 data.table이 만족도가 더 높았구요.\n입문자에게 data.table을 추천하기는 했지만, 나중에는 dplyr를 배워서, 둘 다 사용할 수 있는 것도 괜찮지 않을까요? ㅎㅎ"
  },
  {
    "objectID": "posts/ggplot_axis조정/index.html",
    "href": "posts/ggplot_axis조정/index.html",
    "title": "ggplot 세부 조정: 축 조정",
    "section": "",
    "text": "1) x축 tick 간격 조정\nggplot()을 이용해 그래프를 그리면 일반적으로 다음과 같이 출력됩니다.\n\nlibrary(ggplot2)\nggplot(iris, aes(x = Species, y = Sepal.Length)) +\n  geom_col()\n\n\n\n\nx축의 tick이 막대그래프의 중앙에 위치해있습니다. tick이 막대의 가운데가 아니라, 막대 양 옆에 위치하여 막대 아래에는 Species의 이름만 나타나게 하려면 다음과 같이 실행할 수 있습니다.\n\nlibrary(data.table)\niris_dt <- as.data.table(iris)\niris_dt$Species2 <- as.integer(as.factor(iris_dt$Species))\niris_dt\n\n\n\n\n\n\n\n\n\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\nSpecies2\n\n\n\n\n5.1\n3.5\n1.4\n0.2\nsetosa\n1\n\n\n4.9\n3.0\n1.4\n0.2\nsetosa\n1\n\n\n4.7\n3.2\n1.3\n0.2\nsetosa\n1\n\n\n4.6\n3.1\n1.5\n0.2\nsetosa\n1\n\n\n5.0\n3.6\n1.4\n0.2\nsetosa\n1\n\n\n5.4\n3.9\n1.7\n0.4\nsetosa\n1\n\n\n4.6\n3.4\n1.4\n0.3\nsetosa\n1\n\n\n5.0\n3.4\n1.5\n0.2\nsetosa\n1\n\n\n4.4\n2.9\n1.4\n0.2\nsetosa\n1\n\n\n4.9\n3.1\n1.5\n0.1\nsetosa\n1\n\n\n5.4\n3.7\n1.5\n0.2\nsetosa\n1\n\n\n4.8\n3.4\n1.6\n0.2\nsetosa\n1\n\n\n4.8\n3.0\n1.4\n0.1\nsetosa\n1\n\n\n4.3\n3.0\n1.1\n0.1\nsetosa\n1\n\n\n5.8\n4.0\n1.2\n0.2\nsetosa\n1\n\n\n5.7\n4.4\n1.5\n0.4\nsetosa\n1\n\n\n5.4\n3.9\n1.3\n0.4\nsetosa\n1\n\n\n5.1\n3.5\n1.4\n0.3\nsetosa\n1\n\n\n5.7\n3.8\n1.7\n0.3\nsetosa\n1\n\n\n5.1\n3.8\n1.5\n0.3\nsetosa\n1\n\n\n5.4\n3.4\n1.7\n0.2\nsetosa\n1\n\n\n5.1\n3.7\n1.5\n0.4\nsetosa\n1\n\n\n4.6\n3.6\n1.0\n0.2\nsetosa\n1\n\n\n5.1\n3.3\n1.7\n0.5\nsetosa\n1\n\n\n4.8\n3.4\n1.9\n0.2\nsetosa\n1\n\n\n5.0\n3.0\n1.6\n0.2\nsetosa\n1\n\n\n5.0\n3.4\n1.6\n0.4\nsetosa\n1\n\n\n5.2\n3.5\n1.5\n0.2\nsetosa\n1\n\n\n5.2\n3.4\n1.4\n0.2\nsetosa\n1\n\n\n4.7\n3.2\n1.6\n0.2\nsetosa\n1\n\n\n4.8\n3.1\n1.6\n0.2\nsetosa\n1\n\n\n5.4\n3.4\n1.5\n0.4\nsetosa\n1\n\n\n5.2\n4.1\n1.5\n0.1\nsetosa\n1\n\n\n5.5\n4.2\n1.4\n0.2\nsetosa\n1\n\n\n4.9\n3.1\n1.5\n0.2\nsetosa\n1\n\n\n5.0\n3.2\n1.2\n0.2\nsetosa\n1\n\n\n5.5\n3.5\n1.3\n0.2\nsetosa\n1\n\n\n4.9\n3.6\n1.4\n0.1\nsetosa\n1\n\n\n4.4\n3.0\n1.3\n0.2\nsetosa\n1\n\n\n5.1\n3.4\n1.5\n0.2\nsetosa\n1\n\n\n5.0\n3.5\n1.3\n0.3\nsetosa\n1\n\n\n4.5\n2.3\n1.3\n0.3\nsetosa\n1\n\n\n4.4\n3.2\n1.3\n0.2\nsetosa\n1\n\n\n5.0\n3.5\n1.6\n0.6\nsetosa\n1\n\n\n5.1\n3.8\n1.9\n0.4\nsetosa\n1\n\n\n4.8\n3.0\n1.4\n0.3\nsetosa\n1\n\n\n5.1\n3.8\n1.6\n0.2\nsetosa\n1\n\n\n4.6\n3.2\n1.4\n0.2\nsetosa\n1\n\n\n5.3\n3.7\n1.5\n0.2\nsetosa\n1\n\n\n5.0\n3.3\n1.4\n0.2\nsetosa\n1\n\n\n7.0\n3.2\n4.7\n1.4\nversicolor\n2\n\n\n6.4\n3.2\n4.5\n1.5\nversicolor\n2\n\n\n6.9\n3.1\n4.9\n1.5\nversicolor\n2\n\n\n5.5\n2.3\n4.0\n1.3\nversicolor\n2\n\n\n6.5\n2.8\n4.6\n1.5\nversicolor\n2\n\n\n5.7\n2.8\n4.5\n1.3\nversicolor\n2\n\n\n6.3\n3.3\n4.7\n1.6\nversicolor\n2\n\n\n4.9\n2.4\n3.3\n1.0\nversicolor\n2\n\n\n6.6\n2.9\n4.6\n1.3\nversicolor\n2\n\n\n5.2\n2.7\n3.9\n1.4\nversicolor\n2\n\n\n5.0\n2.0\n3.5\n1.0\nversicolor\n2\n\n\n5.9\n3.0\n4.2\n1.5\nversicolor\n2\n\n\n6.0\n2.2\n4.0\n1.0\nversicolor\n2\n\n\n6.1\n2.9\n4.7\n1.4\nversicolor\n2\n\n\n5.6\n2.9\n3.6\n1.3\nversicolor\n2\n\n\n6.7\n3.1\n4.4\n1.4\nversicolor\n2\n\n\n5.6\n3.0\n4.5\n1.5\nversicolor\n2\n\n\n5.8\n2.7\n4.1\n1.0\nversicolor\n2\n\n\n6.2\n2.2\n4.5\n1.5\nversicolor\n2\n\n\n5.6\n2.5\n3.9\n1.1\nversicolor\n2\n\n\n5.9\n3.2\n4.8\n1.8\nversicolor\n2\n\n\n6.1\n2.8\n4.0\n1.3\nversicolor\n2\n\n\n6.3\n2.5\n4.9\n1.5\nversicolor\n2\n\n\n6.1\n2.8\n4.7\n1.2\nversicolor\n2\n\n\n6.4\n2.9\n4.3\n1.3\nversicolor\n2\n\n\n6.6\n3.0\n4.4\n1.4\nversicolor\n2\n\n\n6.8\n2.8\n4.8\n1.4\nversicolor\n2\n\n\n6.7\n3.0\n5.0\n1.7\nversicolor\n2\n\n\n6.0\n2.9\n4.5\n1.5\nversicolor\n2\n\n\n5.7\n2.6\n3.5\n1.0\nversicolor\n2\n\n\n5.5\n2.4\n3.8\n1.1\nversicolor\n2\n\n\n5.5\n2.4\n3.7\n1.0\nversicolor\n2\n\n\n5.8\n2.7\n3.9\n1.2\nversicolor\n2\n\n\n6.0\n2.7\n5.1\n1.6\nversicolor\n2\n\n\n5.4\n3.0\n4.5\n1.5\nversicolor\n2\n\n\n6.0\n3.4\n4.5\n1.6\nversicolor\n2\n\n\n6.7\n3.1\n4.7\n1.5\nversicolor\n2\n\n\n6.3\n2.3\n4.4\n1.3\nversicolor\n2\n\n\n5.6\n3.0\n4.1\n1.3\nversicolor\n2\n\n\n5.5\n2.5\n4.0\n1.3\nversicolor\n2\n\n\n5.5\n2.6\n4.4\n1.2\nversicolor\n2\n\n\n6.1\n3.0\n4.6\n1.4\nversicolor\n2\n\n\n5.8\n2.6\n4.0\n1.2\nversicolor\n2\n\n\n5.0\n2.3\n3.3\n1.0\nversicolor\n2\n\n\n5.6\n2.7\n4.2\n1.3\nversicolor\n2\n\n\n5.7\n3.0\n4.2\n1.2\nversicolor\n2\n\n\n5.7\n2.9\n4.2\n1.3\nversicolor\n2\n\n\n6.2\n2.9\n4.3\n1.3\nversicolor\n2\n\n\n5.1\n2.5\n3.0\n1.1\nversicolor\n2\n\n\n5.7\n2.8\n4.1\n1.3\nversicolor\n2\n\n\n6.3\n3.3\n6.0\n2.5\nvirginica\n3\n\n\n5.8\n2.7\n5.1\n1.9\nvirginica\n3\n\n\n7.1\n3.0\n5.9\n2.1\nvirginica\n3\n\n\n6.3\n2.9\n5.6\n1.8\nvirginica\n3\n\n\n6.5\n3.0\n5.8\n2.2\nvirginica\n3\n\n\n7.6\n3.0\n6.6\n2.1\nvirginica\n3\n\n\n4.9\n2.5\n4.5\n1.7\nvirginica\n3\n\n\n7.3\n2.9\n6.3\n1.8\nvirginica\n3\n\n\n6.7\n2.5\n5.8\n1.8\nvirginica\n3\n\n\n7.2\n3.6\n6.1\n2.5\nvirginica\n3\n\n\n6.5\n3.2\n5.1\n2.0\nvirginica\n3\n\n\n6.4\n2.7\n5.3\n1.9\nvirginica\n3\n\n\n6.8\n3.0\n5.5\n2.1\nvirginica\n3\n\n\n5.7\n2.5\n5.0\n2.0\nvirginica\n3\n\n\n5.8\n2.8\n5.1\n2.4\nvirginica\n3\n\n\n6.4\n3.2\n5.3\n2.3\nvirginica\n3\n\n\n6.5\n3.0\n5.5\n1.8\nvirginica\n3\n\n\n7.7\n3.8\n6.7\n2.2\nvirginica\n3\n\n\n7.7\n2.6\n6.9\n2.3\nvirginica\n3\n\n\n6.0\n2.2\n5.0\n1.5\nvirginica\n3\n\n\n6.9\n3.2\n5.7\n2.3\nvirginica\n3\n\n\n5.6\n2.8\n4.9\n2.0\nvirginica\n3\n\n\n7.7\n2.8\n6.7\n2.0\nvirginica\n3\n\n\n6.3\n2.7\n4.9\n1.8\nvirginica\n3\n\n\n6.7\n3.3\n5.7\n2.1\nvirginica\n3\n\n\n7.2\n3.2\n6.0\n1.8\nvirginica\n3\n\n\n6.2\n2.8\n4.8\n1.8\nvirginica\n3\n\n\n6.1\n3.0\n4.9\n1.8\nvirginica\n3\n\n\n6.4\n2.8\n5.6\n2.1\nvirginica\n3\n\n\n7.2\n3.0\n5.8\n1.6\nvirginica\n3\n\n\n7.4\n2.8\n6.1\n1.9\nvirginica\n3\n\n\n7.9\n3.8\n6.4\n2.0\nvirginica\n3\n\n\n6.4\n2.8\n5.6\n2.2\nvirginica\n3\n\n\n6.3\n2.8\n5.1\n1.5\nvirginica\n3\n\n\n6.1\n2.6\n5.6\n1.4\nvirginica\n3\n\n\n7.7\n3.0\n6.1\n2.3\nvirginica\n3\n\n\n6.3\n3.4\n5.6\n2.4\nvirginica\n3\n\n\n6.4\n3.1\n5.5\n1.8\nvirginica\n3\n\n\n6.0\n3.0\n4.8\n1.8\nvirginica\n3\n\n\n6.9\n3.1\n5.4\n2.1\nvirginica\n3\n\n\n6.7\n3.1\n5.6\n2.4\nvirginica\n3\n\n\n6.9\n3.1\n5.1\n2.3\nvirginica\n3\n\n\n5.8\n2.7\n5.1\n1.9\nvirginica\n3\n\n\n6.8\n3.2\n5.9\n2.3\nvirginica\n3\n\n\n6.7\n3.3\n5.7\n2.5\nvirginica\n3\n\n\n6.7\n3.0\n5.2\n2.3\nvirginica\n3\n\n\n6.3\n2.5\n5.0\n1.9\nvirginica\n3\n\n\n6.5\n3.0\n5.2\n2.0\nvirginica\n3\n\n\n6.2\n3.4\n5.4\n2.3\nvirginica\n3\n\n\n5.9\n3.0\n5.1\n1.8\nvirginica\n3\n\n\n\n\n\nx_ticks <- c(0, unique(iris_dt$Species2))+0.5\nx_ticks\n\n[1] 0.5 1.5 2.5 3.5\n\nlen <- length(x_ticks)\n\nggplot(iris_dt, aes(x = Species2, y = Sepal.Length)) +\n  geom_col() +\n  scale_x_continuous(\n    breaks= c(unique(iris_dt$Species2),x_ticks),\n    labels = c(unique(as.character(iris_dt$Species)), rep(\"\",len))\n  ) +\n  theme(\n    axis.ticks.x = element_line(color=c(rep(NA,len-1), rep('black',len)))\n  )\n\n\n\n\n\n\n2) y축 간격 없애기\n원래 그래프를 보면 y축의 0과 x축이 떨어져 있는 것을 알 수 있습니다.\n\nggplot(iris, aes(x = Species, y = Sepal.Length)) +\n  geom_col()\n\n\n\n\n이제 y축의 범위를 아래와 같이 지정해주겠습니다.\n\nggplot(iris, aes(x = Species, y = Sepal.Length)) +\n  geom_col() +\n  scale_y_continuous(expand=c(0,0))\n\n\n\n\n이처럼 expand를 통해 막대그래프가 x축에 붙어있을 수 있도록 출력할 수 있습니다."
  },
  {
    "objectID": "posts/ggplot_facet_label/index.html",
    "href": "posts/ggplot_facet_label/index.html",
    "title": "ggplot2 facet label 설정",
    "section": "",
    "text": "CKD에 따라 그래프를 그린다고 가정해봅시다. CKD 여부에 따른 그래프를 각각 그릴 수 있을 것.\n\nplot_non_ckd <- data[Chronic_kidney_ds==0]|> \n  ggplot(aes(x=Day, y=mean,\n             group = as.factor(AKI_stage)))+\n  geom_line(aes(color=as.factor(AKI_stage))) +\n  geom_ribbon(aes(y=mean, ymin=mean-sd ,ymax = mean+sd, fill=as.factor(AKI_stage)),\n              alpha=.2) +\n  geom_point(aes(color=as.factor(AKI_stage))) +\n  scale_y_continuous(expand=c(0,0),\n                     limits=c(0,8),\n                     breaks=seq(0,8,1))+\n  scale_color_discrete(name=\"AKI Stage\") + \n  scale_fill_discrete(name=\"AKI Stage\") + \n  theme_classic() + \n  labs(x=\"ICU Days\",\n       y= \"Average Cr (mg/dL)\") +\n  theme(legend.position = \"top\")\n\nplot_ckd <- data[Chronic_kidney_ds==1]|> \n  ggplot(aes(x=Day, y=mean,\n             group = as.factor(AKI_stage)))+\n  geom_line(aes(color=as.factor(AKI_stage))) +\n  geom_ribbon(aes(y=mean, ymin=mean-sd ,ymax = mean+sd, fill=as.factor(AKI_stage)),\n              alpha=.2) +\n  geom_point(aes(color=as.factor(AKI_stage))) +\n  scale_y_continuous(expand=c(0,0),\n                     limits=c(0,8),\n                     breaks=seq(0,8,1))+\n  scale_color_discrete(name=\"AKI Stage\") + \n  scale_fill_discrete(name=\"AKI Stage\") + \n  theme_classic() + \n  labs(x=\"ICU Days\",\n       y= \"Average Cr (mg/dL)\") +\n  theme(legend.position = \"top\")\n\nlibrary(patchwork)\nplot_non_ckd + plot_ckd\n\n\n\n\n물론 두 개의 그래프를 각각 보여주는 것도 나쁘지 않습니다. 다만 y축이나 legend는 공통된 값들이기 때문에 두 번 보여줄 필요는 없습니다.\n그럴 때는 facet_grid() 를 이용해주면 됩니다.\n\nplot <- data|> \n  ggplot(aes(x=Day, y=mean,\n             group = as.factor(AKI_stage)))+\n  geom_line(aes(color=as.factor(AKI_stage))) +\n  geom_ribbon(aes(y=mean, ymin=mean-sd ,ymax = mean+sd, fill=as.factor(AKI_stage)),\n              alpha=.2) +\n  geom_point(aes(color=as.factor(AKI_stage))) +\n  scale_y_continuous(expand=c(0,0),\n                     limits=c(0,8),\n                     breaks=seq(0,8,1))+\n  scale_color_discrete(name=\"AKI Stage\") + \n  scale_fill_discrete(name=\"AKI Stage\") + \n  theme_classic() + \n  labs(x=\"ICU Days\",\n       y= \"Average Cr (mg/dL)\") +\n  theme(legend.position = \"top\")\n\nplot + facet_grid(~Chronic_kidney_ds)\n\n\n\n\n여기서 CKD 변수의 코딩이 0과 1로 되어있어, 그래프에도 0과 1로 나타났습니다. facet의 label을 수정하려면 아래와 같이 labeller를 추가해주면 됩니다.\n\nckd_label <- c(\"Non-CKD\",\"CKD\")\nnames(ckd_label) <- c(0,1)\nplot + \n  facet_grid(~Chronic_kidney_ds,\n             labeller = labeller(Chronic_kidney_ds=ckd_label))\n\n\n\n\nlabeller 사용이 어렵다면 데이터의 자체를 리코딩(변경)해주면 됩니다."
  },
  {
    "objectID": "posts/ggplot_ggsigfig/index.html",
    "href": "posts/ggplot_ggsigfig/index.html",
    "title": "ggsignif: 통계적 유의성 시각화",
    "section": "",
    "text": "# install.packages('ggsignif')\nlibrary(ggplot2)\nlibrary(ggsignif)\nlibrary(data.table)\n\n\nggplot(iris, aes(x = Species, y = Sepal.Length)) +\n  geom_boxplot() + # using `ggsignif` to display comparison of interest\n  geom_signif(\n    comparisons = list(c(\"versicolor\", \"virginica\")),\n    map_signif_level = TRUE\n  )\n\n\n\n\n\ndt_male <- data.table(\n  outcome = rep(c('Death','Heart disease','Stroke',\n                  'Cancer','Hypertension','Diabetes'),2),\n  model = as.factor(rep(2:3, each=6)),\n  value = c(0.877,0.731,0.794,0.776,0.769,0.806,\n            0.887,0.734,0.795,0.783,0.770,0.809)\n)\n\n\ndt_male$outcome <- factor(dt_male$outcome, \n                          levels=c('Death','Heart disease','Stroke','Cancer','Hypertension','Diabetes'))\nsetkey(dt_male, outcome)\nsig_loc <- c()\nfor(i in seq(1,11,2)){\n  sig_loc <- c(sig_loc,mean(dt_male$value[i:i+1]))\n}\ndt_male |> \n  ggplot(aes(x=outcome, y=value, fill=model))+\n  geom_col(position = position_dodge(),\n           width = .7) +\n  theme_classic() +\n  scale_y_continuous(limits=c(0,1),\n                     expand=c(0,0)) +\n  scale_fill_manual(values=c('grey30','grey60'),\n                    labels=c('DEMO + PGHD',\n                             'DEMO + PGHD + HLD'),\n                    ) +\n  theme(legend.position = 'top',\n        axis.title.x = element_blank(),\n        axis.title.y = element_text(size=13),\n        axis.text = element_text(size=12, color='black'),\n        # axis.ticks.x = element_line(color=c(rep(NA,len-1), rep('black',len))),\n        legend.title = element_blank(),\n        legend.direction = 'vertical') +\n  guides(fill=guide_legend(byrow = T))+ # legend 간격 띄우기\n  labs(y='Area under the curve (AUC)') + \n  geom_text(aes(label=value, y=value+0.015),\n            position = position_dodge(width=0.8)) +\n  \n  # 유의미한 변수 표시\n  geom_signif(\n    y_position = sig_loc+0.04,\n    xmin= c(0.75, 1.75, 2.75, 3.75, 4.75, 5.75),\n    xmax = c(1.25,2.25, 3.25, 4.25, 5.25, 6.25),\n    annotations = c('*')\n  )\n\n\n\n\n레퍼런스\n\nhttps://const-ae.github.io/ggsignif/articles/intro.html"
  },
  {
    "objectID": "posts/mlr3_basic/index.html",
    "href": "posts/mlr3_basic/index.html",
    "title": "mlr3 기초",
    "section": "",
    "text": "Important\n\n\n\n이 글은 mlr3book1을 참고하여 작성되었습니다."
  },
  {
    "objectID": "posts/mlr3_basic/index.html#r6",
    "href": "posts/mlr3_basic/index.html#r6",
    "title": "mlr3 기초",
    "section": "R6",
    "text": "R6\nR6는 객체지향 프로그래밍 (OOP)을 위한 R의 최근 패러다임 중 하나입니다. R6는 S3와 같이 R에 존재하던 기존의 객체지향성의 단점을 해결하는것이 특징입니다. 아마 다른 프로그래밍 언어에서 객체 지향 개념을 다루어 보셨다면, R6가 더 익숙하게 느껴질 것입니다.\nR6에서 객체(object)는 R6Class() 생성자 객체와 더불어 $new()메소드를 통해 생성됩니다.\n예를 들어 보겠습니다.\n\nlibrary(R6)\nFoo = R6Class()\nfoo = Foo$new()\n\n이 객체들은 자신들의 필드 안에서 변환 가능하도록 압축된 상태를 띄고 있는데, 우리는 이 객체들에 $ 기호를 통해 접근할 수 있습니다.\n필드 뿐만 아니라, 객체들이 갖고 있는 메소드를 통해 각 객체의 상태를 파악하고 정보를 검색하거나, 객체의 내부 상태를 변경할 수 있습니다. 예를 들어 mlr3 의 학습모델(learner) 의 $train() 메소드를 통해, 모델을 학습된 상태로 변경할 수 있고, 이를 통해 예측을 할 수 있게 됩니다.\n\n\n\n\n\n\nNote\n\n\n\nR6 객체의 내부 요소는 다음과 같이 부릅니다.\n\n$field: 필드, 정보\n$method(): 메소드, 특정 동작 실행\n\n\n\nR6 객체들은 각각의 환경(environment)로서, 참조 특성 (reference semantics)을 갖습니다. 예를 들어, foo2 = foo 를 실행할 시, foo2 는 foo가 복사된 것은 아니지만, 하나의 객체를 참조하고 있는 것입니다. 따라서, foo$bar = 3 을 실행할 시, foo2$bar 역시 3이 됩니다.\n객체를 복사할 경우 $clone() 메소드와 deep = TRUE 인자를 사용해야 합니다.\n\nfoo2 = foo$clone(deep=TRUE)\n\n\nlibrary(mlr3verse)\n\n\n\n\n\n\n\nTip\n\n\n\nR6에 대해 더 자세히 알고 싶다면, R6 vignettes, 특히 introduction부분을 참고하세요. 포괄적인 R6의 정보를 얻고 싶다면, Advanced R의 R6 챕터를 참고하세요.\n\n\n\n\nmlr3의 필수 활용요소\n\nSugar functions\n대부분의 mlr3 객체들은 sugar function으로 불리는 간편한 함수들을 제공합니다. 다시 말해, sugar function은 원래의 코드에 대한 단축키(shortcut)로서 사용자가 입력해야 하는 코드를 줄여줍니다. 예를 들어 lrn(\"regr.rpart\") 는 LearnerRegrRpart$new() 의 sugar 버전입니다.\n\n\nDictionaries\nmlr3는 러너(learners)나 태스크(tasks) 객체들을 저장하기 위해 dictionary 구조를 사용합니다. dictionary 구조는 key와 value로 이루어져 있어 key와 value를 연관시켜주는데, 이는 실제 사전의 단어와 단어의 설명과 같다고 이해하시면 됩니다.\ndictionary는 연관된 객체들을 묶어 나열하고 검색하기 쉽게 하기 위해 사용됩니다. 예를 들어 특정 학습모델을 검색할 때, mlr_learners dictionary에 원하는 러너(key)를 입력하면 검색이 가능합니다.\n예를 들면 다음과 같습니다.\n\nrequire(mlr3)\nmlr_learners$get('classif.rpart')\n\n<LearnerClassifRpart:classif.rpart>: Classification Tree\n* Model: -\n* Parameters: xval=0\n* Packages: mlr3, rpart\n* Predict Types:  [response], prob\n* Feature Types: logical, integer, numeric, factor, ordered\n* Properties: importance, missings, multiclass, selected_features,\n  twoclass, weights\n\n\n또한 as.data.table(mlr3_learners) 모든 학습 모델의 정보를 확인할 수도 있습니다.\n\n\nmlr3viz\nmlr3viz는 mlr3 생태계 안에서 시각화를 담당하는 패키지입니다. ggplot2의 theme_minimal()을 적용시킨 동일한 배경의 그래프들을 생성합니다. mlr3viz는 ggplot2 를 기반으로 하고 있으며, fortify와 autoplot 라는 확장 패키지를 통해 예측, 학습모델, 벤치마크 객체 등 mlr3의 결과물들을 시각화하는 데 사용됩니다. mlr3viz에서 가장 많이 사용되는 것은 autoplot()으로, 객체의 타입에 따라 그래프의 출력 결과가 결정됩니다."
  },
  {
    "objectID": "posts/mlr3_basic/index.html#tasks",
    "href": "posts/mlr3_basic/index.html#tasks",
    "title": "mlr3 기초",
    "section": "Tasks",
    "text": "Tasks\n태스크(task)은 데이터와 머신러닝 문제들을 정의한 메타데이터를 갖고 있는 객체입니다. 예를 들면 머신러닝의 분류에서 타겟 피처의 이름이 메타 데이터 입니다.\n한마디로, 태스크는 우리가 활용하는 기본 데이터와 머신러닝을 위해 필요한 데이터들을 담아둔 정보 등이 포함된 객체입니다.\n이 메타 데이터는 사용자가 모덜이 학습될 때 예측 타겟을 다시 지정해줄 필요 없도록 태스크와 함께 작동하게 됩니다.\n\n\n\n\n\n\nNote\n\n\n\nTask와 Learner 등 영어로 지정된 단어들은 따로 번역하지 않고, 소리 그대로 “태스크”와 “러너”로 부르겠습니다.\n\n\n\n내장 태스크\nmlr3에는 mlr_tasks라고 하는 R6 Dictionary 를 통해 미리 지정된 머신러닝 태스크를 제공하고 있습니다.\n\nmlr_tasks\n\n<DictionaryTask> with 19 stored values\nKeys: bike_sharing, boston_housing, breast_cancer, german_credit, ilpd,\n  iris, kc_housing, moneyball, mtcars, optdigits, penguins,\n  penguins_simple, pima, sonar, spam, titanic, usarrests, wine, zoo\n\n\nmlr_tasks에 내장된 태스크를 가져오기 위해선, tsk() 함수와 불러오고자 하는 태스크의 이름을 입력하면 됩니다.\n\ntask_mtcars <- tsk(\"mtcars\")\ntask_mtcars\n\n<TaskRegr:mtcars> (32 x 11): Motor Trends\n* Target: mpg\n* Properties: -\n* Features (10):\n  - dbl (10): am, carb, cyl, disp, drat, gear, hp, qsec, vs, wt\n\n\n특정 태스크에 대해 보다 많은 정보가 필요하다면, help()메소드를 이용하시면 됩니다.\n\ntask_mtcars$help()\n\n\n\n\n\n\n\nTip\n\n\n\nR을 사용하셨던 분들이라면 위와 같은 구조의 코드가 낯설 것입니다. 보통 도움말을 보기 위해선 help()나 ?를 이용했을테니까요.\ntask_mtcars$help() 와 같은 구조가 바로 R6 객체 구조입니다. Introduction에서 간단히 소개했었죠? 앞으로 mlr3를 배우며, 계속 사용하게 될 것입니다.\n\n\n\ntask_sonar <- tsk('sonar')\nsplit <- partition(task_sonar, ratio=.7)\n\n\n\n외부 데이터 태스크로 변환\nmlr3에서 제공하는 데이터가 아닌, 외부의 데이터셋을 mlr3 패키지와 사용하려면 아래와 같이 데이터셋을 태스크로 변환해야 합니다. 예를 들어, survival 패키지의 lung 데이터셋을 mlr3의 태스크 객체로 변환한다면, 아래와 같이 진행할 수 있습니다.\n\nlibrary(survival)\nlibrary(data.table)\ntask_lung = as_task_classif(\n  as.data.table(lung)[,.(age, sex, wt.loss, ph.ecog,status)],\n             target = \"status\",\n  \n             id = \"lung\")\ntask_lung\n\n<TaskClassif:lung> (228 x 5)\n* Target: status\n* Properties: twoclass\n* Features (4):\n  - dbl (4): age, ph.ecog, sex, wt.loss\n\n\n\n\n\n\n\n\nTip\n\n\n\n태스크 생성자인 as_task_regr()과 as_task_classif()는 각각 머신러닝의 회귀와 분류를 수행하기 위한 태스크를 만드는 함수입니다.\n외부의 데이터를 태스크로 변환할 때, UTF8 이름을 따르지 않는 경우, 머신러닝 학습과정에서 오류가 발생합니다. 예를 들면,\nTask 'lung' has missing values in column(s) 'ph.ecog', 'wt.loss', but learner 'classif.ranger' does not support this\n따라서 make.names() 함수를 이용해 데이터의 열 이름을 변경하는 것을 권장합니다.\n\n\n\nlibrary(mlr3viz)\nautoplot(task_lung, type = \"pairs\")\n\n\n\n\n\n\n데이터 살펴보기\n태스크 객체는 테이블 형태의 데이터와 함께, 메타 데이터를 포함하고 있습니다. 예를 들면 행과 열의 개수, 피처(feature) 변수, 타겟 변수와 각 변수의 데이터유형 등을 확인할 수 있습니다.\n이런 메타 데이터들은 field를 통해 확인이 가능합니다.\n\ntask_lung$nrow\n\n[1] 228\n\n\n\ntask_lung$ncol\n\n[1] 5\n\n\n피처와 타겟변수의 이름은 각각 $feature_names 와 $target_names 에 저장되어 있습니다. 여기서 target 은 머신러닝을 통해 예측하고자 하는 변수를 의미합니다.\n\ntask_lung$feature_names\n\n[1] \"age\"     \"ph.ecog\" \"sex\"     \"wt.loss\"\n\n\n\ntask_lung$target_names\n\n[1] \"status\"\n\n\n한편 태스크 안에 들어있는 데이터는 data.table 객체로, $data() 메소드를 통해 확인할 수 있습니다.\n\ntask_lung$data()\n\n\n\n\n\nstatus\nage\nph.ecog\nsex\nwt.loss\n\n\n\n\n2\n74\n1\n1\nNA\n\n\n2\n68\n0\n1\n15\n\n\n1\n56\n0\n1\n15\n\n\n2\n57\n1\n1\n11\n\n\n2\n60\n0\n1\n0\n\n\n1\n74\n1\n1\n0\n\n\n2\n68\n2\n2\n10\n\n\n2\n71\n2\n2\n1\n\n\n2\n53\n1\n1\n16\n\n\n2\n61\n2\n1\n34\n\n\n2\n57\n1\n1\n27\n\n\n2\n68\n2\n2\n23\n\n\n2\n68\n1\n2\n5\n\n\n2\n60\nNA\n1\n32\n\n\n2\n57\n1\n1\n60\n\n\n2\n67\n1\n1\n15\n\n\n2\n70\n1\n1\n-5\n\n\n2\n63\n2\n1\n22\n\n\n2\n56\n2\n2\n10\n\n\n2\n57\n1\n1\nNA\n\n\n2\n67\n1\n1\n17\n\n\n2\n49\n0\n2\n-8\n\n\n2\n50\n1\n1\n16\n\n\n2\n58\n0\n1\n13\n\n\n2\n72\n0\n1\n0\n\n\n2\n70\n1\n2\n6\n\n\n2\n60\n0\n1\n-13\n\n\n2\n70\n3\n1\n20\n\n\n2\n53\n1\n1\n-7\n\n\n2\n74\n2\n1\n20\n\n\n2\n69\n1\n2\n-1\n\n\n2\n73\n2\n1\n20\n\n\n2\n48\n2\n1\n-11\n\n\n2\n60\n2\n2\n-15\n\n\n2\n61\n2\n1\n10\n\n\n2\n62\n2\n2\nNA\n\n\n2\n65\n2\n1\n28\n\n\n1\n66\n1\n2\n4\n\n\n2\n74\n2\n1\n24\n\n\n2\n64\n1\n2\n15\n\n\n2\n70\n1\n1\n10\n\n\n2\n73\n2\n2\n11\n\n\n2\n59\n0\n2\n27\n\n\n2\n60\n2\n2\nNA\n\n\n2\n68\n1\n1\n7\n\n\n2\n76\n2\n2\n-24\n\n\n2\n74\n0\n1\n30\n\n\n2\n63\n1\n1\n10\n\n\n2\n74\n0\n1\n2\n\n\n2\n50\n1\n2\n4\n\n\n2\n72\n1\n2\n9\n\n\n2\n63\n0\n1\n0\n\n\n2\n68\n0\n1\n0\n\n\n2\n58\n0\n1\n7\n\n\n2\n59\n1\n1\n15\n\n\n2\n62\n0\n1\nNA\n\n\n2\n65\n0\n2\n5\n\n\n2\n57\n2\n1\n18\n\n\n2\n58\n1\n2\n10\n\n\n2\n64\n1\n2\n-3\n\n\n2\n75\n2\n2\n8\n\n\n2\n48\n1\n1\n68\n\n\n2\n73\n1\n1\nNA\n\n\n2\n65\n1\n2\n0\n\n\n2\n69\n1\n1\n0\n\n\n2\n68\n2\n1\n8\n\n\n2\n67\n2\n2\n2\n\n\n1\n64\n0\n2\n3\n\n\n2\n68\n0\n1\n0\n\n\n2\n67\n1\n1\n23\n\n\n1\n63\n0\n1\n-1\n\n\n2\n48\n1\n2\n29\n\n\n2\n74\n2\n1\n0\n\n\n2\n40\n1\n1\n3\n\n\n2\n53\n1\n2\n3\n\n\n2\n71\n1\n2\n19\n\n\n2\n51\n0\n2\n0\n\n\n2\n56\n1\n2\n-2\n\n\n2\n81\n0\n1\n15\n\n\n2\n73\n0\n1\n30\n\n\n2\n59\n0\n1\n5\n\n\n2\n55\n1\n1\n15\n\n\n1\n42\n1\n1\n8\n\n\n2\n44\n1\n2\n-1\n\n\n1\n44\n1\n1\n1\n\n\n2\n71\n1\n1\n14\n\n\n2\n62\n1\n2\n1\n\n\n2\n61\n0\n1\n4\n\n\n1\n44\n1\n2\n39\n\n\n2\n72\n2\n1\n2\n\n\n2\n63\n0\n1\n-1\n\n\n2\n70\n1\n1\n23\n\n\n2\n66\n1\n1\n8\n\n\n2\n57\n1\n2\n14\n\n\n1\n69\n0\n2\n13\n\n\n2\n72\n2\n1\n7\n\n\n2\n69\n1\n1\n25\n\n\n2\n71\n1\n1\n0\n\n\n2\n64\n1\n1\n0\n\n\n2\n70\n0\n2\n10\n\n\n1\n58\n0\n2\n15\n\n\n2\n69\n1\n2\n3\n\n\n2\n56\n1\n1\n4\n\n\n2\n63\n1\n1\n0\n\n\n2\n59\n2\n1\n32\n\n\n2\n66\n1\n1\n14\n\n\n1\n54\n1\n2\n-3\n\n\n2\n67\n1\n1\nNA\n\n\n2\n55\n1\n1\n5\n\n\n2\n75\n2\n2\n11\n\n\n2\n69\n0\n1\n10\n\n\n2\n44\n1\n1\n5\n\n\n2\n80\n1\n1\n6\n\n\n2\n75\n0\n2\n1\n\n\n2\n54\n1\n2\n15\n\n\n2\n76\n2\n1\n20\n\n\n2\n49\n2\n1\n20\n\n\n2\n68\n2\n1\n30\n\n\n2\n66\n2\n1\n24\n\n\n2\n80\n1\n1\n11\n\n\n2\n75\n0\n1\n0\n\n\n2\n60\n2\n2\n10\n\n\n2\n69\n1\n2\n0\n\n\n2\n72\n2\n1\n-3\n\n\n2\n70\n0\n1\n17\n\n\n2\n66\n1\n1\n20\n\n\n2\n50\n1\n1\n13\n\n\n2\n64\n1\n1\n0\n\n\n1\n77\n2\n2\n28\n\n\n1\n48\n0\n2\n4\n\n\n2\n59\n1\n2\n52\n\n\n2\n53\n1\n1\n20\n\n\n2\n47\n0\n1\n5\n\n\n1\n55\n1\n2\n49\n\n\n2\n67\n0\n1\n6\n\n\n1\n74\n2\n2\n37\n\n\n2\n58\n1\n2\n0\n\n\n2\n56\n2\n1\nNA\n\n\n2\n54\n1\n1\n-5\n\n\n2\n56\n0\n1\n15\n\n\n2\n73\n2\n2\n-16\n\n\n1\n74\n1\n1\n38\n\n\n2\n76\n2\n1\n8\n\n\n2\n65\n1\n2\n0\n\n\n1\n57\n1\n1\n30\n\n\n1\n53\n1\n2\n2\n\n\n2\n71\n0\n1\n2\n\n\n2\n54\n1\n1\n13\n\n\n2\n82\n0\n1\n27\n\n\n2\n59\n0\n2\n0\n\n\n2\n70\n1\n1\n-2\n\n\n1\n60\n0\n1\n7\n\n\n1\n62\n0\n2\n0\n\n\n2\n53\n1\n2\n4\n\n\n2\n55\n2\n1\n10\n\n\n2\n69\n2\n1\n20\n\n\n1\n68\n1\n2\n7\n\n\n2\n62\n2\n1\n27\n\n\n2\n63\n1\n1\n-2\n\n\n1\n56\n1\n2\n17\n\n\n1\n62\n0\n2\n8\n\n\n2\n44\n1\n2\n2\n\n\n1\n69\n2\n1\n36\n\n\n2\n63\n1\n1\n2\n\n\n1\n64\n1\n1\n16\n\n\n1\n57\n0\n2\n3\n\n\n2\n60\n1\n2\n33\n\n\n2\n46\n0\n1\n4\n\n\n2\n61\n1\n1\n0\n\n\n2\n65\n0\n1\n0\n\n\n1\n61\n1\n1\n2\n\n\n2\n58\n0\n2\n10\n\n\n2\n56\n1\n1\n37\n\n\n1\n43\n0\n2\n6\n\n\n1\n53\n1\n1\n12\n\n\n1\n59\n1\n2\n0\n\n\n2\n56\n2\n1\n-2\n\n\n2\n55\n1\n2\nNA\n\n\n2\n53\n1\n2\n13\n\n\n1\n74\n0\n2\n0\n\n\n1\n60\n0\n1\n5\n\n\n1\n39\n0\n1\n-5\n\n\n2\n66\n0\n2\nNA\n\n\n1\n65\n1\n2\n-1\n\n\n1\n51\n0\n2\n0\n\n\n1\n45\n0\n2\n5\n\n\n2\n72\n2\n2\n20\n\n\n1\n58\n0\n1\n8\n\n\n2\n64\n1\n1\n12\n\n\n2\n53\n0\n1\n8\n\n\n2\n72\n1\n1\n14\n\n\n2\n52\n2\n1\nNA\n\n\n2\n50\n1\n1\nNA\n\n\n1\n64\n1\n1\n33\n\n\n2\n71\n1\n1\n-2\n\n\n1\n70\n0\n1\n6\n\n\n1\n63\n1\n2\n0\n\n\n1\n64\n1\n1\n4\n\n\n1\n52\n0\n2\n0\n\n\n2\n60\n1\n1\n0\n\n\n2\n64\n1\n2\n37\n\n\n2\n73\n1\n1\n5\n\n\n1\n63\n0\n2\n0\n\n\n1\n50\n0\n2\n1\n\n\n1\n63\n0\n2\n0\n\n\n2\n62\n2\n1\nNA\n\n\n1\n55\n0\n2\n23\n\n\n2\n50\n2\n2\n-3\n\n\n1\n69\n1\n1\nNA\n\n\n1\n59\n1\n2\n10\n\n\n1\n60\n0\n2\n-2\n\n\n1\n67\n1\n1\n23\n\n\n1\n69\n1\n1\n0\n\n\n1\n64\n2\n2\n31\n\n\n2\n65\n1\n1\n10\n\n\n1\n65\n1\n1\n18\n\n\n1\n41\n1\n2\n-10\n\n\n2\n76\n2\n1\n7\n\n\n1\n70\n2\n2\n3\n\n\n1\n57\n0\n2\n11\n\n\n1\n67\n1\n1\n2\n\n\n1\n71\n1\n2\n0\n\n\n2\n76\n1\n1\n0\n\n\n1\n77\n1\n1\n3\n\n\n1\n39\n0\n1\n-5\n\n\n1\n75\n2\n2\n5\n\n\n1\n66\n1\n1\n1\n\n\n1\n58\n1\n2\n0\n\n\n\n\n\n\n$data() 메소드 안에서 rows와 cols를 통해 원하는 데이터를 확인할 수 있습니다.\n\ntask_lung$data(rows=1:10, cols=\"status\")\n\n\n\n\n\nstatus\n\n\n\n\n2\n\n\n2\n\n\n1\n\n\n2\n\n\n2\n\n\n1\n\n\n2\n\n\n2\n\n\n2\n\n\n2\n\n\n\n\n\n\n태스크를 data.table 객체로 바꾼다면, 데이터에 있는 모든 변수를 확인할 수도 있습니다.\n\nsummary(as.data.table(task_lung))\n\n status       age           ph.ecog            sex           wt.loss       \n 1: 63   Min.   :39.00   Min.   :0.0000   Min.   :1.000   Min.   :-24.000  \n 2:165   1st Qu.:56.00   1st Qu.:0.0000   1st Qu.:1.000   1st Qu.:  0.000  \n         Median :63.00   Median :1.0000   Median :1.000   Median :  7.000  \n         Mean   :62.45   Mean   :0.9515   Mean   :1.395   Mean   :  9.832  \n         3rd Qu.:69.00   3rd Qu.:1.0000   3rd Qu.:2.000   3rd Qu.: 15.750  \n         Max.   :82.00   Max.   :3.0000   Max.   :2.000   Max.   : 68.000  \n                         NA's   :1                        NA's   :14       \n\n\n\n\n태스크 변환자(Mutators)\n머신러닝을 수행하며, 행과 열들을 선택하는 경우가 종종 있습니다. 예를 들면 train-test split을 위해 행을 선택하는 경우, 모델링에 넣을 피처들을 선택하는 경우가 있겠죠.\nmlr3의 태스크는 행을 선택하는 $filter(), 열을 선택하는 $select() 를 이용해 원하는 조건의 데이터를 추출할 수 있습니다.\n한 가지 주의해야 할 것이 있습니다. $select()와 $filter()는 변환자이기 때문에, 기존의 태스크를 수정하게 됩니다. 다시 말해, 처음에 있던 원래 데이터를 바꿔버리는 것이죠.\n\ntask_iris <- tsk(\"iris\")\ntask_iris$select(c(\"Sepal.Length\",\"Petal.Width\"))\ntask_iris$filter(2:4)\ntask_iris$data()\n\n\n\n\n\nSpecies\nPetal.Width\nSepal.Length\n\n\n\n\nsetosa\n0.2\n4.9\n\n\nsetosa\n0.2\n4.7\n\n\nsetosa\n0.2\n4.6\n\n\n\n\n\n\n이를 방지하기 위해서는 $clone() 메소드를 이용해 새로운 태스크로 복사한 뒤에 행이나 열을 선택하는 작업하시면 됩니다.\n\ntask_iris_copy <- task_iris$clone()\ntask_iris_copy$filter(2)\ntask_iris_copy$data()\n\n\n\n\n\nSpecies\nPetal.Width\nSepal.Length\n\n\n\n\nsetosa\n0.2\n4.9\n\n\n\n\n\n\n\ntask_iris$data()\n\n\n\n\n\nSpecies\nPetal.Width\nSepal.Length\n\n\n\n\nsetosa\n0.2\n4.9\n\n\nsetosa\n0.2\n4.7\n\n\nsetosa\n0.2\n4.6\n\n\n\n\n\n\ntask_iris_copy는 task_iris를 복사한 뒤, 2번째 행을 $filter() 했지만, task_iris의 데이터는 아무 변화가 없는 것을 확인할 수 있습니다."
  },
  {
    "objectID": "posts/mlr3_basic/index.html#learner",
    "href": "posts/mlr3_basic/index.html#learner",
    "title": "mlr3 기초",
    "section": "Learner",
    "text": "Learner\n러너는 클래스는 널리 알려진 많은 머신러닝 패키지들을 통일된 형태로 제공합니다. 태스크와 마찬가지로 mlr_learners dictionary를 통해 확인할 수 있습니다.\n러너는 머신러닝 모델을 학습(train)하고 예측하는 역할을 수행합니다. 태스크에서는 외부 데이터도 태스크로 만들 수 있었던 것과 달리, 러너는 mlr3에서 지원하는 것만 사용할 수 있습니다. mlr3에서 제공하는 러너들은 다음과 같습니다.\n\nas.data.table(mlr_learners) |> head()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nkey\nlabel\ntask_type\nfeature_types\npackages\nproperties\npredict_types\n\n\n\n\nclassif.cv_glmnet\nNA\nclassif\nlogical, integer, numeric\nmlr3 , mlr3learners, glmnet\nmulticlass , selected_features, twoclass , weights\nresponse, prob\n\n\nclassif.debug\nDebug Learner for Classification\nclassif\nlogical , integer , numeric , character, factor , ordered\nmlr3\nhotstart_forward, missings , multiclass , twoclass\nresponse, prob\n\n\nclassif.featureless\nFeatureless Classification Learner\nclassif\nlogical , integer , numeric , character, factor , ordered , POSIXct\nmlr3\nfeatureless , importance , missings , multiclass , selected_features, twoclass\nresponse, prob\n\n\nclassif.glmnet\nNA\nclassif\nlogical, integer, numeric\nmlr3 , mlr3learners, glmnet\nmulticlass, twoclass , weights\nresponse, prob\n\n\nclassif.kknn\nNA\nclassif\nlogical, integer, numeric, factor , ordered\nmlr3 , mlr3learners, kknn\nmulticlass, twoclass\nresponse, prob\n\n\nclassif.lda\nNA\nclassif\nlogical, integer, numeric, factor , ordered\nmlr3 , mlr3learners, MASS\nmulticlass, twoclass , weights\nresponse, prob\n\n\n\n\n\n\n러너의 기본 형태는 Learner입니다. Learner로 시작하는 다양한 러너들이 존재합니다. mlr3의 러너들은 mlr3learners와 mlr3extralearners패키지를 통해 확인 가능합니다.\n\nmlr3learners::LearnerClassifLogReg\n\n<LearnerClassifLogReg> object generator\n  Inherits from: <LearnerClassif>\n  Public:\n    initialize: function () \n    loglik: function () \n    clone: function (deep = FALSE) \n  Private:\n    .train: function (task) \n    .predict: function (task) \n  Parent env: <environment: namespace:mlr3learners>\n  Locked objects: TRUE\n  Locked class: FALSE\n  Portable: TRUE\n\n\n러너의 sugar function은 lrn() 입니다.\n\n\n\n\n\n\nDanger\n\n\n\nmlr3의 러너를 실행하기 위한 패키지가 없다면 아래와 같은 경고 메시지가 뜹니다.\nWarning: Package 'ranger' required but not installed for Learner 'classif.ranger\n패키지를 설치해주시면 간단히 해결됩니다.\n\ninstall.packages(\"ranger\")\n\n\n\n\nlearner_rf <- lrn('classif.ranger', predict_type='prob')\nlearner_rf\n\n<LearnerClassifRanger:classif.ranger>\n* Model: -\n* Parameters: num.threads=1\n* Packages: mlr3, mlr3learners, ranger\n* Predict Types:  response, [prob]\n* Feature Types: logical, integer, numeric, character, factor, ordered\n* Properties: hotstart_backward, importance, multiclass, oob_error,\n  twoclass, weights\n\n\n각 러너들은 아래의 메타데이터를 갖고 있습니다.\n\n$feature_types: 피처들의 유형\n$packages: 모델을 학습시키고 예측하기 위해 필요한 패키지들\n$properties: 해당 러너가 갖고 있는 추가적인 특성. 예를 들어 importance 특성이 있다면 학습 후, 각 피처들의 importance를 추출할 수 있습니다.\n$predict_types: 해당 러너를 활용해 가능한 예측 유형입니다. 분류 유형의 러너는 response와 prob을 출력합니다.\n\n모든 러너들은 두 단계에 걸쳐 진행됩니다.\n\n학습 (Training): $train() 메소드를 통해 학습시키고자 하는 태스크를 전달합니다.\n예측 (Prediction): $predict() 메소드에 학습 때 사용하지 않은 데이터를 사용합니다. 학습 데이터를 기반으로 훈련된 모델이 새로운 데이터를 받아 예측값을 반환합니다.\n\n\n\n\n\n\n\nWarning\n\n\n\n러너가 학습되지 않았다면 $predict() 실행 시 에러가 발생합니다.\n\n\n\ntrain: 학습시키기\n앞서 말했듯이, mlr3에서는 러너에 태스크를 투입하여 모델을 학습시킵니다. 머신러닝에서는 태스크를 투입하기 전, 훈련에 사용할 데이터와 예측에 사용할 데이터를 나누는 것이 일반적입니다.\nmlr3 에서는 $partition() 메소드를 이용해 두 개의 데이터로 나눌 수 있습니다. 기본값은 전체 데이터의 67%를 훈련에, 나머지 33%를 예측에 사용합니다. 물론 이 비율은 ratio 인자 (범위: 0~1)를 통해 변경 가능합니다.\n\ntask_breast <- tsk(\"breast_cancer\")\nsplits <- partition(task_breast, ratio = 0.7)\n\n데이터를 나눠줬으니, 이제 모델을 학습시켜보도록 하겠습니다. 위에서 선언한 랜덤포레스트 러너에서 $train() 메소드를 실행시킵니다. 태스크와 row_ids에는 split 중 train에 해당하는 부분을 입력합니다.\n\nlearner_rf$train(task_breast, \n                 row_ids = split$train)\nlearner_rf$model\n\nRanger result\n\nCall:\n ranger::ranger(dependent.variable.name = task$target_names, data = task$data(),      probability = self$predict_type == \"prob\", case.weights = task$weights$weight,      num.threads = 1L) \n\nType:                             Probability estimation \nNumber of trees:                  500 \nSample size:                      146 \nNumber of independent variables:  9 \nMtry:                             3 \nTarget node size:                 10 \nVariable importance mode:         none \nSplitrule:                        gini \nOOB prediction error (Brier s.):  0.03271318 \n\n\n학습을 시킨 이후, $model 필드를 통해 학습된 결과를 확인할 수 있습니다. 어떤 하이퍼파라미터가 사용되었는지 등의 정보를 확인할 수 있습니다.\n각 러너들은 하이퍼파라미터들을 조정해줄 수 있습니다. 러너들의 파라미터를 확인하는 명령어는 다음과 같습니다.\n\nlearner_rf$param_set\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nclass\nlower\nupper\nlevels\nnlevels\nis_bounded\nspecial_vals\ndefault\nstorage_type\ntags\n\n\n\n\nalpha\nParamDbl\n-Inf\nInf\nNULL\nInf\nFALSE\nNULL\n0.5\nnumeric\ntrain\n\n\nalways.split.variables\nParamUty\nNA\nNA\nNULL\nInf\nFALSE\nNULL\n<environment: 0x00000222240723b0>\nlist\ntrain\n\n\nclass.weights\nParamUty\nNA\nNA\nNULL\nInf\nFALSE\nNULL\nNULL\nlist\ntrain\n\n\nholdout\nParamLgl\nNA\nNA\nTRUE, FALSE\n2\nTRUE\nNULL\nFALSE\nlogical\ntrain\n\n\nimportance\nParamFct\nNA\nNA\nnone , impurity , impurity_corrected, permutation\n4\nTRUE\nNULL\n<environment: 0x00000222241b2340>\ncharacter\ntrain\n\n\nkeep.inbag\nParamLgl\nNA\nNA\nTRUE, FALSE\n2\nTRUE\nNULL\nFALSE\nlogical\ntrain\n\n\n\n\n\n\n현재 학습에 사용된 하이퍼 파라미터들은 values 필드에 저장되어있습니다.\n\nlearner_rf$param_set$values\n\n$num.threads\n[1] 1\n\n\n위와 같이 하이퍼 파라미터에 접근한 뒤, 기존의 값을 원하는 값으로 변경하거나, 새로운 하이퍼파라미터에 값을 설정해줄 수 있습니다.\n\nlearner_rf$param_set$values$num.threads = 10\nlearner_rf$param_set$values$num.trees = 20\nlearner_rf$param_set$values\n\n$num.threads\n[1] 10\n\n$num.trees\n[1] 20\n\n\n또는 lrn() 함수로 러너를 생성할 때, 원하는 하이퍼파라미터를 설정해줄 수 있습니다.\n\nlearner_rf <- lrn('classif.ranger', num.trees= 30)\nlearner_rf$param_set$values\n\n$num.threads\n[1] 1\n\n$num.trees\n[1] 30\n\n\n\nlearner_rf$train(task_breast, row_ids = split$train)\nlearner_rf\n\n<LearnerClassifRanger:classif.ranger>\n* Model: ranger\n* Parameters: num.threads=1, num.trees=30\n* Packages: mlr3, mlr3learners, ranger\n* Predict Types:  [response], prob\n* Feature Types: logical, integer, numeric, character, factor, ordered\n* Properties: hotstart_backward, importance, multiclass, oob_error,\n  twoclass, weights\n\n\n변경된 파라미터가 적용된 것을 확인할 수 있습니다.\n\n\n\n\n\n\nNote\n\n\n\n하이퍼 파라미터에 대한 자세한 설명은 하이퍼파라미터 튜닝에서 더 자세히 다루도록 하겠습니다.\n\n\n\n\npredict: 예측하기\n모델 학습이 완료되었다면, 예측값을 만들어볼 수 있습니다. split의 test 를 이용해 $predict() 메소드를 실행합니다.\n\nprediction <- learner_rf$predict(task_breast, \n                                 row_ids = split$test)\nprediction\n\n<PredictionClassif> for 62 observations:\n    row_ids     truth  response\n          3    benign    benign\n          6 malignant malignant\n         11    benign    benign\n---                            \n        202    benign    benign\n        203    benign    benign\n        206 malignant malignant\n\n\n예측값을 살펴보니, 예측값이 범주로 나타났습니다. 만약 범주에 대한 예측 확률값을 구하고 싶을 경우, lrn()의 predict_type을 prob으로 조정해주면 됩니다.\n\nlearner_rf <- lrn(\"classif.ranger\", \n                  predict_type=\"prob\")\nlearner_rf$train(task_breast, \n                 row_ids = split$train)\nprediction <- learner_rf$predict(task_breast, \n                                 row_ids = split$test)\nprediction\n\n<PredictionClassif> for 62 observations:\n    row_ids     truth  response prob.malignant prob.benign\n          3    benign    benign      0.0008000 0.999200000\n          6 malignant malignant      0.9906405 0.009359524\n         11    benign    benign      0.0000000 1.000000000\n---                                                       \n        202    benign    benign      0.0000000 1.000000000\n        203    benign    benign      0.0000000 1.000000000\n        206 malignant malignant      0.9942667 0.005733333\n\n\nprediction 객체에서는 $confusion 을 이용해 confusion matrix를 확인할 수 있습니다.\n\nprediction$confusion\n\n           truth\nresponse    malignant benign\n  malignant        28      2\n  benign            0     32\n\n\n우리가 만든 모델이 내놓은 예측값에 대한 시각화를 진행해줄 수 있습니다. mlr3viz 패키지의 autoplot() 기능을 이용해주면 됩니다.\nautoplot()에서 type을 어떻게 지정해주는지에 따라 예측값에 시각화가 다르게 나타납니다.\n\nlibrary(mlr3viz)\nautoplot(prediction)\n\n\n\n\n위의 그림은 test 데이터의 실제 target 값과 머신러닝 모델이 예측한 target을 비교한 값입니다.\n그 외에도 분류 계열의 모델에는 AUROC(type=\"roc\" )와 AUPRC(type=\"prc\") 등을 시각화할 수 있습니다.\n\n# install.packages(\"precrec\")\nautoplot(prediction, type=\"roc\")\nautoplot(prediction, type=\"prc\")\n\n\n\n\n\n\nAUROC\n\n\n\n\n \n\n\n\n\n\nAUPRC\n\n\n\n\n\n\n\n\nEvaluation: 성능 평가\n성능 평가는 머신러닝 모델링 과정에서 중요한 단계입니다. 앞서 예측 부분에서 예측값을 시각화로 표현했습니다. 그와 더불에 mlr3에서는 msr() 함수를 이용해 다양한 성능 지표들을 계산하고 비교할 수 있습니다. mlr_measures 딕셔너리를 보면 계산 가능한 지표들이 나와있습니다.\n예를 들어, 분류(classification) 모델에 대한 지표들을 살펴보면 다음과 같습니다.\n\nmlr_measures$keys(\"classif\")\n\n [1] \"classif.acc\"         \"classif.auc\"         \"classif.bacc\"       \n [4] \"classif.bbrier\"      \"classif.ce\"          \"classif.costs\"      \n [7] \"classif.dor\"         \"classif.fbeta\"       \"classif.fdr\"        \n[10] \"classif.fn\"          \"classif.fnr\"         \"classif.fomr\"       \n[13] \"classif.fp\"          \"classif.fpr\"         \"classif.logloss\"    \n[16] \"classif.mauc_au1p\"   \"classif.mauc_au1u\"   \"classif.mauc_aunp\"  \n[19] \"classif.mauc_aunu\"   \"classif.mbrier\"      \"classif.mcc\"        \n[22] \"classif.npv\"         \"classif.ppv\"         \"classif.prauc\"      \n[25] \"classif.precision\"   \"classif.recall\"      \"classif.sensitivity\"\n[28] \"classif.specificity\" \"classif.tn\"          \"classif.tnr\"        \n[31] \"classif.tp\"          \"classif.tpr\"        \n\n\n모델의 성능을 계산하기 위한 지표는 한 가지만 사용할 수 있고, 여러 가지를 사용할수도 있습니다.\n\nmeasure <- msr(\"classif.auc\")\nmeasures <- msrs(c(\"classif.auc\",\"classif.auc\"))\n\n모든 성능 지표들은 예측값과 test 데이터의 실제 값의 차이를 통해 수치화된 값입니다. 이 말은 모델의 성능을 평가하기 위해선, 예측값을 비교하기 위한, 모델 학습에 사용되지 않은 실제값이 필요하다는 것입니다.\n이제, Measure 객체 중 하나인 classif.acc를 통해 위에서 만든 랜덤포레스트 모델의 성능을 평가해보도록 하겠습니다. 지표(measure)를 생성한 뒤, 모델의 예측값 객체(prediction)의 $score() 메소드에 넘겨주면 해당 지표의 성능이 평가됩니다.\n\nmeasure <- msr(\"classif.acc\")\nmeasure\n\n<MeasureClassifSimple:classif.acc>: Classification Accuracy\n* Packages: mlr3, mlr3measures\n* Range: [0, 1]\n* Minimize: FALSE\n* Average: macro\n* Parameters: list()\n* Properties: -\n* Predict type: response\n\n\n\nprediction$score(measure)\n\nclassif.acc \n  0.9677419 \n\n\n\n\n\n\n\n\nNote\n\n\n\n$score()는 measure 없이 사용될 수 있습니다. 이럴 경우, 분류의 경우 기본값인 분류오차(classif.ce)가, 회귀는 평균제곱오차(regr.mse)가 적용됩니다.\n\n\n$score()를 이용해 여러 종류의 성능 지표를 한 번에 계산하는 것도 가능합니다. 예를 들어, 민감도(classif.sensitivity)와 특이도(classif.specificity)를 한번에 계산할 경우,\n\nmeasures <- msrs(c(\"classif.sensitivity\",\"classif.specificity\"))\n\nprediction$score(measures)\n\nclassif.sensitivity classif.specificity \n          1.0000000           0.9411765 \n\n\n뿐만 아니라, mlr3에서는 예측 모델의 품질을 정량화하는 지표로도 모델을 평가할 수 있습니다. 예를 들어, 학습하는 시간과 예측하는 시간을 평가하기 위해선\n\nmeasures <- msrs(c(\"time_train\", \"time_predict\"))\nprediction$score(measures,learner = learner_rf)\n\n  time_train time_predict \n        0.02         0.02 \n\n\n참고로, 위처럼 학습시간과 예측 시간을 평가하기 위해선 학습된 러너를 $score()에 입력해주어야 합니다.\n한편, 일부 지표들은 스스로 하이퍼파라미터를 가지고 있습니다. 대표적인 예로 selected_features 지표가 있습니다. 이 지표는 “selected_features” 속성이 있는 러너에만 사용 가능한 지표로서, 모델이 학습 시 사용한 피처에 대한 정보를 제공해줍니다. 이런 지표의 경우, $score() 에 태스크와 러너를 추가로 입력해주어야 합니다.\n\ntask_boston <- tsk(\"boston_housing\")\nsplits <- partition(task_boston)\nlearner_rpart <- lrn(\"regr.rpart\")\n\nlearner_rpart$train(task_boston, splits$train)\nprediction <- learner_rpart$predict(task_boston, splits$test)\nmeasure <- msr(\"selected_features\")\nprediction$score(measure, task = task_boston, learner = learner_rpart)\n\nselected_features \n                1 \n\n\nselected_features 는 선택된 피처의 수를 정규화해줄 수 있는 하이퍼파라미터를 설정할 수 있습니다.\n\nmeasure <- msr(\"selected_features\", normalize=T)\nprediction$score(measure, task=task_boston, learner = learner_rpart)\n\nselected_features \n       0.05555556"
  },
  {
    "objectID": "posts/mlr3_basic/index.html#레퍼런스",
    "href": "posts/mlr3_basic/index.html#레퍼런스",
    "title": "mlr3 기초",
    "section": "레퍼런스",
    "text": "레퍼런스\n\nhttps://mlr3.mlr-org.com/\nhttps://mlr3book.mlr-org.com/basics.html"
  },
  {
    "objectID": "posts/mlr3_hyperparameter/index.html",
    "href": "posts/mlr3_hyperparameter/index.html",
    "title": "mlr3 하이퍼파라미터 튜닝",
    "section": "",
    "text": "Important\n\n\n\n이 글은 mlr3book1을 참고하여 작성되었습니다."
  },
  {
    "objectID": "posts/mlr3_hyperparameter/index.html#sec-hyperparameter",
    "href": "posts/mlr3_hyperparameter/index.html#sec-hyperparameter",
    "title": "mlr3 하이퍼파라미터 튜닝",
    "section": "4. Hyperparameter tuning",
    "text": "4. Hyperparameter tuning\n\nlrn_rf$param_set\nrequire(paradox)\nlrn_rf <- lrn('classif.ranger',\n              max.depth=to_tune(10,50),\n              mtry = to_tune(5,20),\n              num.trees = to_tune(30,100)\n              )\n\n# ti: TuningInstance\ninstance <- ti(\n  task = task_sonar,\n  learner = lrn_rf,\n  resampling = rsmp('cv',folds=5),\n  measures = msrs(c('classif.sensitivity',\n                    'classif.specificity')),\n  terminator = trm('evals',n_evals=100)\n)\ninstance\ntuner = tnr('random_search')\n\ntuner$optimize(instance)\n\n\nlrn_rf$param_set$values <-  instance$result_learner_param_vals[[1]]\n\nlrn_rf\n\n\nAutoTuner\n\nlrn_xgb <- lrn('classif.xgboost',\n               eta = to_tune(1e-4,1e-2),\n               gamma=to_tune(1e-3,1e-2),\n               max_depth=to_tune(10,50),\n               predict_type='prob'\n               )\n\nat <- auto_tuner(\n  method=tnr('random_search'),\n  learner = lrn_xgb,\n  resampling = rsmp('cv',folds=5),\n  measure = msr('classif.auc'),\n  term_evals = 30\n)\n\nat$train(task_sonar)\n\n\n\nNested Resampling\n\nouter_resampling <- rsmp('cv',folds=3)\n\nrr <- resample(task_sonar, at, outer_resampling, store_models = T)\n\nextract_inner_tuning_results(rr)\nrr$score(measures)\nrr$aggregate(measures)"
  },
  {
    "objectID": "posts/mlr3_hyperparameter/index.html#feature-selection",
    "href": "posts/mlr3_hyperparameter/index.html#feature-selection",
    "title": "mlr3 하이퍼파라미터 튜닝",
    "section": "5. Feature selection",
    "text": "5. Feature selection\n\n5.1. Introduction\nfeature selection의 장점\n\n과적합(overfitting) 감소로 인한 성능 향상\n불필요한 feature에 의존하지 않는 안정된(robust) 모델\n간단함으로 인한 해석의 용이함\n잠재적으로 값비싼 feature 수집 불필요\n\n\n\n5.2. Filters\n\n5.2.1 Filter value 계산\nmlr3filters::mlr_filters dictionary 통해 또는 mlr3filters::flt() 를 이용해 filter 선택 가능.\nFilter 클래스에는 $calculate() 메소드가 존재하는데, filter value와 등수를 내림차순 정렬하여 보여준다.\n예를 들어 information gain filter를 이용하는 경우,\n\nlibrary(mlr3verse)\nfilter <- flt('information_gain')\ntask <- tsk('penguins')\ntask\nfilter$calculate(task)\nfilter\n\n일부 filter들은 hyperparameters가 존재하는데, learner에서 param_set을 변경해주는 것처럼 간단히 변경 가능합니다.\n\nfilter_cor <- flt('correlation')\nfilter_cor$param_set$values <- list(method='spearman')\nfilter_cor$param_set\n\n\n\n5.2.2. Feature importance filters\nimportance 가 있는 모든 모델에서 사용 가능한 filter입니다. ranger와 같은 일부 learner에서는 learner를 만들 때 지정을 해줘야 합니다.\n\nlrn_rf <- lrn('classif.ranger', importance='impurity')\n\n# remove missing values\ntask$filter(which(complete.cases(task$data())))\n\nfilter_imp <- flt('importance', learner=lrn_rf)\nfilter_imp$calculate(task)\nfilter_imp\n\n\n\n5.2.3. Embedded methods\nEmbedded methods는 Learner들로 하여금 예측에 중요한 변수들을 선택하는 방법입니다. 많은 learner들이 이 기능을 갖고 있습니다.\n\ntask <- tsk('penguins')\nlearner <- lrn('classif.rpart')\n\nstopifnot('selected_features' %in% learner$properties)\n\nlearner$train(task)\nlearner$selected_features()\n\nfilter <- flt('selected_features', learner=learner)\nfilter$calculate(task)\nfilter\n\nmodel에 의해 선택된 feature의 점수만 1, 나머지는 0 (dropped features)\n\n\n5.2.4. Filter-based feature selection\nfilter를 통해 각 feature들의 점수가 계산이 되었다면, 다음 모델링 단계에서 feature를 선택하여 학습을 시켜주어야 합니다.\n\ntask <- tsk('penguins')\nlearner <- lrn('classif.rpart')\nfilter <- flt('selected_features', learner=learner)\nfilter$calculate(task)\n\nkeep <- names(which(filter$scores==1))\ntask$select(keep) # column을 선택하기 때문에 select\ntask$feature_names\n\n위의 예시에서는 selected_features를 했기 때문에 0과 1로 구분이 되었지만, 연속형 점수에 대해 filtering 을 할 때는 다음과 같은 방법이 있습니다.\n\n위에서 top N개의 feature 선택하는 경우\n\n\ntask <- tsk('penguins')\nlearner <- lrn('classif.rpart')\nfilter <- flt('information_gain')\nfilter$calculate(task)\n\n# top 3개 선택\nkeep <- names(head(filter$scores,3))\ntask$select(keep)\n\n\nscore가 k 보다 큰 경우\n\n\ntask <- tsk('penguins')\nlearner <- lrn('classif.rpart')\nfilter <- flt('information_gain')\nfilter$calculate(task)\n\n# information gain이 0.5보다 큰 경우\nkeep <- names(which(filter$scores>0.5))\ntask$select(keep)\n\n\n\n\n5.3 Wrapper methods\n모델의 성능을 최적화하는 feature들을 반복적으로 선택합니다. feature들에 순위를 매기는 대신, 일부 feature들만을 사용하여 학습한 뒤, 선택된 성능 지표에 따라 평가하게 됩니다.\n\n5.3.1. 간단한 예시\nmlr3에서는 FSelector를 이용하여 위의 방법을 수행합니다.\n\nlibrary(mlr3fselect)\ninstance <- fselect(\n  method='sequential',\n  task= tsk('penguins'),\n  learner = lrn('classif.rpart'),\n  resampling = rsmp('holdout'),\n  measures = msr('classif.acc')\n)\n\n성능 비교를 위한 feature들의 모든 subset을 확인하기 위해선 아래의 코드로 확인 가능합니다.\n\nas.data.table(instance$archive) \n\n최적의 feature 들을 확인하기 위해서는\n\ninstance$result_feature_set\n\n\n\n5.3.2 FSelectInstance\n\n\n5.3.3. Fselector 클래스\nmlr3fselect::FSelector에는 다양한 종류의 feature 선택 알고리즘이 존재합니다.\n\nRandom Search (mlr3fselect::FSelectorRandomSearch)\nExhaustive Search (mlr3fselect::FSelectorExhaustiveSearch)\nSequential Search (mlr3fselect::FSelectorSequential)\nRecursive Feature Elimination (mlr3fselect::FSelectorRFE)\nDesign Points (mlr3fselect::FSelectorDesignPoints)\nGenetic Search (mlr3fselect::FSelectorGeneticSearch)\nShadow Variable Search (mlr3fselect::FSelectorShadowVariableSearch)"
  },
  {
    "objectID": "posts/mlr3_resampling/index.html",
    "href": "posts/mlr3_resampling/index.html",
    "title": "mlr3 리샘플링 벤치마킹",
    "section": "",
    "text": "Important\n\n\n\n이 글은 mlr3book1을 참고하여 작성되었습니다."
  },
  {
    "objectID": "posts/mlr3_resampling/index.html#resampling-종류",
    "href": "posts/mlr3_resampling/index.html#resampling-종류",
    "title": "mlr3 리샘플링 벤치마킹",
    "section": "Resampling 종류",
    "text": "Resampling 종류\nmlr3 에서 실행가능한 모든 리샘플링 전략은 mlr_resamplings 딕셔너리를 통해 확인가능합니다. 홀드아웃, 교차 검증(CV), 부트스트랩 등이 포함되어있습니다.\n\nas.data.table(mlr_resamplings)\n\n\n\n\n\nkey\nlabel\nparams\niters\n\n\n\n\nbootstrap\nBootstrap\nratio , repeats\n30\n\n\ncustom\nCustom Splits\n\nNA\n\n\ncustom_cv\nCustom Split Cross-Validation\n\nNA\n\n\ncv\nCross-Validation\nfolds\n10\n\n\nholdout\nHoldout\nratio\n1\n\n\ninsample\nInsample Resampling\n\n1\n\n\nloo\nLeave-One-Out\n\nNA\n\n\nrepeated_cv\nRepeated Cross-Validation\nfolds , repeats\n100\n\n\nsubsampling\nSubsampling\nratio , repeats\n30\n\n\n\n\n\n\nparams 열을 보면 resampling을 위한 파라미터들이 나와있습니다. 예를 들어 holdout은 ratio를 통해 어떤 비율로 train, test를 나눌 것인지, cv는 folds를 통해 몇 개로 데이터를 나눌 것인지를 설정해줄 수 있죠."
  },
  {
    "objectID": "posts/mlr3_resampling/index.html#resampling-객체-생성",
    "href": "posts/mlr3_resampling/index.html#resampling-객체-생성",
    "title": "mlr3 리샘플링 벤치마킹",
    "section": "Resampling 객체 생성",
    "text": "Resampling 객체 생성\n리샘플링 객체를 만들어봅시다. 우선 holdout을 이용해 리샘플링을 진행하겠습니다. 리샘플링 객체는 rsmp()를 통해 만들 수 있습니다.\n\nresampling <- rsmp(\"holdout\")\nresampling\n\n<ResamplingHoldout>: Holdout\n* Iterations: 1\n* Instantiated: FALSE\n* Parameters: ratio=0.6667\n\n\n생성한 리샘플링 객체를 확인했을 때, Instantiated: FALSE라고 되어있습니다. 아직 리샘플링을 수행하지 않았기 때문입니다.\n또한 holdout 의 ratio를 정해주지 않았기 문에 2/3가 초기값으로 설정되어있습니다. 즉 데이터의 3분의 2는 훈련에, 3분의 1은 검증에 쓰이게 됩니다. 새로운 리샘플링 객체를 만들 때 holdout 비율을 설정하거나 기존의 객체의 파라미터 값을 수정할 수 있습니다.\n\nresampling <- rsmp(\"holdout\", ratio=0.8)\nresampling$param_set$values <- list(ratio=0.5)\n\nholdout은 성능을 일반화하는 과정을 한 번밖에 수행하지 않습니다. 따라서 좀더 신뢰성 있는 성능 측정을 위해, 가장 많이 사용되는 리샘플링 방법 중 하나인 교차 검증(cv)를 사용하도록 하겠습니다.\n\nresampling <- rsmp(\"cv\", folds=10)"
  },
  {
    "objectID": "posts/mlr3_resampling/index.html#instantiation",
    "href": "posts/mlr3_resampling/index.html#instantiation",
    "title": "mlr3 리샘플링 벤치마킹",
    "section": "Instantiation",
    "text": "Instantiation\n데이터가 들어가 있는 태스크에 대해 리샘플링을 수행하기 위해 리샘플링 객체의 $instantiate() 메소드를 이용해야합니다. 메소드 안에 태스크를 넣어주면 리샘플링이 적용됐다는 의미에서 Instantiated: TRUE가 출력됩니다.\n\ntask <- tsk(\"sonar\")\nresampling$instantiate(task)\nresampling\n\n<ResamplingCV>: Cross-Validation\n* Iterations: 10\n* Instantiated: TRUE\n* Parameters: folds=10"
  },
  {
    "objectID": "posts/mlr3_resampling/index.html#실행",
    "href": "posts/mlr3_resampling/index.html#실행",
    "title": "mlr3 리샘플링 벤치마킹",
    "section": "실행",
    "text": "실행\n리샘플리의 실행은 resample() 을 사용합니다.\n\nlearner <- lrn(\"classif.rpart\", predict_type=\"prob\")\nrr <- resample(task, learner, resampling)\nrr\n\n<ResampleResult> of 10 iterations\n* Task: sonar\n* Learner: classif.rpart\n* Warnings: 0 in 0 iterations\n* Errors: 0 in 0 iterations\n\n\n리샘플링 실행이 완료되었고, rr이라는 객체 안에 리샘플링 결과가 저장되어있습니다. 리샘플링을 통한 모델의 성능 평가는 $score()와 $aggregate() 메소드를 이용합니다.\n$score()와 $aggregate() 모두 Measure 객체를 이용해 성능을 측정합니다. 기본적으로 성능을 측정할 때는 검증을 위한 데이터셋을 활용하게 됩니다.\n우선 정확도(classif.acc)를 통해 모델의 정확도를 평가해보겠습니다.\n\nacc <- rr$score(msr(\"classif.acc\"))\nacc[,.(iteration, classif.acc)]\n\n\n\n\n\niteration\nclassif.acc\n\n\n\n\n1\n0.8571429\n\n\n2\n0.5714286\n\n\n3\n0.7142857\n\n\n4\n0.6190476\n\n\n5\n0.6190476\n\n\n6\n0.8095238\n\n\n7\n0.7142857\n\n\n8\n0.7142857\n\n\n9\n0.8000000\n\n\n10\n0.8000000\n\n\n\n\n\n\n$score()를 통해 모델의 성능을 살펴보니 cv에서 설정한 10번의 반복 별로 성능이 출력되는 것을 알 수 있습니다.\n다음으로 $aggregate()를 이용해 모델의 성능을 살펴보겠습니다. $aggregate()는 반복 때마다 계산된 성능의 평균 값을 계산하여 출력합니다.\n\nrr$aggregate(msr(\"classif.acc\"))\n\nclassif.acc \n  0.7219048 \n\n\n여러 개의 평가 지표로 모델의 성능을 평가할 수도 있습니다.\n\nmeasures <- msrs(c(\"classif.acc\",\n                   \"classif.sensitivity\",\n                   \"classif.specificity\",\n                   \"classif.auc\"))\n\nrr$aggregate(measures)\n\n        classif.acc classif.sensitivity classif.specificity         classif.auc \n          0.7219048           0.7557955           0.7094017           0.7738624"
  },
  {
    "objectID": "posts/mlr3_resampling/index.html#결과-시각화",
    "href": "posts/mlr3_resampling/index.html#결과-시각화",
    "title": "mlr3 리샘플링 벤치마킹",
    "section": "결과 시각화",
    "text": "결과 시각화\nmlr3viz의 autoplot()을 통해 리샘플링 결과를 시각화할 수 있습니다.\n\nrequire(mlr3viz)\nautoplot(rr, measure = msr(\"classif.acc\"), type=\"boxplot\")\nautoplot(rr, measure = msr(\"classif.acc\"), type=\"histogram\")\n\n\n\n\n\n\nBoxplot\n\n\n\n\n \n\n\n\n\n\nHistogram"
  },
  {
    "objectID": "posts/mlr3_resampling/index.html#벤치마킹-설계하기",
    "href": "posts/mlr3_resampling/index.html#벤치마킹-설계하기",
    "title": "mlr3 리샘플링 벤치마킹",
    "section": "벤치마킹 설계하기",
    "text": "벤치마킹 설계하기\nmlr3에서 벤치마크 실험을 진행하기 위해서는 benchmark_grid() 를 이용해 설계를 해줘야 합니다. 이 때 설계라는 것은 어떤 태스크를 사용할 것인지, 어떤 러너들을 어떻게 리샘플링 할 것인지 등을 조합해주는 것입니다.\nsonar 태스크를 예시로, 분류 모형 중 로지스틱 회귀분석 (classif.log_reg), 의사결정나무(classif.rpart), 랜덤 포레스트(classif.ranger) 러너를 5 Fold 교차검증(CV)으로 비교하도록 설계를 진행하겠습니다.\n\nlibrary(mlr3)\nlibrary(mlr3learners)\ntsk <- tsk(\"sonar\")\nlrns <- lrns(c(\"classif.log_reg\",\"classif.rpart\",\"classif.ranger\"),\n                  predict_type=\"prob\")\nrsmp <- rsmps(\"cv\", folds=5)\ndesign <- benchmark_grid(\n  tasks = tsk,\n  learners = lrns,\n  resamplings = rsmp\n)\nhead(design)\n\n\n\n\n\n\n\n\n\n\ntask\nlearner\nresampling\n\n\n\n\n<environment: 0x0000025f49e05ba0>\n<environment: 0x0000025f4a382488>\n<environment: 0x0000025f4c170068>\n\n\n<environment: 0x0000025f49e05ba0>\n<environment: 0x0000025f4bdd1580>\n<environment: 0x0000025f4c170068>\n\n\n<environment: 0x0000025f49e05ba0>\n<environment: 0x0000025f43e9cce0>\n<environment: 0x0000025f4c170068>"
  },
  {
    "objectID": "posts/mlr3_resampling/index.html#벤치마킹-실험하기",
    "href": "posts/mlr3_resampling/index.html#벤치마킹-실험하기",
    "title": "mlr3 리샘플링 벤치마킹",
    "section": "벤치마킹 실험하기",
    "text": "벤치마킹 실험하기\n벤치마크 설계를 실행하기 위해선 benchmark()함수를 이용합니다.\n\nbmr <- benchmark(design)\nbmr\n\n<BenchmarkResult> of 15 rows with 3 resampling runs\n nr task_id      learner_id resampling_id iters warnings errors\n  1   sonar classif.log_reg            cv     5        0      0\n  2   sonar   classif.rpart            cv     5        0      0\n  3   sonar  classif.ranger            cv     5        0      0\n\n\n벤치마킹이 끝났다면, $aggregate() 를 이용해 성능을 검증해보면 됩니다. 분류의 정확도를 예시로 살펴보겠습니다.\n\nacc <- bmr$aggregate(msr(\"classif.acc\"))\nacc[,.(task_id, learner_id, classif.acc)]\n\n\n\n\n\ntask_id\nlearner_id\nclassif.acc\n\n\n\n\nsonar\nclassif.log_reg\n0.6634146\n\n\nsonar\nclassif.rpart\n0.7212544\n\n\nsonar\nclassif.ranger\n0.8462253"
  },
  {
    "objectID": "posts/mlr3_resampling/index.html#벤치마크결과-객체-살펴보기",
    "href": "posts/mlr3_resampling/index.html#벤치마크결과-객체-살펴보기",
    "title": "mlr3 리샘플링 벤치마킹",
    "section": "벤치마크결과 객체 살펴보기",
    "text": "벤치마크결과 객체 살펴보기\n벤치마크결과(BenchmarkResult) 객체는 리샘플링결과(ResampleResult) 객체의 집합입니다. 이 객체는 $resample_result(i) 메소드를 이용해 리샘플링 결과를 추출할 수 있습니다. 이 때, i는 벤치마크 실험번호를 의미합니다. 위의 예시는 세 가지 러너로 벤치마킹을 했기 때문에, i는 러너를 의미합니다.\n\nrr_lr <- bmr$resample_result(1)\nrr_rpart <- bmr$resample_result(2)\nrr_ranger <- bmr$resample_result(3)\nrr_lr\n\n<ResampleResult> of 5 iterations\n* Task: sonar\n* Learner: classif.log_reg\n* Warnings: 0 in 0 iterations\n* Errors: 0 in 0 iterations\n\n\n\nrr_ranger\n\n<ResampleResult> of 5 iterations\n* Task: sonar\n* Learner: classif.ranger\n* Warnings: 0 in 0 iterations\n* Errors: 0 in 0 iterations\n\n\nResampleResult 객체들은 as_benchmark_result() 함수를 이용해 다시 BenchmarkResult로 변환될 수 있습니다. 또한 c()를 이용해 묶을 수 있습니다.\n\nbmr1 = as_benchmark_result(rr_rpart)\nbmr2 = as_benchmark_result(rr_ranger)\n\nbmr_combined = c(bmr1, bmr2)\nbmr_combined$aggregate(msr(\"classif.acc\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnr\nresample_result\ntask_id\nlearner_id\nresampling_id\niters\nclassif.acc\n\n\n\n\n1\n<environment: 0x0000025f5700bbf0>\nsonar\nclassif.rpart\ncv\n5\n0.7212544\n\n\n2\n<environment: 0x0000025f57031ab8>\nsonar\nclassif.ranger\ncv\n5\n0.8462253\n\n\n\n\n\n\n\nlibrary(mlr3viz)\nautoplot(bmr, measure=msr(\"classif.acc\"))"
  },
  {
    "objectID": "posts/regular expression/index.html",
    "href": "posts/regular expression/index.html",
    "title": "stringr을 이용한 문자 추출하기",
    "section": "",
    "text": "아래와 같은 문자열 데이터가 있다고 가정해봅시다.\n\n\n [1] \"                         location         age year  sales\"\n [2] \"1          South-East Asia Region   <20 years 2002 0.01\"  \n [3] \"2      Western Sub-Saharan Africa 20-24 years 2010 0.04\"  \n [4] \"3      Commonwealth Middle Income 40-44 years 2003 0.18\"  \n [5] \"4                  Eastern Europe 45-49 years 2008 0.37\"  \n [6] \"5  World Bank Lower Middle Income   <20 years 2005 0.01\"  \n [7] \"6                         Oceania 45-49 years 2006 0.26\"  \n [8] \"7      Commonwealth Middle Income 55-59 years 2004 0.30\"  \n [9] \"8      Western Sub-Saharan Africa 30-34 years 1997 0.04\"  \n[10] \"9        High-income Asia Pacific 65-74 years 2000 0.24\"  \n\n\n비록 문자 형태의 벡터이지만, 열 단위로 묶인 데이터프레임의 형태를 띄고 있습니다.\n저 문자열 속에서 location, age, year, sales 를 나눠 데이터프레임으로 만들어주려면 (일일이 복붙하면서 데이터프레임으로 선언하는 노가다를 해야 합니다) 정규표현식(Regular expression)을 사용해야 합니다.\n정규표현식 규칙은 크게 다음과 같습니다.\n\n숫자: \\\\d 또는 [:digit:]\n문자: [:alpha:]\n숫자 또는 문자: [:alnum:]\n0개 이상: *\n한 개 이상: +\n시작하는 단어: ^\n끝나는 단어: $\n구두점 등의 특수문자: [:punct:] 또는 [:symbol:] 또는 \\\\특수기호\nR에서 특수문자 정규표현식을 찾을 때, 사용될 특수문자에 따라 [:punct:] 또는 [:symbol:]을 사용해야 합니다.\n\nlibrary(stringi)\nascii <- stri_enc_fromutf32(1:127)\nmessage(\"Punct: \", stri_extract_all_regex(ascii, \"[[:punct:]]\")[[1]])\nmessage(\"Symbol: \", stri_extract_all_regex(ascii, \"[[:symbol:]]\")[[1]])\n\n\n\n\n여러 가지 규칙을 한 번에 찾을 때, 규칙이 긴 것부터 찾는다. 다시 말해 찾고자 하는 단어가 긴 단어의 규칙을 먼저 입력해야 한다.\n\n여러 개의 패턴을 적용할 때 | 을 단위로 정규표현식을 찾아줄 수가 있습니다. paste() 또는 paste0() 함수의 collapse를 이용하여 여러 패턴을 붙여줄 수 있습니다.\n자 이제 처음에 보여드렸던 문자 데이터에서 각각의 데이터를 추출하여 데이터프레임으로 만들어보겠습니다. 가장 먼저 location 입니다.\n지역이 굉장히 다양하고, 또 단어마다 규칙들이 많아 찾기가 어려운 규칙입니다.\n\nlibrary(stringr)\nf <- \"[:alpha:]+ [:alpha:]+ [:alpha:]+ [:alpha:]+ [:alpha:]+\"\ng <- \"[:alpha:]+-[:alpha:]+ [:alpha:]+ - [:alpha:]+\"\nd <- \"[:alpha:]+-[:alpha:]+ [:alpha:]+ [:alpha:]+\"\nh <- \"[:alpha:]+ [:alpha:]+-[:alpha:]+ [:alpha:]+\"\na <-  \"[:alpha:]+ [:alpha:]+ [:alpha:]+\"\nc <- \"[:alpha:]+ [:alpha:]+-[:alpha:]+\"\ne <- \"[:alpha:]+ [:alpha:]+\"\nb <-  \"[:alpha:]+\"\nptrn_loc <- paste0(c(f,g,d,h,a,c,e,b),collapse = \"|\")\n\nloc <- str_extract(\n  string = temp[2:length(temp)],\n  pattern = ptrn_loc)\n\nhead(loc)\n\n[1] \"South-East Asia Region\"         \"Western Sub-Saharan Africa\"    \n[3] \"Commonwealth Middle Income\"     \"Eastern Europe\"                \n[5] \"World Bank Lower Middle Income\" \"Oceania\"                       \n\n\n다음은 age를 찾아보겠습니다. age를 살펴보면, 네 가지 정도로 분류할 수 있습니다. 50-54 형태, 80+ 형태 <20 형태, 그리고 All ages가 있죠.\n\naa <- \"[:digit:]{2}-[:digit:]{2} years\"\nbb <- \"\\\\<[:digit:]{2}+ years\"\ncc <- \"[:digit:]{2}\\\\+ years\"\ndd <- \"All ages\" # all ages\nptrn_age <- paste0(c(aa,bb,cc,dd),collapse = \"|\")\nages <- str_extract(\n  string = temp[2:length(temp)],\n  pattern = ptrn_age\n)\n\nhead(ages)\n\n[1] \"<20 years\"   \"20-24 years\" \"40-44 years\" \"45-49 years\" \"<20 years\"  \n[6] \"45-49 years\"\n\n\n나머지 year와 sales는 앞의 두 가지보다 간단합니다.\n\nyear <- str_extract(\n  string = temp[2:length(temp)],\n  pattern = \"[:digit:]{4}\"\n) |> as.numeric()\n\nhead(year)\n\n[1] 2002 2010 2003 2008 2005 2006\n\nsales <- str_extract(\n  string = temp[2:length(temp)],\n  pattern = \"[:digit:]{1}\\\\.[:digit:]{2}\"\n) |> as.numeric()\n\nhead(sales)\n\n[1] 0.01 0.04 0.18 0.37 0.01 0.26\n\n\n이제 위에서 추출한 loc, ages, year, sales를 하나의 데이터프레임으로 만들어주면 끝입니다.\n\ndf <- data.frame(\n  location = loc,\n  age = ages,\n  year = year,\n  sales = sales\n)\n\nhead(df)\n\n\n\n\n\nlocation\nage\nyear\nsales\n\n\n\n\nSouth-East Asia Region\n<20 years\n2002\n0.01\n\n\nWestern Sub-Saharan Africa\n20-24 years\n2010\n0.04\n\n\nCommonwealth Middle Income\n40-44 years\n2003\n0.18\n\n\nEastern Europe\n45-49 years\n2008\n0.37\n\n\nWorld Bank Lower Middle Income\n<20 years\n2005\n0.01\n\n\nOceania\n45-49 years\n2006\n0.26\n\n\n\n\n\n\n\n레퍼런스\n\nhttps://continuous-development.tistory.com/33\nhttps://stackoverflow.com/questions/26348643/r-regex-with-stringi-icu-why-is-a-considered-a-non-punct-character"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Posts",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nmlr3 하이퍼파라미터 튜닝\n\n\n\n\n\n\n\nR\n\n\nmlr3\n\n\nmachine learning\n\n\n\n\nmlr3를 이용한 하이퍼파라미터 튜닝 학습\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\n학습관점에서 비교하는 dplyr과 data.table\n\n\n\n\n\n\n\ndata.table\n\n\ndplyr\n\n\nR\n\n\n\n\n\n\n\n\n\n\n\n\nFeb 27, 2023\n\n\n\n\n\n\n  \n\n\n\n\nmlr3 리샘플링 벤치마킹\n\n\n\n\n\n\n\nmlr3\n\n\nR\n\n\nmachine learning\n\n\n\n\n여러 모델 동시 학습 및 성능비교\n\n\n\n\n\n\nFeb 24, 2023\n\n\n\n\n\n\n  \n\n\n\n\nstringr을 이용한 문자 추출하기\n\n\n\n\n\n\n\nR\n\n\nregex\n\n\nstringr\n\n\n\n\n정규표현식을 사용한 규칙 찾기\n\n\n\n\n\n\nFeb 23, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot2 facet label 설정\n\n\n\n\n\n\n\nR\n\n\nggplot2\n\n\nfacet\n\n\n\n\nggplot에서 facet을 사용할 때 label을 변경하는 방법에 대해 알아봅시다.\n\n\n\n\n\n\nFeb 22, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndata.table 1.14.9 업데이트\n\n\n\n\n\n\n\nR\n\n\ndata.table\n\n\n\n\ndata.table 1.14.9 버전에서 업데이트 될 내용을 살펴봅시다.\n\n\n\n\n\n\nFeb 21, 2023\n\n\n\n\n\n\n  \n\n\n\n\nmlr3 기초\n\n\n\n\n\n\n\nmlr3\n\n\nR\n\n\nmachine learning\n\n\n\n\nmlr3에 대한 소개 및 mlr3를 사용하기 위한 필수문법에 대해 소개합니다.\n\n\n\n\n\n\nFeb 20, 2023\n\n\n\n\n\n\n  \n\n\n\n\nImputation의 종류\n\n\n\n\n\n\n\nR\n\n\nimputation\n\n\nmice\n\n\n\n\nmice를 이용한 multiple imputation\n\n\n\n\n\n\nFeb 18, 2023\n\n\n\n\n\n\n  \n\n\n\n\nggplot 세부 조정: 축 조정\n\n\n\n\n\n\n\nR\n\n\nggplot2\n\n\nvisualization\n\n\n\n\n그래프와 축 간격을 조정하거나 tick 간격을 변경하는 방법\n\n\n\n\n\n\nFeb 12, 2023\n\n\n\n\n\n\n  \n\n\n\n\nggsignif: 통계적 유의성 시각화\n\n\n\n\n\n\n\nR\n\n\nggplot2\n\n\nvisualization\n\n\nggsignif\n\n\n\n\n그래프에 통계적 유의성(p-value) 출력\n\n\n\n\n\n\nFeb 12, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDataExplorer을 활용한 EDA\n\n\n\n\n\n\n\nEDA\n\n\nR\n\n\n\n\nDataExplorer를 통한 탐색적 데이터 분석\n\n\n\n\n\n\nFeb 9, 2023\n\n\n\n\n\n\n  \n\n\n\n\ntidyr로 Pivoting하기\n\n\n\n\n\n\n\nR\n\n\ndplyr\n\n\ntidyr\n\n\n\n\ntidyr을 이용해 데이터의 형태를 바꾸는 pivoting에 대해 알아봅시다.\n\n\n\n\n\n\nFeb 3, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndplyr 심화: across()\n\n\n\n\n\n\n\ndplyr\n\n\nR\n\n\n\n\nacross()로 배우는 열 동시 처리\n\n\n\n\n\n\nFeb 2, 2023\n\n\n\n\n\n\n  \n\n\n\n\nggplot에서 두 번째 y축 그리기\n\n\n\n\n\n\n\nggplot2\n\n\nR\n\n\nVisualization\n\n\naxis\n\n\n\n\nggplot으로 그래프에 두 개의 y축을 활용하는 방법을 배우기\n\n\n\n\n\n\nFeb 2, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndplyr 기초 문법 이해하기\n\n\n\n\n\n\n\ndplyr\n\n\nR\n\n\n\n\n파이프 연산자와 함께 dplyr 필수 함수들과 문법을 알아봅시다.\n\n\n\n\n\n\nFeb 1, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndplyr group_by\n\n\n\n\n\n\n\ndplyr\n\n\nR\n\n\n\n\ndplyr를 활용한 그룹별 데이터 처리\n\n\n\n\n\n\nFeb 1, 2023\n\n\n\n\n\n\n  \n\n\n\n\nR에서 색상 다루기\n\n\n\n\n\n\n\ncolor\n\n\nR\n\n\nvisualization\n\n\n\n\n데이터 시각화를 진행할 때, 그래프에 적절한 색상을 선택하는 방법을 살펴봅시다.\n\n\n\n\n\n\nJan 25, 2023\n\n\n\n\n\n\n  \n\n\n\n\nQuarto 사용법\n\n\nQuarto, a substitute of Rmarkdown\n\n\n\n\nQuarto\n\n\nR\n\n\n\n\nBrief intorduction of Quarto\n\n\n\n\n\n\nJan 19, 2023\n\n\n\n\n\n\n  \n\n\n\n\nR 기초 이해\n\n\n\n\n\n\n\nR\n\n\ndata.frame\n\n\n\n\nR 사용을 위한 필수 개념 및 함수을 배워봅시다.\n\n\n\n\n\n\nJan 19, 2023\n\n\n\n\n\n\n  \n\n\n\n\nggplot boxplot 그리기\n\n\n\n\n\n\n\nggplot2\n\n\nR\n\n\nVisualization\n\n\nboxplot\n\n\n\n\nggplot으로 boxplot 그리는 방법\n\n\n\n\n\n\nJan 19, 2023\n\n\n\n\n\n\n  \n\n\n\n\ndata.table 심화\n\n\n\n\n\n\n\ndata.table\n\n\nR\n\n\n\n\n특수 기호, 조인, 피봇 등 data.table에서 다루는 심화내용을 살펴봅시다.\n\n\n\n\n\n\nJan 19, 2023\n\n\n\n\n\n\n  \n\n\n\n\ndata.table 기초 문법\n\n\n\n\n\n\n\ndata.table\n\n\nR\n\n\n\n\ndata.table 문법, 연산자, 함수\n\n\n\n\n\n\nJan 18, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservable.js\n\n\n\n\n\n\n\nOJS\n\n\nVisualization\n\n\njavascript\n\n\n\n\nInteractive chart with ojs\n\n\n\n\n\n\nJan 1, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#gallery",
    "href": "index.html#gallery",
    "title": "Welcome to the blog of Rchemist",
    "section": "Gallery",
    "text": "Gallery\n\n\n\n\n\n\n\nGallery\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot2를 활용한 forestplot 그리기\n\n\n\n\n\n\n\n\n\nJan 1, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "gallery/ggplot2_forestplot/index.html",
    "href": "gallery/ggplot2_forestplot/index.html",
    "title": "ggplot2를 활용한 forestplot 그리기",
    "section": "",
    "text": "ggplot2 를 이용한 예쁜 forest plot 만들기\n\ndf_data <- data.frame(Cancer=c(\"Brain\", \"Colorectal\", \"Kidney clear cell carcinoma\", \"Kidney renal papillary carcinoma\"),\n                      OR=c(1.03, 0.98, 1.27, 1.22),\n                      OR_lower=c(0.97, 0.62, 1.16, 1.03),\n                      OR_upper=c(1.09, 1.55, 1.38, 1.45)\n                      )\n\n### Visualize\n\nif (!require('ggplot2')) install.packages('ggplot2'); library('ggplot2')   # Load ggplot2 library\n\n\n\np <- ggplot(df_data, aes(x=Cancer, y=OR, ymin=OR_lower, ymax=OR_upper)) + \n  geom_linerange(size=8, colour=\"#a6d8f0\") +\n  geom_hline(aes(x=0, yintercept=1), lty=1) +\n  geom_point(size=3, shape=21, fill=\"#008fd5\", colour = \"white\", stroke = 1) +\n  scale_y_continuous(limits = c(0.5, 2)) +\n  coord_flip() +\n  ggtitle(\"Odds ratio for Gene of Interest\") +\n  theme_minimal()\np"
  },
  {
    "objectID": "gallery/index.html",
    "href": "gallery/index.html",
    "title": "Gallery",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "posts/index.html",
    "href": "posts/index.html",
    "title": "Posts",
    "section": "",
    "text": "No matching items"
  }
]