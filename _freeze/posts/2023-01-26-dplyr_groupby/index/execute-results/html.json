{
  "hash": "07f8984700d120f6c70eb5b901147288",
  "result": {
    "markdown": "---\ntitle: \"dplyr group_by\"\ndescription:  \"dplyr를 활용한 그룹별 데이터 처리\"\ndate: '2023-02-01'\ncategories: [dplyr, R]\n---\n\n\n### `group_by()` : 그룹별 계산\n\n`group_by()`는 특정 집단의 범주별로 어떤 값들을 요약하거나 계산할 때 많이 활용되는 함수입니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nstarwars %>%\n  group_by(species, sex) %>%\n  select(height, mass) %>%\n  summarise(\n    height = mean(height, na.rm = TRUE),\n    mass = mean(mass, na.rm = TRUE)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 41 × 4\n# Groups:   species [38]\n   species   sex    height  mass\n   <chr>     <chr>   <dbl> <dbl>\n 1 Aleena    male      79   15  \n 2 Besalisk  male     198  102  \n 3 Cerean    male     198   82  \n 4 Chagrian  male     196  NaN  \n 5 Clawdite  female   168   55  \n 6 Droid     none     131.  69.8\n 7 Dug       male     112   40  \n 8 Ewok      male      88   20  \n 9 Geonosian male     183   80  \n10 Gungan    male     209.  74  \n# … with 31 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nby_species <- starwars |> group_by(species)\nby_sex_gender <- starwars |> group_by(sex,gender)\n```\n:::\n\n\n출력했을 때, 데이터가 그룹으로 묶인 것을 알 수 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_species\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 14\n# Groups:   species [38]\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Luke Skywa…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n 2 C-3PO          167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n 3 R2-D2           96    32 <NA>    white,… red        33   none  mascu… Naboo  \n 4 Darth Vader    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n 5 Leia Organa    150    49 brown   light   brown      19   fema… femin… Aldera…\n 6 Owen Lars      178   120 brown,… light   blue       52   male  mascu… Tatooi…\n 7 Beru White…    165    75 brown   light   blue       47   fema… femin… Tatooi…\n 8 R5-D4           97    32 <NA>    white,… red        NA   none  mascu… Tatooi…\n 9 Biggs Dark…    183    84 black   light   brown      24   male  mascu… Tatooi…\n10 Obi-Wan Ke…    182    77 auburn… fair    blue-g…    57   male  mascu… Stewjon\n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n```\n:::\n\n```{.r .cell-code}\nby_sex_gender\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 14\n# Groups:   sex, gender [6]\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Luke Skywa…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n 2 C-3PO          167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n 3 R2-D2           96    32 <NA>    white,… red        33   none  mascu… Naboo  \n 4 Darth Vader    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n 5 Leia Organa    150    49 brown   light   brown      19   fema… femin… Aldera…\n 6 Owen Lars      178   120 brown,… light   blue       52   male  mascu… Tatooi…\n 7 Beru White…    165    75 brown   light   blue       47   fema… femin… Tatooi…\n 8 R5-D4           97    32 <NA>    white,… red        NA   none  mascu… Tatooi…\n 9 Biggs Dark…    183    84 black   light   brown      24   male  mascu… Tatooi…\n10 Obi-Wan Ke…    182    77 auburn… fair    blue-g…    57   male  mascu… Stewjon\n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n```\n:::\n:::\n\n\n`tally()` 를 이용해 그룹별 n수를 파악할 수도 있습니다.\n\n`sort` 인자를 통해서 그룹 수가 많은 순서대로 정렬할 수 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_species |> tally()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 38 × 2\n   species       n\n   <chr>     <int>\n 1 Aleena        1\n 2 Besalisk      1\n 3 Cerean        1\n 4 Chagrian      1\n 5 Clawdite      1\n 6 Droid         6\n 7 Dug           1\n 8 Ewok          1\n 9 Geonosian     1\n10 Gungan        3\n# … with 28 more rows\n```\n:::\n\n```{.r .cell-code}\nby_sex_gender |> \n  tally(sort=T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n# Groups:   sex [5]\n  sex            gender        n\n  <chr>          <chr>     <int>\n1 male           masculine    60\n2 female         feminine     16\n3 none           masculine     5\n4 <NA>           <NA>          4\n5 hermaphroditic masculine     1\n6 none           feminine      1\n```\n:::\n:::\n\n\n`group_by()` 안에서 새로운 변수를 만들어 그룹별 계산을 진행할 수도 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |> \n  group_by(bmi_cat = cut(mass/(height/100)^2, breaks = c(0,18,23,25,30,Inf))) |> \n  tally()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  bmi_cat      n\n  <fct>    <int>\n1 (0,18]       9\n2 (18,23]     11\n3 (23,25]     14\n4 (25,30]     13\n5 (30,Inf]    12\n6 <NA>        28\n```\n:::\n:::\n\n\n### 그룹 변수 정보 확인\n\n그룹 변수를 지정해준 경우, `group_keys()` 를 통해 그룹 변수의 범주를 확인할 수 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_species |> group_keys()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 38 × 1\n   species  \n   <chr>    \n 1 Aleena   \n 2 Besalisk \n 3 Cerean   \n 4 Chagrian \n 5 Clawdite \n 6 Droid    \n 7 Dug      \n 8 Ewok     \n 9 Geonosian\n10 Gungan   \n# … with 28 more rows\n```\n:::\n:::\n\n\n그룹 변수의 이름만 확인할 때는 `group_vars()` 를 사용합니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_sex_gender |> group_vars()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"sex\"    \"gender\"\n```\n:::\n:::\n\n\n### 그룹 변수 변경 및 추가\n\n기존의 그룹처리 되어있는 데이터에 `group_by()` 를 진행할 시, 새로운 그룹 변수로 덮어씌워집니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_species |> \n  group_by(homeworld) |> \n  tally()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 49 × 2\n   homeworld          n\n   <chr>          <int>\n 1 Alderaan           3\n 2 Aleen Minor        1\n 3 Bespin             1\n 4 Bestine IV         1\n 5 Cato Neimoidia     1\n 6 Cerea              1\n 7 Champala           1\n 8 Chandrila          1\n 9 Concord Dawn       1\n10 Corellia           2\n# … with 39 more rows\n```\n:::\n:::\n\n\n`.add=T` 인자를 추가할 경우, 새로운 그룹 변수를 추가할 수도 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_species |> \n  group_by(homeworld, .add=T) |> \n  tally()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 58 × 3\n# Groups:   species [38]\n   species  homeworld       n\n   <chr>    <chr>       <int>\n 1 Aleena   Aleen Minor     1\n 2 Besalisk Ojom            1\n 3 Cerean   Cerea           1\n 4 Chagrian Champala        1\n 5 Clawdite Zolan           1\n 6 Droid    Naboo           1\n 7 Droid    Tatooine        2\n 8 Droid    <NA>            3\n 9 Dug      Malastare       1\n10 Ewok     Endor           1\n# … with 48 more rows\n```\n:::\n:::\n\n\n### 그룹 변수 제거\n\n그룹 처리된 데이터를 제거하고 싶은 경우, `ungroup()` 을 사용합니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_species |> \n  ungroup() |> \n  tally()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n      n\n  <int>\n1    87\n```\n:::\n:::\n\n\n물론 특정 그룹 변수만 제외할 수도 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_sex_gender |> \n  ungroup(sex) |> \n  tally()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  gender        n\n  <chr>     <int>\n1 feminine     17\n2 masculine    66\n3 <NA>          4\n```\n:::\n:::\n\n\n### `group_by()`와 함께 쓰는 동사\n\n#### 1. `summarise()`\n\n`summarise()`와 `group_by()`가 함께 사용될 경우, 그룹별로 요약 계산을 수행합니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_species |> \n  summarise(\n    n=n(),\n    mean_height = mean(height,na.rm=T)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 38 × 3\n   species       n mean_height\n   <chr>     <int>       <dbl>\n 1 Aleena        1         79 \n 2 Besalisk      1        198 \n 3 Cerean        1        198 \n 4 Chagrian      1        196 \n 5 Clawdite      1        168 \n 6 Droid         6        131.\n 7 Dug           1        112 \n 8 Ewok          1         88 \n 9 Geonosian     1        183 \n10 Gungan        3        209.\n# … with 28 more rows\n```\n:::\n:::\n\n\n.groups= 인자는 출력되는 결과의 그룹 구조를 다루는 인자입니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_sex_gender |> \n  summarise(n=n(), .groups = 'keep')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n# Groups:   sex, gender [6]\n  sex            gender        n\n  <chr>          <chr>     <int>\n1 female         feminine     16\n2 hermaphroditic masculine     1\n3 male           masculine    60\n4 none           feminine      1\n5 none           masculine     5\n6 <NA>           <NA>          4\n```\n:::\n\n```{.r .cell-code}\nby_sex_gender |> \n  summarise(n=n(), .groups = 'drop')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  sex            gender        n\n  <chr>          <chr>     <int>\n1 female         feminine     16\n2 hermaphroditic masculine     1\n3 male           masculine    60\n4 none           feminine      1\n5 none           masculine     5\n6 <NA>           <NA>          4\n```\n:::\n:::\n\n\n#### 2. `select()`, `rename()`, `relocate()`\n\n`rename()`과 `relocate()`는 `group_by()`와 관계없이 동일한 작업을 수행합니다. 각각 열의 이름과 위치에만 영향을 미치게 때문입니다.\n\n`select()`가 `group_by()`와 함께 쓰이면 그룹 변수가 항상 함께 선택됩니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_species |> select(mass)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 2\n# Groups:   species [38]\n   species  mass\n   <chr>   <dbl>\n 1 Human      77\n 2 Droid      75\n 3 Droid      32\n 4 Human     136\n 5 Human      49\n 6 Human     120\n 7 Human      75\n 8 Droid      32\n 9 Human      84\n10 Human      77\n# … with 77 more rows\n```\n:::\n:::\n\n\n그룹 변수가 함께 선택되는 것을 원치 않는다면 `ungroup()`을 먼저 사용해야 합니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_species |> ungroup() |> select(mass)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 1\n    mass\n   <dbl>\n 1    77\n 2    75\n 3    32\n 4   136\n 5    49\n 6   120\n 7    75\n 8    32\n 9    84\n10    77\n# … with 77 more rows\n```\n:::\n:::\n\n\n#### 3. `arrange()`\n\n`arrange()`가 `group_by()`와 함께 쓰일 경우, 그냥 사용하게 되면 `group_by()` 가 없을 때와 동일합니다. 그러나 `.by_group=T` 인자를 통해 그룹 변수를 기준으로 정렬되어 결과가 출력됩니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_species |> \n  arrange(desc(mass)) |> \n  relocate(species, mass)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 14\n# Groups:   species [38]\n   species     mass name     height hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender\n   <chr>      <dbl> <chr>     <int> <chr>   <chr>   <chr>     <dbl> <chr> <chr> \n 1 Hutt        1358 Jabba D…    175 <NA>    green-… orange    600   herm… mascu…\n 2 Kaleesh      159 Grievous    216 none    brown,… green,…    NA   male  mascu…\n 3 Droid        140 IG-88       200 none    metal   red        15   none  mascu…\n 4 Human        136 Darth V…    202 none    white   yellow     41.9 male  mascu…\n 5 Wookiee      136 Tarfful     234 brown   brown   blue       NA   male  mascu…\n 6 Human        120 Owen La…    178 brown,… light   blue       52   male  mascu…\n 7 Trandoshan   113 Bossk       190 none    green   red        53   male  mascu…\n 8 Wookiee      112 Chewbac…    228 brown   unknown blue      200   male  mascu…\n 9 Human        110 Jek Ton…    180 brown   fair    blue       NA   male  mascu…\n10 Besalisk     102 Dexter …    198 none    brown   yellow     NA   male  mascu…\n# … with 77 more rows, 4 more variables: homeworld <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year\n```\n:::\n\n```{.r .cell-code}\nby_species |> \n  arrange(desc(mass), .by_group = T) |> \n  relocate(species, mass)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 14\n# Groups:   species [38]\n   species   mass name       height hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender\n   <chr>    <dbl> <chr>       <int> <chr>   <chr>   <chr>     <dbl> <chr> <chr> \n 1 Aleena      15 Ratts Tye…     79 none    grey, … unknown      NA male  mascu…\n 2 Besalisk   102 Dexter Je…    198 none    brown   yellow       NA male  mascu…\n 3 Cerean      82 Ki-Adi-Mu…    198 white   pale    yellow       92 male  mascu…\n 4 Chagrian    NA Mas Amedda    196 none    blue    blue         NA male  mascu…\n 5 Clawdite    55 Zam Wesell    168 blonde  fair, … yellow       NA fema… femin…\n 6 Droid      140 IG-88         200 none    metal   red          15 none  mascu…\n 7 Droid       75 C-3PO         167 <NA>    gold    yellow      112 none  mascu…\n 8 Droid       32 R2-D2          96 <NA>    white,… red          33 none  mascu…\n 9 Droid       32 R5-D4          97 <NA>    white,… red          NA none  mascu…\n10 Droid       NA R4-P17         96 none    silver… red, b…      NA none  femin…\n# … with 77 more rows, 4 more variables: homeworld <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year\n```\n:::\n:::\n\n\n#### 4. `mutate()`, `transmute()`\n\ngroup_by()와 함께 새로운 변수를 생성할 경우, 같은 그룹의 경우 동일한 값이 들어가게 됩니다.\n\n#### 5. `filter()`\n\n`filter()`와 `group_by()`를 함께 사용하여, 특정 그룹의 수를 기준으로 선택할 때 사용할 수 있습니다.\n\n아래의 예시에서는 그룹 별 수가 1인 경우를 모두 제외하고 선택한 결과입니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nby_species |> \n  filter(n()!=1) |> \n  tally()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 2\n  species      n\n  <chr>    <int>\n1 Droid        6\n2 Gungan       3\n3 Human       35\n4 Kaminoan     2\n5 Mirialan     2\n6 Twi'lek      2\n7 Wookiee      2\n8 Zabrak       2\n9 <NA>         4\n```\n:::\n:::\n\n\n#### 6. `slice()`\n\nslice()와 slice() 계열 함수들이 group_by() 와 함께 사용될 경우, 그룹별로 해당되는 값이 출력됩니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 그룹별 첫번째 값 \nby_species |> \n  slice(1) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 38 × 14\n# Groups:   species [38]\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Ratts Tyer…     79    15 none    grey, … unknown      NA male  mascu… Aleen …\n 2 Dexter Jet…    198   102 none    brown   yellow       NA male  mascu… Ojom   \n 3 Ki-Adi-Mun…    198    82 white   pale    yellow       92 male  mascu… Cerea  \n 4 Mas Amedda     196    NA none    blue    blue         NA male  mascu… Champa…\n 5 Zam Wesell     168    55 blonde  fair, … yellow       NA fema… femin… Zolan  \n 6 C-3PO          167    75 <NA>    gold    yellow      112 none  mascu… Tatooi…\n 7 Sebulba        112    40 none    grey, … orange       NA male  mascu… Malast…\n 8 Wicket Sys…     88    20 brown   brown   brown         8 male  mascu… Endor  \n 9 Poggle the…    183    80 none    green   yellow       NA male  mascu… Geonos…\n10 Jar Jar Bi…    196    66 none    orange  orange       52 male  mascu… Naboo  \n# … with 28 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n```\n:::\n\n```{.r .cell-code}\nby_species |>\n  filter(!is.na(height)) |> \n  slice_min(height,n=2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 48 × 14\n# Groups:   species [38]\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Ratts Tyer…     79    15 none    grey, … unknown      NA male  mascu… Aleen …\n 2 Dexter Jet…    198   102 none    brown   yellow       NA male  mascu… Ojom   \n 3 Ki-Adi-Mun…    198    82 white   pale    yellow       92 male  mascu… Cerea  \n 4 Mas Amedda     196    NA none    blue    blue         NA male  mascu… Champa…\n 5 Zam Wesell     168    55 blonde  fair, … yellow       NA fema… femin… Zolan  \n 6 R2-D2           96    32 <NA>    white,… red          33 none  mascu… Naboo  \n 7 R4-P17          96    NA none    silver… red, b…      NA none  femin… <NA>   \n 8 Sebulba        112    40 none    grey, … orange       NA male  mascu… Malast…\n 9 Wicket Sys…     88    20 brown   brown   brown         8 male  mascu… Endor  \n10 Poggle the…    183    80 none    green   yellow       NA male  mascu… Geonos…\n# … with 38 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}