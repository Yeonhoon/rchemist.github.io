{
  "hash": "956e97f4c532cc91d99e324021020463",
  "result": {
    "markdown": "---\ntitle: \"ggplot2 facet label 설정\"\ndescription: \"ggplot에서 facet을 사용할 때 label을 변경하는 방법에 대해 알아봅시다.\"\ndate: \"2023-02-22\"\ncategories: [R,ggplot2,facet]\n---\n\n::: {.cell}\n\n:::\n\n\nCKD에 따라 그래프를 그린다고 가정해봅시다. CKD 여부에 따른 그래프를 각각 그릴 수 있을 것.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_non_ckd <- data[Chronic_kidney_ds==0]|> \n  ggplot(aes(x=Day, y=mean,\n             group = as.factor(AKI_stage)))+\n  geom_line(aes(color=as.factor(AKI_stage))) +\n  geom_ribbon(aes(y=mean, ymin=mean-sd ,ymax = mean+sd, fill=as.factor(AKI_stage)),\n              alpha=.2) +\n  geom_point(aes(color=as.factor(AKI_stage))) +\n  scale_y_continuous(expand=c(0,0),\n                     limits=c(0,8),\n                     breaks=seq(0,8,1))+\n  scale_color_discrete(name=\"AKI Stage\") + \n  scale_fill_discrete(name=\"AKI Stage\") + \n  theme_classic() + \n  labs(x=\"ICU Days\",\n       y= \"Average Cr (mg/dL)\") +\n  theme(legend.position = \"top\")\n\nplot_ckd <- data[Chronic_kidney_ds==1]|> \n  ggplot(aes(x=Day, y=mean,\n             group = as.factor(AKI_stage)))+\n  geom_line(aes(color=as.factor(AKI_stage))) +\n  geom_ribbon(aes(y=mean, ymin=mean-sd ,ymax = mean+sd, fill=as.factor(AKI_stage)),\n              alpha=.2) +\n  geom_point(aes(color=as.factor(AKI_stage))) +\n  scale_y_continuous(expand=c(0,0),\n                     limits=c(0,8),\n                     breaks=seq(0,8,1))+\n  scale_color_discrete(name=\"AKI Stage\") + \n  scale_fill_discrete(name=\"AKI Stage\") + \n  theme_classic() + \n  labs(x=\"ICU Days\",\n       y= \"Average Cr (mg/dL)\") +\n  theme(legend.position = \"top\")\n\nlibrary(patchwork)\nplot_non_ckd + plot_ckd\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n물론 두 개의 그래프를 각각 보여주는 것도 나쁘지 않습니다. 다만 y축이나 legend는 공통된 값들이기 때문에 두 번 보여줄 필요는 없습니다.\n\n그럴 때는 `facet_grid()` 를 이용해주면 됩니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot <- data|> \n  ggplot(aes(x=Day, y=mean,\n             group = as.factor(AKI_stage)))+\n  geom_line(aes(color=as.factor(AKI_stage))) +\n  geom_ribbon(aes(y=mean, ymin=mean-sd ,ymax = mean+sd, fill=as.factor(AKI_stage)),\n              alpha=.2) +\n  geom_point(aes(color=as.factor(AKI_stage))) +\n  scale_y_continuous(expand=c(0,0),\n                     limits=c(0,8),\n                     breaks=seq(0,8,1))+\n  scale_color_discrete(name=\"AKI Stage\") + \n  scale_fill_discrete(name=\"AKI Stage\") + \n  theme_classic() + \n  labs(x=\"ICU Days\",\n       y= \"Average Cr (mg/dL)\") +\n  theme(legend.position = \"top\")\n\nplot + facet_grid(~Chronic_kidney_ds)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n여기서 CKD 변수의 코딩이 0과 1로 되어있어, 그래프에도 0과 1로 나타났습니다. facet의 label을 수정하려면 아래와 같이 `labeller`를 추가해주면 됩니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nckd_label <- c(\"Non-CKD\",\"CKD\")\nnames(ckd_label) <- c(0,1)\nplot + \n  facet_grid(~Chronic_kidney_ds,\n             labeller = labeller(Chronic_kidney_ds=ckd_label))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n`labeller` 사용이 어렵다면 데이터의 자체를 리코딩(변경)해주면 됩니다.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}