{
  "hash": "826ab687c236851b96ea1aa715e6178c",
  "result": {
    "markdown": "---\ntitle: \"dplyr 기초 문법 이해하기\"\ndescription:  \"파이프 연산자와 함께 `dplyr` 필수 함수들과 문법을 알아봅시다.\"\ndate: '2023-02-01'\ncategories: [dplyr, R]\n---\n\n\n`dplyr` 패키지는 데이터를 다루는 패키지 중 하나로, 아래의 작업을 빠르고 쉽게 도와줄 수 있습니다.\n\n-   데이터를 다루는 흐름을 그대로 코드에 나타냄으로써, 분석 흐름을 이해하기 쉽습니다.\n\n-   단순한 영어 동사로 이루어진 함수들을 제공하여, 작성하는 코드를 이해하기 쉽습니다.\n\n`dplyr` 패키지에 대해 설명하기 위해 `starwars` 데이터를 사용하도록 하겠습니다. 자세한 사항은 `?starwars` 를 통해 확인할 수 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nstarwars\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 14\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Luke Skywa…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n 2 C-3PO          167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n 3 R2-D2           96    32 <NA>    white,… red        33   none  mascu… Naboo  \n 4 Darth Vader    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n 5 Leia Organa    150    49 brown   light   brown      19   fema… femin… Aldera…\n 6 Owen Lars      178   120 brown,… light   blue       52   male  mascu… Tatooi…\n 7 Beru White…    165    75 brown   light   blue       47   fema… femin… Tatooi…\n 8 R5-D4           97    32 <NA>    white,… red        NA   none  mascu… Tatooi…\n 9 Biggs Dark…    183    84 black   light   brown      24   male  mascu… Tatooi…\n10 Obi-Wan Ke…    182    77 auburn… fair    blue-g…    57   male  mascu… Stewjon\n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n```\n:::\n:::\n\n\n`starwars`는 `tibble` 데이터 구조를 갖습니다. 이는 `dplyr` 로 데이터를 불러올 때의 데이터 구조입니다. `tibble`은 `data.frame`과 동일한 구조이지만 다른 점이 존재합니다.\n\n-   `tibble`은 달리 행의 일부분만 보여줍니다.\n\n-   `tibble`은 column의 데이터 유형(type)도 바로 알려줍니다.\n\n### 1. dplyr의 동사들\n\ndplyr는 영어 단어 동사를 함수로 사용하여 데이터를 다루게 됩니다. 이 함수들은 크게 세 가지로 나누어 볼 수 있습니다.\n\n-   행 (Rows)\n\n    -   `filter()` : column을 기준으로 조건에 맞는 행들을 선택합니다.\n\n    -   `slice()` : 위치를 기준으로 행들을 선택합니다.\n\n    -   `arrange()` : 행의 순서를 변경합니다.\n\n-   열 (Columns)\n\n    -   `select()` : 특정 열을 선택합니다.\n\n    -   `rename()` : 열의 이름을 변경합니다.\n\n    -   `mutate()` : 새로운 열을 추가합니다.\n\n    -   `relocate()` : 열의 순서를 변경합니다.\n\n-   행 요약\n\n    -   `summarise()` : 여러 행을 계산합니다.\n\n### 2. Pipe 구조\n\n모든 `dplyr`의 함수는 분석하고자 하는 데이터(`tibble`)을 첫 번째 인자로 받습니다. `dplyr`에서는 `f(x,y)` 구조 보다는 `x %>% f(y)` 형태로 입력합니다. 이 때 `%>%`또는`|>`를 [**pipe 연산자**]{.underline}라고 합니다. 파이프 연산자를 여러 번 사용하여 여러 함수를 이어서 실행할 수 있습니다.\n\n------------------------------------------------------------------------\n\n### 3. `filter()` 행 선택하기\n\n`filter()`는 데이터에서 일부 행들을 선택하는 함수입니다. filter() 안에는 찾고자 하는 조건이 `TRUE`인 행들만 선택이 되게 됩니다.\n\n예를 들어, starwars 데이터에서 `skin_color`가 light이고 `eye_color`가 brown인 경우를 찾을 때는\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |> filter(skin_color=='light',\n                   eye_color=='brown')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 14\n  name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n  <chr>         <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n1 Leia Organa     150    49 brown   light   brown        19 fema… femin… Aldera…\n2 Biggs Darkl…    183    84 black   light   brown        24 male  mascu… Tatooi…\n3 Cordé           157    NA brown   light   brown        NA fema… femin… Naboo  \n4 Dormé           165    NA brown   light   brown        NA fema… femin… Naboo  \n5 Raymus Anti…    188    79 brown   light   brown        NA male  mascu… Aldera…\n6 Poe Dameron      NA    NA brown   light   brown        NA male  mascu… <NA>   \n7 Padmé Amida…    165    45 brown   light   brown        46 fema… femin… Naboo  \n# … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n#   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n#   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n```\n:::\n:::\n\n\n이는 기본 R 코드에서 다음과 같이 구현할 수 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars[starwars$skin_color=='light' & starwars$eye_color=='brown',]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 14\n  name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n  <chr>         <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n1 Leia Organa     150    49 brown   light   brown        19 fema… femin… Aldera…\n2 Biggs Darkl…    183    84 black   light   brown        24 male  mascu… Tatooi…\n3 Cordé           157    NA brown   light   brown        NA fema… femin… Naboo  \n4 Dormé           165    NA brown   light   brown        NA fema… femin… Naboo  \n5 Raymus Anti…    188    79 brown   light   brown        NA male  mascu… Aldera…\n6 Poe Dameron      NA    NA brown   light   brown        NA male  mascu… <NA>   \n7 Padmé Amida…    165    45 brown   light   brown        46 fema… femin… Naboo  \n# … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n#   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n#   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n```\n:::\n:::\n\n\n### 4. `arrange()`: 행 순서 정렬하기\n\n`arrange()`는 `filter()`와 동일하게 행을 다루는 함수입니다. 다만 `arrange()`는 다루는 데이터의 행을 재정렬합니다.\n\n만약 두 가지 이상의 열 이름을 제공하는 경우, 첫 번째 열에서 같은 값이 나왔을 때, 추가적으로 행을 정렬하는 기준이 정해지게 됩니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |> arrange(height, mass)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 14\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Yoda            66    17 white   green   brown       896 male  mascu… <NA>   \n 2 Ratts Tyer…     79    15 none    grey, … unknown      NA male  mascu… Aleen …\n 3 Wicket Sys…     88    20 brown   brown   brown         8 male  mascu… Endor  \n 4 Dud Bolt        94    45 none    blue, … yellow       NA male  mascu… Vulpter\n 5 R2-D2           96    32 <NA>    white,… red          33 none  mascu… Naboo  \n 6 R4-P17          96    NA none    silver… red, b…      NA none  femin… <NA>   \n 7 R5-D4           97    32 <NA>    white,… red          NA none  mascu… Tatooi…\n 8 Sebulba        112    40 none    grey, … orange       NA male  mascu… Malast…\n 9 Gasgano        122    NA none    white,… black        NA male  mascu… Troiken\n10 Watto          137    NA black   blue, … yellow       NA male  mascu… Toydar…\n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n```\n:::\n:::\n\n\nheight를 기준으로 오름차순이 되었고, height가 같은 경우에는 mass가 작은 값부터 오게끔 정렬되었습니다.\n\n만약 내림차순으로 데이터를 정렬하고 싶은 경우는 `desc()` 를 함께 사용하면 됩니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |> arrange(desc(height))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 14\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Yarael Poof    264    NA none    white   yellow     NA   male  mascu… Quermia\n 2 Tarfful        234   136 brown   brown   blue       NA   male  mascu… Kashyy…\n 3 Lama Su        229    88 none    grey    black      NA   male  mascu… Kamino \n 4 Chewbacca      228   112 brown   unknown blue      200   male  mascu… Kashyy…\n 5 Roos Tarpa…    224    82 none    grey    orange     NA   male  mascu… Naboo  \n 6 Grievous       216   159 none    brown,… green,…    NA   male  mascu… Kalee  \n 7 Taun We        213    NA none    grey    black      NA   fema… femin… Kamino \n 8 Rugor Nass     206    NA none    green   orange     NA   male  mascu… Naboo  \n 9 Tion Medon     206    80 none    grey    black      NA   male  mascu… Utapau \n10 Darth Vader    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n```\n:::\n:::\n\n\n### 5. `slice()`: 행의 위치를 통한 행 선택\n\n`slice()`는 행의 번호(index)를 통해 행들을 선택합니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |> slice(5:10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 14\n  name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n  <chr>         <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n1 Leia Organa     150    49 brown   light   brown        19 fema… femin… Aldera…\n2 Owen Lars       178   120 brown,… light   blue         52 male  mascu… Tatooi…\n3 Beru Whites…    165    75 brown   light   blue         47 fema… femin… Tatooi…\n4 R5-D4            97    32 <NA>    white,… red          NA none  mascu… Tatooi…\n5 Biggs Darkl…    183    84 black   light   brown        24 male  mascu… Tatooi…\n6 Obi-Wan Ken…    182    77 auburn… fair    blue-g…      57 male  mascu… Stewjon\n# … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n#   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n#   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n```\n:::\n:::\n\n\n`slice()`와 유사하게 사용할 수 있는 다음과 같습니다.\n\n-   `slice_head()`, `slice_tail()`: 각각 데이터의 첫 \\~행, 마지막 \\~행을 선택할 수 있습니다.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    starwars |> slice_head(n=5)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 5 × 14\n      name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n      <chr>         <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n    1 Luke Skywal…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n    2 C-3PO           167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n    3 R2-D2            96    32 <NA>    white,… red        33   none  mascu… Naboo  \n    4 Darth Vader     202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n    5 Leia Organa     150    49 brown   light   brown      19   fema… femin… Aldera…\n    # … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n    #   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n    #   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n    ```\n    :::\n    :::\n\n\n-   `slice_sample()`: 무작위로 행을 선택합니다. `n`을 통해 행의 개수를 선택하거나, `prop` 옵션을 통해 특정 비율만큼 행을 선택할 수 있습니다.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    starwars |> slice_sample(n=10)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 10 × 14\n       name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n       <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n     1 Tion Medon     206    80 none    grey    black        NA male  mascu… Utapau \n     2 Dooku          193    80 white   fair    brown       102 male  mascu… Serenno\n     3 Cliegg Lars    183    NA brown   fair    blue         82 male  mascu… Tatooi…\n     4 Yoda            66    17 white   green   brown       896 male  mascu… <NA>   \n     5 San Hill       191    NA none    grey    gold         NA male  mascu… Muunil…\n     6 Lama Su        229    88 none    grey    black        NA male  mascu… Kamino \n     7 Eeth Koth      171    NA black   brown   brown        NA male  mascu… Iridon…\n     8 R2-D2           96    32 <NA>    white,… red          33 none  mascu… Naboo  \n     9 Bib Fortuna    180    NA none    pale    pink         NA male  mascu… Ryloth \n    10 Raymus Ant…    188    79 brown   light   brown        NA male  mascu… Aldera…\n    # … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n    #   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n    #   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n    ```\n    :::\n    \n    ```{.r .cell-code}\n    starwars |> slice_sample(prop = 0.1)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 8 × 14\n      name         height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n      <chr>         <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n    1 Zam Wesell      168    55 blonde  fair, … yellow       NA fema… femin… Zolan  \n    2 Plo Koon        188    80 none    orange  black        22 male  mascu… Dorin  \n    3 Finn             NA    NA black   dark    dark         NA male  mascu… <NA>   \n    4 Bail Presto…    191    NA black   tan     brown        67 male  mascu… Aldera…\n    5 Saesee Tiin     188    NA none    pale    orange       NA male  mascu… Iktotch\n    6 Bib Fortuna     180    NA none    pale    pink         NA male  mascu… Ryloth \n    7 Sly Moore       178    48 none    pale    white        NA <NA>  <NA>   Umbara \n    8 R4-P17           96    NA none    silver… red, b…      NA none  femin… <NA>   \n    # … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n    #   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n    #   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n    ```\n    :::\n    :::\n\n\n    `replace=T`를 통해 복원추출을 수행할 수 있습니다.\n\n-   `slice_min()`, `slice_max()`를 통해 특정 열의 가장 높거나 가장 낮은 값을 갖는 행을 선택할 수 있습니다.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    starwars |> \n      slice_max(height,n=3)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 3 × 14\n      name        height  mass hair_c…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n      <chr>        <int> <dbl> <chr>    <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n    1 Yarael Poof    264    NA none     white   yellow       NA male  mascu… Quermia\n    2 Tarfful        234   136 brown    brown   blue         NA male  mascu… Kashyy…\n    3 Lama Su        229    88 none     grey    black        NA male  mascu… Kamino \n    # … with 4 more variables: species <chr>, films <list>, vehicles <list>,\n    #   starships <list>, and abbreviated variable names ¹​hair_color, ²​skin_color,\n    #   ³​eye_color, ⁴​birth_year, ⁵​homeworld\n    ```\n    :::\n    :::\n\n\n### 6. `select()`: 열 선택하기\n\n큰 데이터를 다루게 될 경우, 많은 열이 존재하기 마련입니다. 이 중 분석하고자 하는 일부의 열만 선택할 수 있도록 도와주는 함수가 바로 `select()`입니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |> select(hair_color, skin_color, eye_color)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 3\n   hair_color    skin_color  eye_color\n   <chr>         <chr>       <chr>    \n 1 blond         fair        blue     \n 2 <NA>          gold        yellow   \n 3 <NA>          white, blue red      \n 4 none          white       yellow   \n 5 brown         light       brown    \n 6 brown, grey   light       blue     \n 7 brown         light       blue     \n 8 <NA>          white, red  red      \n 9 black         light       brown    \n10 auburn, white fair        blue-gray\n# … with 77 more rows\n```\n:::\n:::\n\n\n만약 열들이 붙어 있다면 `:`을 이용해 한번에 출력할 수도 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |> select(hair_color:eye_color)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 3\n   hair_color    skin_color  eye_color\n   <chr>         <chr>       <chr>    \n 1 blond         fair        blue     \n 2 <NA>          gold        yellow   \n 3 <NA>          white, blue red      \n 4 none          white       yellow   \n 5 brown         light       brown    \n 6 brown, grey   light       blue     \n 7 brown         light       blue     \n 8 <NA>          white, red  red      \n 9 black         light       brown    \n10 auburn, white fair        blue-gray\n# … with 77 more rows\n```\n:::\n:::\n\n\n또한 `select()` 안에서 열 이름이 갖는 규칙을 활용하여, 특정 규칙만을 갖는 열만 선택할 수 있습니다.\n\n-   `starts_with()` : 특정한 값으로 시작하는 열 이름 찾기\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    starwars |> select(starts_with('hair'))\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 87 × 1\n       hair_color   \n       <chr>        \n     1 blond        \n     2 <NA>         \n     3 <NA>         \n     4 none         \n     5 brown        \n     6 brown, grey  \n     7 brown        \n     8 <NA>         \n     9 black        \n    10 auburn, white\n    # … with 77 more rows\n    ```\n    :::\n    :::\n\n\n-   `ends_with()` : 특정한 값으로 끝나는 열 이름 찾기\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    starwars |> select(ends_with('hair'))\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 87 × 0\n    ```\n    :::\n    :::\n\n\n-   `matches()` : 정규표현식을 통한 열 이름 찾기\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    starwars |> select(matches('^[a-z]{4}_'))\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 87 × 2\n       hair_color    skin_color \n       <chr>         <chr>      \n     1 blond         fair       \n     2 <NA>          gold       \n     3 <NA>          white, blue\n     4 none          white      \n     5 brown         light      \n     6 brown, grey   light      \n     7 brown         light      \n     8 <NA>          white, red \n     9 black         light      \n    10 auburn, white fair       \n    # … with 77 more rows\n    ```\n    :::\n    :::\n\n\n-   `contains()` :특정한 문자가 포함된 열 이름 찾기\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    starwars |> select(contains('_'))\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 87 × 4\n       hair_color    skin_color  eye_color birth_year\n       <chr>         <chr>       <chr>          <dbl>\n     1 blond         fair        blue            19  \n     2 <NA>          gold        yellow         112  \n     3 <NA>          white, blue red             33  \n     4 none          white       yellow          41.9\n     5 brown         light       brown           19  \n     6 brown, grey   light       blue            52  \n     7 brown         light       blue            47  \n     8 <NA>          white, red  red             NA  \n     9 black         light       brown           24  \n    10 auburn, white fair        blue-gray       57  \n    # … with 77 more rows\n    ```\n    :::\n    :::\n\n\n-   `num_range()` : 특정 숫자범위를 갖는 열 이름 찾기\n\n    `num_range()` 함수를 설명하기 위해 `tidyr` 패키지에 있는 `billboard` 데이터를 사용하겠습니다.\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    library(tidyr)\n    billboard |> select(num_range('wk',1:10))\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    # A tibble: 317 × 10\n         wk1   wk2   wk3   wk4   wk5   wk6   wk7   wk8   wk9  wk10\n       <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n     1    87    82    72    77    87    94    99    NA    NA    NA\n     2    91    87    92    NA    NA    NA    NA    NA    NA    NA\n     3    81    70    68    67    66    57    54    53    51    51\n     4    76    76    72    69    67    65    55    59    62    61\n     5    57    34    25    17    17    31    36    49    53    57\n     6    51    39    34    26    26    19     2     2     3     6\n     7    97    97    96    95   100    NA    NA    NA    NA    NA\n     8    84    62    51    41    38    35    35    38    38    36\n     9    59    53    38    28    21    18    16    14    12    10\n    10    76    76    74    69    68    67    61    58    57    59\n    # … with 307 more rows\n    ```\n    :::\n    :::\n\n\n### 7. `rename()`: 열 이름 변경\n\n`select()`문을 이용해 원하는 이름으로 열을 출력할 수도 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |> select(home_world=homeworld)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 1\n   home_world\n   <chr>     \n 1 Tatooine  \n 2 Tatooine  \n 3 Naboo     \n 4 Tatooine  \n 5 Alderaan  \n 6 Tatooine  \n 7 Tatooine  \n 8 Tatooine  \n 9 Tatooine  \n10 Stewjon   \n# … with 77 more rows\n```\n:::\n:::\n\n\n그러나 `select()`는 선택된 열 이외에 다른 열들은 모두 버리기 때문에, `rename()`을 이용해 열 이름을 변경해줄 수 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# rename(new = old)\nstarwars |> rename(home_world = homeworld)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 14\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender home_…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Luke Skywa…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n 2 C-3PO          167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n 3 R2-D2           96    32 <NA>    white,… red        33   none  mascu… Naboo  \n 4 Darth Vader    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n 5 Leia Organa    150    49 brown   light   brown      19   fema… femin… Aldera…\n 6 Owen Lars      178   120 brown,… light   blue       52   male  mascu… Tatooi…\n 7 Beru White…    165    75 brown   light   blue       47   fema… femin… Tatooi…\n 8 R5-D4           97    32 <NA>    white,… red        NA   none  mascu… Tatooi…\n 9 Biggs Dark…    183    84 black   light   brown      24   male  mascu… Tatooi…\n10 Obi-Wan Ke…    182    77 auburn… fair    blue-g…    57   male  mascu… Stewjon\n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​home_world\n```\n:::\n:::\n\n\n### 8. `mutate()`: 새로운 열 추가하기\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |> mutate(height_m = height / 100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 15\n   name        height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <chr>        <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1 Luke Skywa…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n 2 C-3PO          167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n 3 R2-D2           96    32 <NA>    white,… red        33   none  mascu… Naboo  \n 4 Darth Vader    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n 5 Leia Organa    150    49 brown   light   brown      19   fema… femin… Aldera…\n 6 Owen Lars      178   120 brown,… light   blue       52   male  mascu… Tatooi…\n 7 Beru White…    165    75 brown   light   blue       47   fema… femin… Tatooi…\n 8 R5-D4           97    32 <NA>    white,… red        NA   none  mascu… Tatooi…\n 9 Biggs Dark…    183    84 black   light   brown      24   male  mascu… Tatooi…\n10 Obi-Wan Ke…    182    77 auburn… fair    blue-g…    57   male  mascu… Stewjon\n# … with 77 more rows, 5 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, height_m <dbl>, and abbreviated variable\n#   names ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n```\n:::\n:::\n\n\n`tibble` 특성 상 새롭게 만든 열이 바로 보이지 않지만, `select()`를 이용해 출력할 수 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |>\n  mutate(height_m = height / 100) %>%\n  select(height_m, height, everything())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 15\n   height_m height name        mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender\n      <dbl>  <int> <chr>      <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr> \n 1     1.72    172 Luke Skyw…    77 blond   fair    blue       19   male  mascu…\n 2     1.67    167 C-3PO         75 <NA>    gold    yellow    112   none  mascu…\n 3     0.96     96 R2-D2         32 <NA>    white,… red        33   none  mascu…\n 4     2.02    202 Darth Vad…   136 none    white   yellow     41.9 male  mascu…\n 5     1.5     150 Leia Orga…    49 brown   light   brown      19   fema… femin…\n 6     1.78    178 Owen Lars    120 brown,… light   blue       52   male  mascu…\n 7     1.65    165 Beru Whit…    75 brown   light   blue       47   fema… femin…\n 8     0.97     97 R5-D4         32 <NA>    white,… red        NA   none  mascu…\n 9     1.83    183 Biggs Dar…    84 black   light   brown      24   male  mascu…\n10     1.82    182 Obi-Wan K…    77 auburn… fair    blue-g…    57   male  mascu…\n# … with 77 more rows, 5 more variables: homeworld <chr>, species <chr>,\n#   films <list>, vehicles <list>, starships <list>, and abbreviated variable\n#   names ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year\n```\n:::\n:::\n\n\n`mutate()` 안에서 새롭게 만든 열도 접근이 가능합니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |> \n  mutate(\n    height_m = height / 100,\n    BMI = mass / (height_m^2)\n  ) %>%\n  select(BMI, everything())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 16\n     BMI name  height  mass hair_…¹ skin_…² eye_c…³ birth…⁴ sex   gender homew…⁵\n   <dbl> <chr>  <int> <dbl> <chr>   <chr>   <chr>     <dbl> <chr> <chr>  <chr>  \n 1  26.0 Luke…    172    77 blond   fair    blue       19   male  mascu… Tatooi…\n 2  26.9 C-3PO    167    75 <NA>    gold    yellow    112   none  mascu… Tatooi…\n 3  34.7 R2-D2     96    32 <NA>    white,… red        33   none  mascu… Naboo  \n 4  33.3 Dart…    202   136 none    white   yellow     41.9 male  mascu… Tatooi…\n 5  21.8 Leia…    150    49 brown   light   brown      19   fema… femin… Aldera…\n 6  37.9 Owen…    178   120 brown,… light   blue       52   male  mascu… Tatooi…\n 7  27.5 Beru…    165    75 brown   light   blue       47   fema… femin… Tatooi…\n 8  34.0 R5-D4     97    32 <NA>    white,… red        NA   none  mascu… Tatooi…\n 9  25.1 Bigg…    183    84 black   light   brown      24   male  mascu… Tatooi…\n10  23.2 Obi-…    182    77 auburn… fair    blue-g…    57   male  mascu… Stewjon\n# … with 77 more rows, 5 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, height_m <dbl>, and abbreviated variable\n#   names ¹​hair_color, ²​skin_color, ³​eye_color, ⁴​birth_year, ⁵​homeworld\n```\n:::\n:::\n\n\n만약 기존의 열은 없애고 새로운 열만 남기고 싶다면, `transmute()` 를 이용할 수 있습니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |>\n  transmute(\n    height_m = height / 100,\n    BMI = mass / (height_m^2)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 2\n   height_m   BMI\n      <dbl> <dbl>\n 1     1.72  26.0\n 2     1.67  26.9\n 3     0.96  34.7\n 4     2.02  33.3\n 5     1.5   21.8\n 6     1.78  37.9\n 7     1.65  27.5\n 8     0.97  34.0\n 9     1.83  25.1\n10     1.82  23.2\n# … with 77 more rows\n```\n:::\n:::\n\n\n### 9. `relocate()`: 열의 순서 변경\n\n`relocate()`는 옮길 열들과, 옮길 위치를 지정해주면 됩니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# .before or .after\nstarwars |> relocate(sex:homeworld, # 옮길 열들\n                    .before = height # 옮길 위치\n                    )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 × 14\n   name        sex   gender homew…¹ height  mass hair_…² skin_…³ eye_c…⁴ birth…⁵\n   <chr>       <chr> <chr>  <chr>    <int> <dbl> <chr>   <chr>   <chr>     <dbl>\n 1 Luke Skywa… male  mascu… Tatooi…    172    77 blond   fair    blue       19  \n 2 C-3PO       none  mascu… Tatooi…    167    75 <NA>    gold    yellow    112  \n 3 R2-D2       none  mascu… Naboo       96    32 <NA>    white,… red        33  \n 4 Darth Vader male  mascu… Tatooi…    202   136 none    white   yellow     41.9\n 5 Leia Organa fema… femin… Aldera…    150    49 brown   light   brown      19  \n 6 Owen Lars   male  mascu… Tatooi…    178   120 brown,… light   blue       52  \n 7 Beru White… fema… femin… Tatooi…    165    75 brown   light   blue       47  \n 8 R5-D4       none  mascu… Tatooi…     97    32 <NA>    white,… red        NA  \n 9 Biggs Dark… male  mascu… Tatooi…    183    84 black   light   brown      24  \n10 Obi-Wan Ke… male  mascu… Stewjon    182    77 auburn… fair    blue-g…    57  \n# … with 77 more rows, 4 more variables: species <chr>, films <list>,\n#   vehicles <list>, starships <list>, and abbreviated variable names\n#   ¹​homeworld, ²​hair_color, ³​skin_color, ⁴​eye_color, ⁵​birth_year\n```\n:::\n:::\n\n\n### 10. `summarise()`: 값들 요약\n\n`summarise()` 는 하나의 열을 평균, 표준편차, 중앙값 등으로 요약하기 위해 함께 사용되는 함수입니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars |> summarise(height = mean(height, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  height\n   <dbl>\n1   174.\n```\n:::\n:::\n\n\n`dplyr`와 `%>%`(또는 `|>`)를 사용하여 출력했을 때, 출력된 값이 저장되지 않습니다. 즉 분석하는 데이터에는 변경사항이 없습니다. 만약 새로운 열을 추가하거나 이름을 변경할 때, 또는 계산한 값을 저장하기 위해서는 `<-` 를 이용해 데이터에 저장하거나 새로운 값으로 선언해야 합니다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars2 <- starwars %>%\n  group_by(species, sex) %>%\n  select(height, mass) %>%\n  summarise(\n    height = mean(height, na.rm = TRUE),\n    mass = mean(mass, na.rm = TRUE)\n  )\n\n# starwars2에는 group_by 후 summarise한 값만 존재\nstarwars2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 41 × 4\n# Groups:   species [38]\n   species   sex    height  mass\n   <chr>     <chr>   <dbl> <dbl>\n 1 Aleena    male      79   15  \n 2 Besalisk  male     198  102  \n 3 Cerean    male     198   82  \n 4 Chagrian  male     196  NaN  \n 5 Clawdite  female   168   55  \n 6 Droid     none     131.  69.8\n 7 Dug       male     112   40  \n 8 Ewok      male      88   20  \n 9 Geonosian male     183   80  \n10 Gungan    male     209.  74  \n# … with 31 more rows\n```\n:::\n:::\n\n\nReference\n\n-   https://dplyr.tidyverse.org/articles/dplyr.html\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}